{
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Bandit",
          "rules": [
            {
              "id": "B105",
              "name": "hardcoded_password_string",
              "helpUri": "https://bandit.readthedocs.io/en/1.8.6/plugins/b105_hardcoded_password_string.html"
            },
            {
              "id": "B110",
              "name": "try_except_pass",
              "helpUri": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html"
            },
            {
              "id": "B311",
              "name": "blacklist",
              "helpUri": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random"
            },
            {
              "id": "B101",
              "name": "assert_used",
              "helpUri": "https://bandit.readthedocs.io/en/1.8.6/plugins/b101_assert_used.html"
            },
            {
              "id": "B107",
              "name": "hardcoded_password_default",
              "helpUri": "https://bandit.readthedocs.io/en/1.8.6/plugins/b107_hardcoded_password_default.html"
            },
            {
              "id": "B104",
              "name": "hardcoded_bind_all_interfaces",
              "helpUri": "https://bandit.readthedocs.io/en/1.8.6/plugins/b104_hardcoded_bind_all_interfaces.html"
            },
            {
              "id": "B404",
              "name": "blacklist",
              "helpUri": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b404-import-subprocess"
            },
            {
              "id": "B607",
              "name": "start_process_with_partial_path",
              "helpUri": "https://bandit.readthedocs.io/en/1.8.6/plugins/b607_start_process_with_partial_path.html"
            },
            {
              "id": "B603",
              "name": "subprocess_without_shell_equals_true",
              "helpUri": "https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html"
            }
          ]
        }
      },
      "invocations": [
        {
          "executionSuccessful": true,
          "endTimeUtc": "2025-10-04T05:30:49Z"
        }
      ],
      "properties": {
        "metrics": {
          "_totals": {
            "loc": 19425,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "SEVERITY.LOW": 1365,
            "CONFIDENCE.LOW": 0,
            "SEVERITY.MEDIUM": 1,
            "CONFIDENCE.MEDIUM": 13,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.HIGH": 1353
          },
          "ThermaCoreApp/backend/app/__init__.py": {
            "loc": 269,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/exceptions.py": {
            "loc": 309,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/middleware/__init__.py": {
            "loc": 75,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/middleware/audit.py": {
            "loc": 358,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 4,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 1,
            "CONFIDENCE.HIGH": 3
          },
          "ThermaCoreApp/backend/app/middleware/metrics.py": {
            "loc": 289,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/middleware/rate_limit.py": {
            "loc": 188,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/middleware/request_id.py": {
            "loc": 162,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/middleware/validation.py": {
            "loc": 202,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/models/__init__.py": {
            "loc": 181,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/protocols/__init__.py": {
            "loc": 1,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/protocols/base.py": {
            "loc": 107,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/protocols/registry.py": {
            "loc": 112,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/routes/__init__.py": {
            "loc": 0,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/routes/analytics.py": {
            "loc": 325,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/routes/auth.py": {
            "loc": 351,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/routes/examples.py": {
            "loc": 124,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/routes/historical.py": {
            "loc": 480,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/routes/multiprotocol.py": {
            "loc": 378,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/routes/remote_control.py": {
            "loc": 154,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/routes/scada.py": {
            "loc": 774,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/routes/units.py": {
            "loc": 487,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/routes/users.py": {
            "loc": 395,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/services/__init__.py": {
            "loc": 1,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/services/anomaly_detection.py": {
            "loc": 291,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/services/data_storage_service.py": {
            "loc": 158,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/services/dnp3_service.py": {
            "loc": 893,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 10,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 10
          },
          "ThermaCoreApp/backend/app/services/modbus_service.py": {
            "loc": 553,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 5,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 5
          },
          "ThermaCoreApp/backend/app/services/mqtt_service.py": {
            "loc": 276,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/services/opcua_service.py": {
            "loc": 487,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 1,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 1
          },
          "ThermaCoreApp/backend/app/services/protocol_gateway_simulator.py": {
            "loc": 291,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 14,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 14
          },
          "ThermaCoreApp/backend/app/services/realtime_processor.py": {
            "loc": 229,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/services/websocket_service.py": {
            "loc": 199,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/tests/__init__.py": {
            "loc": 0,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/tests/conftest.py": {
            "loc": 131,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/tests/test_audit_logging.py": {
            "loc": 244,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 40,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 40
          },
          "ThermaCoreApp/backend/app/tests/test_auth.py": {
            "loc": 238,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 40,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 4,
            "CONFIDENCE.HIGH": 36
          },
          "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py": {
            "loc": 169,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 25,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 25
          },
          "ThermaCoreApp/backend/app/tests/test_centralized_validation.py": {
            "loc": 115,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 31,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 31
          },
          "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py": {
            "loc": 157,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 23,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 23
          },
          "ThermaCoreApp/backend/app/tests/test_datetime_field.py": {
            "loc": 41,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 9,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 9
          },
          "ThermaCoreApp/backend/app/tests/test_datetime_improvements.py": {
            "loc": 133,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 21,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 21
          },
          "ThermaCoreApp/backend/app/tests/test_dnp3_cache_optimization.py": {
            "loc": 65,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 13,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 13
          },
          "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py": {
            "loc": 237,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 83,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 83
          },
          "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py": {
            "loc": 151,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 27,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 27
          },
          "ThermaCoreApp/backend/app/tests/test_error_message_security.py": {
            "loc": 115,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 40,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 1,
            "CONFIDENCE.HIGH": 39
          },
          "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py": {
            "loc": 112,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 25,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 25
          },
          "ThermaCoreApp/backend/app/tests/test_improvements.py": {
            "loc": 132,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 12,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 12
          },
          "ThermaCoreApp/backend/app/tests/test_integration.py": {
            "loc": 313,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 41,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 1,
            "CONFIDENCE.HIGH": 40
          },
          "ThermaCoreApp/backend/app/tests/test_modbus_optimization.py": {
            "loc": 68,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 13,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 13
          },
          "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py": {
            "loc": 218,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 24,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 24
          },
          "ThermaCoreApp/backend/app/tests/test_mqtt_service.py": {
            "loc": 209,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 36,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 36
          },
          "ThermaCoreApp/backend/app/tests/test_postgres_timestamps.py": {
            "loc": 133,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 9,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 9
          },
          "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py": {
            "loc": 442,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 134,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 1,
            "CONFIDENCE.HIGH": 133
          },
          "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py": {
            "loc": 211,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 70,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 70
          },
          "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py": {
            "loc": 197,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 63,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 63
          },
          "ThermaCoreApp/backend/app/tests/test_recommendations_2_improvements.py": {
            "loc": 79,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 16,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 16
          },
          "ThermaCoreApp/backend/app/tests/test_reviewer_batch_1_3_improvements.py": {
            "loc": 265,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 8,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 8
          },
          "ThermaCoreApp/backend/app/tests/test_run_debug_mode.py": {
            "loc": 36,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 9,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 9
          },
          "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py": {
            "loc": 292,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 56,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 1,
            "CONFIDENCE.HIGH": 55
          },
          "ThermaCoreApp/backend/app/tests/test_scada_integration.py": {
            "loc": 137,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 37,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 37
          },
          "ThermaCoreApp/backend/app/tests/test_scada_security.py": {
            "loc": 45,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 8,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 8
          },
          "ThermaCoreApp/backend/app/tests/test_secure_logger.py": {
            "loc": 239,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 68,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 68
          },
          "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py": {
            "loc": 111,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 24,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 24
          },
          "ThermaCoreApp/backend/app/tests/test_security_hardening_improvements.py": {
            "loc": 219,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 17,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 17
          },
          "ThermaCoreApp/backend/app/tests/test_security_improvements.py": {
            "loc": 94,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 17,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 17
          },
          "ThermaCoreApp/backend/app/tests/test_sql_improvements.py": {
            "loc": 55,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 6,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 6
          },
          "ThermaCoreApp/backend/app/tests/test_status_utils.py": {
            "loc": 146,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 33,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 33
          },
          "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py": {
            "loc": 150,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 27,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 27
          },
          "ThermaCoreApp/backend/app/tests/test_units.py": {
            "loc": 331,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 53,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 3,
            "CONFIDENCE.HIGH": 50
          },
          "ThermaCoreApp/backend/app/tests/test_websocket_service.py": {
            "loc": 224,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 51,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 51
          },
          "ThermaCoreApp/backend/app/tests/timestamp_helpers.py": {
            "loc": 123,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 3,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 3
          },
          "ThermaCoreApp/backend/app/utils/__init__.py": {
            "loc": 0,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/utils/environment.py": {
            "loc": 210,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/utils/error_handler.py": {
            "loc": 277,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/utils/helpers.py": {
            "loc": 283,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/utils/logging_filter.py": {
            "loc": 47,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/utils/schemas.py": {
            "loc": 315,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/utils/secure_logger.py": {
            "loc": 112,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/app/utils/status_utils.py": {
            "loc": 144,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/config.py": {
            "loc": 110,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/demonstrate_improvements.py": {
            "loc": 202,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/pr2_demo.py": {
            "loc": 152,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/run.py": {
            "loc": 69,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 1,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 1,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/run_complete_tests.py": {
            "loc": 415,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 7,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 7
          },
          "ThermaCoreApp/backend/scripts/performance_tests.py": {
            "loc": 402,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 37,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 37
          },
          "ThermaCoreApp/backend/test_basic_structure.py": {
            "loc": 48,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 4,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 4
          },
          "ThermaCoreApp/backend/test_domain_exceptions_basic.py": {
            "loc": 132,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 21,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 21
          },
          "ThermaCoreApp/backend/test_full_structure.py": {
            "loc": 175,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 3,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 3
          },
          "ThermaCoreApp/backend/test_logging_correlation_improvements.py": {
            "loc": 157,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 12,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 12
          },
          "ThermaCoreApp/backend/test_pr2_manual.py": {
            "loc": 107,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 7,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 7
          },
          "ThermaCoreApp/backend/validate_dnp3_optimization.py": {
            "loc": 111,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/backend/validate_pr2.py": {
            "loc": 145,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 5,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 5
          },
          "ThermaCoreApp/validate_implementation.py": {
            "loc": 229,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 0,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 0
          },
          "ThermaCoreApp/validate_secure_logging.py": {
            "loc": 107,
            "nosec": 0,
            "skipped_tests": 0,
            "SEVERITY.UNDEFINED": 0,
            "SEVERITY.LOW": 23,
            "SEVERITY.MEDIUM": 0,
            "SEVERITY.HIGH": 0,
            "CONFIDENCE.UNDEFINED": 0,
            "CONFIDENCE.LOW": 0,
            "CONFIDENCE.MEDIUM": 0,
            "CONFIDENCE.HIGH": 23
          }
        }
      },
      "results": [
        {
          "message": {
            "text": "Possible hardcoded password: 'token_refresh'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    TOKEN_REFRESH = \"token_refresh\"\n"
                  },
                  "startLine": 89
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/middleware/audit.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    LOGOUT = \"logout\"\n    TOKEN_REFRESH = \"token_refresh\"\n    \n"
                  },
                  "endLine": 90,
                  "startLine": 88
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B105",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Try, Except, Pass detected."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                except Exception:\n"
                  },
                  "startLine": 171
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/middleware/audit.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                            username = user.username\n                except Exception:\n                    # Don't fail audit logging due to JWT issues or int conversion\n                    pass\n            \n"
                  },
                  "endLine": 174,
                  "startLine": 170
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B110",
          "ruleIndex": 1
        },
        {
          "message": {
            "text": "Try, Except, Pass detected."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            except Exception:\n"
                  },
                  "startLine": 316
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/middleware/audit.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                            username = user.username\n            except Exception:\n                pass\n            \n"
                  },
                  "endLine": 318,
                  "startLine": 315
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B110",
          "ruleIndex": 1
        },
        {
          "message": {
            "text": "Try, Except, Pass detected."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    except Exception:\n"
                  },
                  "startLine": 344
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/middleware/audit.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                            details['response_data'] = response_data['data']\n                    except Exception:\n                        pass\n                \n"
                  },
                  "endLine": 346,
                  "startLine": 343
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B110",
          "ruleIndex": 1
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            connection_delay = random.uniform(0.1, 0.3)  # Simulate network delay\n"
                  },
                  "startLine": 236
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/dnp3_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            import random\n            connection_delay = random.uniform(0.1, 0.3)  # Simulate network delay\n            time.sleep(connection_delay)\n"
                  },
                  "endLine": 237,
                  "startLine": 235
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                value = prev_value if random.random() > 0.1 else not prev_value\n"
                  },
                  "startLine": 289
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/dnp3_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                prev_value = self.data_cache[outstation_address][cache_key]\n                value = prev_value if random.random() > 0.1 else not prev_value\n            else:\n"
                  },
                  "endLine": 290,
                  "startLine": 288
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                value = random.choice([True, False])\n"
                  },
                  "startLine": 291
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/dnp3_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            else:\n                value = random.choice([True, False])\n            \n"
                  },
                  "endLine": 292,
                  "startLine": 290
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                variation = prev_value * 0.05 * (random.random() - 0.5)\n"
                  },
                  "startLine": 324
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/dnp3_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Add small variation (\u00b15%)\n                variation = prev_value * 0.05 * (random.random() - 0.5)\n                value = max(0, prev_value + variation)\n"
                  },
                  "endLine": 325,
                  "startLine": 323
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    value = 20.0 + random.uniform(0, 60)  # 20-80\u00b0C\n"
                  },
                  "startLine": 329
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/dnp3_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                if index < 10:  # Temperature sensors\n                    value = 20.0 + random.uniform(0, 60)  # 20-80\u00b0C\n                elif index < 20:  # Pressure sensors\n"
                  },
                  "endLine": 330,
                  "startLine": 328
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    value = random.uniform(0, 150)  # 0-150 PSI\n"
                  },
                  "startLine": 331
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/dnp3_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                elif index < 20:  # Pressure sensors\n                    value = random.uniform(0, 150)  # 0-150 PSI\n                elif index < 30:  # Flow sensors\n"
                  },
                  "endLine": 332,
                  "startLine": 330
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    value = random.uniform(0, 100)  # 0-100 L/min\n"
                  },
                  "startLine": 333
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/dnp3_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                elif index < 30:  # Flow sensors\n                    value = random.uniform(0, 100)  # 0-100 L/min\n                else:\n"
                  },
                  "endLine": 334,
                  "startLine": 332
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    value = random.uniform(0, 1000)  # Generic 0-1000\n"
                  },
                  "startLine": 335
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/dnp3_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                else:\n                    value = random.uniform(0, 1000)  # Generic 0-1000\n            \n"
                  },
                  "endLine": 336,
                  "startLine": 334
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                value = prev_value + random.randint(0, 10)  # Increment\n"
                  },
                  "startLine": 368
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/dnp3_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                prev_value = self.data_cache[outstation_address][cache_key]\n                value = prev_value + random.randint(0, 10)  # Increment\n            else:\n"
                  },
                  "endLine": 369,
                  "startLine": 367
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                value = random.randint(0, 1000000)  # Initial counter value\n"
                  },
                  "startLine": 370
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/dnp3_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            else:\n                value = random.randint(0, 1000000)  # Initial counter value\n            \n"
                  },
                  "endLine": 371,
                  "startLine": 369
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                value = int((20 + random.uniform(0, 60)) * 100)  # 20-80\u00b0C scaled by 100\n"
                  },
                  "startLine": 89
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/modbus_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            if reg_addr < 100:  # Temperature registers\n                value = int((20 + random.uniform(0, 60)) * 100)  # 20-80\u00b0C scaled by 100\n            elif reg_addr < 200:  # Pressure registers  \n"
                  },
                  "endLine": 90,
                  "startLine": 88
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                value = int((0 + random.uniform(0, 150)) * 100)  # 0-150 PSI scaled by 100\n"
                  },
                  "startLine": 91
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/modbus_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            elif reg_addr < 200:  # Pressure registers  \n                value = int((0 + random.uniform(0, 150)) * 100)  # 0-150 PSI scaled by 100\n            elif reg_addr < 300:  # Flow registers\n"
                  },
                  "endLine": 92,
                  "startLine": 90
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                value = int((0 + random.uniform(0, 100)) * 100)  # 0-100 L/min scaled by 100\n"
                  },
                  "startLine": 93
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/modbus_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            elif reg_addr < 300:  # Flow registers\n                value = int((0 + random.uniform(0, 100)) * 100)  # 0-100 L/min scaled by 100\n            else:  # Generic registers\n"
                  },
                  "endLine": 94,
                  "startLine": 92
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                value = random.randint(0, 65535)\n"
                  },
                  "startLine": 95
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/modbus_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            else:  # Generic registers\n                value = random.randint(0, 65535)\n                \n"
                  },
                  "endLine": 96,
                  "startLine": 94
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        coils = [random.choice([True, False]) for _ in range(count)]\n"
                  },
                  "startLine": 118
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/modbus_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        import random\n        coils = [random.choice([True, False]) for _ in range(count)]\n        # Use configurable logging for register addresses\n"
                  },
                  "endLine": 119,
                  "startLine": 117
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Try, Except, Pass detected."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                        except:\n"
                  },
                  "startLine": 641
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/opcua_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                            node_info['value'] = child.get_value()\n                        except:\n                            pass\n                    \n"
                  },
                  "endLine": 643,
                  "startLine": 640
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B110",
          "ruleIndex": 1
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                base_val = config['base_value'] + random.uniform(-config['noise_factor'], config['noise_factor'])\n"
                  },
                  "startLine": 81
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/protocol_gateway_simulator.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            for sensor_type, config in self.sensor_configs.items():\n                base_val = config['base_value'] + random.uniform(-config['noise_factor'], config['noise_factor'])\n                self.unit_states[unit_id]['last_values'][sensor_type] = base_val\n"
                  },
                  "endLine": 82,
                  "startLine": 80
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                self.unit_states[unit_id]['trend_direction'][sensor_type] = random.choice([-1, 1])\n"
                  },
                  "startLine": 83
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/protocol_gateway_simulator.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                self.unit_states[unit_id]['last_values'][sensor_type] = base_val\n                self.unit_states[unit_id]['trend_direction'][sensor_type] = random.choice([-1, 1])\n    \n"
                  },
                  "endLine": 84,
                  "startLine": 82
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        base_change = random.uniform(0.1, 2.0) * trend\n"
                  },
                  "startLine": 146
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/protocol_gateway_simulator.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Generate new value with trend\n        base_change = random.uniform(0.1, 2.0) * trend\n        noise = random.uniform(-config['noise_factor'] * 0.1, config['noise_factor'] * 0.1)\n"
                  },
                  "endLine": 147,
                  "startLine": 145
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        noise = random.uniform(-config['noise_factor'] * 0.1, config['noise_factor'] * 0.1)\n"
                  },
                  "startLine": 147
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/protocol_gateway_simulator.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        base_change = random.uniform(0.1, 2.0) * trend\n        noise = random.uniform(-config['noise_factor'] * 0.1, config['noise_factor'] * 0.1)\n        new_value = last_value + base_change + noise\n"
                  },
                  "endLine": 148,
                  "startLine": 146
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        if random.random() < 0.1:  # 10% chance to change trend\n"
                  },
                  "startLine": 155
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/protocol_gateway_simulator.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Randomly change trend direction\n        if random.random() < 0.1:  # 10% chance to change trend\n            unit_state['trend_direction'][sensor_type] *= -1\n"
                  },
                  "endLine": 156,
                  "startLine": 154
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        if random.random() < unit_state['anomaly_probability']:\n"
                  },
                  "startLine": 160
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/protocol_gateway_simulator.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        quality = 'GOOD'\n        if random.random() < unit_state['anomaly_probability']:\n            # Generate anomalous reading\n"
                  },
                  "endLine": 161,
                  "startLine": 159
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            if random.random() < 0.5:\n"
                  },
                  "startLine": 162
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/protocol_gateway_simulator.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Generate anomalous reading\n            if random.random() < 0.5:\n                new_value = random.uniform(min_val * 0.5, max_val * 1.2)  # Out of normal range\n"
                  },
                  "endLine": 163,
                  "startLine": 161
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                new_value = random.uniform(min_val * 0.5, max_val * 1.2)  # Out of normal range\n"
                  },
                  "startLine": 163
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/protocol_gateway_simulator.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            if random.random() < 0.5:\n                new_value = random.uniform(min_val * 0.5, max_val * 1.2)  # Out of normal range\n            quality = 'UNCERTAIN'\n"
                  },
                  "endLine": 164,
                  "startLine": 162
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        if random.random() < 0.01:  # 1% chance\n"
                  },
                  "startLine": 167
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/protocol_gateway_simulator.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Very rarely generate bad quality\n        if random.random() < 0.01:  # 1% chance\n            quality = 'BAD'\n"
                  },
                  "endLine": 168,
                  "startLine": 166
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        if random.random() < 0.001:  # Very rare status changes\n"
                  },
                  "startLine": 215
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/protocol_gateway_simulator.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \"\"\"\n        if random.random() < 0.001:  # Very rare status changes\n            current_status = self.unit_states[unit_id]['status']\n"
                  },
                  "endLine": 216,
                  "startLine": 214
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                new_status = random.choice(['maintenance', 'warning'])\n"
                  },
                  "startLine": 220
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/protocol_gateway_simulator.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            if current_status == 'online':\n                new_status = random.choice(['maintenance', 'warning'])\n            elif current_status in ['maintenance', 'warning']:\n"
                  },
                  "endLine": 221,
                  "startLine": 219
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                new_status = 'online' if random.random() < 0.7 else 'offline'\n"
                  },
                  "startLine": 222
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/protocol_gateway_simulator.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            elif current_status in ['maintenance', 'warning']:\n                new_status = 'online' if random.random() < 0.7 else 'offline'\n            elif current_status == 'offline':\n"
                  },
                  "endLine": 223,
                  "startLine": 221
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            unit_id = random.choice(self.simulation_units)\n"
                  },
                  "startLine": 300
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/protocol_gateway_simulator.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        if not unit_id:\n            unit_id = random.choice(self.simulation_units)\n        \n"
                  },
                  "endLine": 301,
                  "startLine": 299
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            sensor_type = random.choice(list(self.sensor_configs.keys()))\n"
                  },
                  "startLine": 320
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/services/protocol_gateway_simulator.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Inject bad quality data\n            sensor_type = random.choice(list(self.sensor_configs.keys()))\n            sensor_data = {\n"
                  },
                  "endLine": 321,
                  "startLine": 319
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert mock_logger.info.called\n"
                  },
                  "startLine": 29
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Verify logger was called\n            assert mock_logger.info.called\n            call_args = mock_logger.info.call_args\n"
                  },
                  "endLine": 30,
                  "startLine": 28
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'AUDIT: login_success' in message\n"
                  },
                  "startLine": 32
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            message = call_args[0][0]\n            assert 'AUDIT: login_success' in message\n            assert 'testuser' in message\n"
                  },
                  "endLine": 33,
                  "startLine": 31
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'testuser' in message\n"
                  },
                  "startLine": 33
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'AUDIT: login_success' in message\n            assert 'testuser' in message\n    \n"
                  },
                  "endLine": 34,
                  "startLine": 32
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert mock_logger.info.called\n"
                  },
                  "startLine": 45
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \n            assert mock_logger.info.called\n            call_args = mock_logger.info.call_args\n"
                  },
                  "endLine": 46,
                  "startLine": 44
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert audit_record['event_type'] == 'login_success'\n"
                  },
                  "startLine": 50
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \n            assert audit_record['event_type'] == 'login_success'\n            assert audit_record['username'] == 'admin'\n"
                  },
                  "endLine": 51,
                  "startLine": 49
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert audit_record['username'] == 'admin'\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert audit_record['event_type'] == 'login_success'\n            assert audit_record['username'] == 'admin'\n            assert audit_record['outcome'] == 'success'\n"
                  },
                  "endLine": 52,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert audit_record['outcome'] == 'success'\n"
                  },
                  "startLine": 52
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert audit_record['username'] == 'admin'\n            assert audit_record['outcome'] == 'success'\n            assert audit_record['details']['user_id'] == 1\n"
                  },
                  "endLine": 53,
                  "startLine": 51
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert audit_record['details']['user_id'] == 1\n"
                  },
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert audit_record['outcome'] == 'success'\n            assert audit_record['details']['user_id'] == 1\n    \n"
                  },
                  "endLine": 54,
                  "startLine": 52
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert mock_logger.warning.called\n"
                  },
                  "startLine": 65
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \n            assert mock_logger.warning.called\n            call_args = mock_logger.warning.call_args\n"
                  },
                  "endLine": 66,
                  "startLine": 64
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert audit_record['event_type'] == 'login_failure'\n"
                  },
                  "startLine": 70
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \n            assert audit_record['event_type'] == 'login_failure'\n            assert audit_record['severity'] == 'warning'\n"
                  },
                  "endLine": 71,
                  "startLine": 69
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert audit_record['severity'] == 'warning'\n"
                  },
                  "startLine": 71
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert audit_record['event_type'] == 'login_failure'\n            assert audit_record['severity'] == 'warning'\n            assert audit_record['outcome'] == 'failure'\n"
                  },
                  "endLine": 72,
                  "startLine": 70
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert audit_record['outcome'] == 'failure'\n"
                  },
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert audit_record['severity'] == 'warning'\n            assert audit_record['outcome'] == 'failure'\n    \n"
                  },
                  "endLine": 73,
                  "startLine": 71
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert mock_logger.info.called\n"
                  },
                  "startLine": 85
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \n            assert mock_logger.info.called\n            call_args = mock_logger.info.call_args\n"
                  },
                  "endLine": 86,
                  "startLine": 84
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert audit_record['event_type'] == 'permission_granted'\n"
                  },
                  "startLine": 90
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \n            assert audit_record['event_type'] == 'permission_granted'\n            assert audit_record['outcome'] == 'success'\n"
                  },
                  "endLine": 91,
                  "startLine": 89
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert audit_record['outcome'] == 'success'\n"
                  },
                  "startLine": 91
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert audit_record['event_type'] == 'permission_granted'\n            assert audit_record['outcome'] == 'success'\n            assert audit_record['details']['permission'] == 'read_units'\n"
                  },
                  "endLine": 92,
                  "startLine": 90
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert audit_record['details']['permission'] == 'read_units'\n"
                  },
                  "startLine": 92
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert audit_record['outcome'] == 'success'\n            assert audit_record['details']['permission'] == 'read_units'\n    \n"
                  },
                  "endLine": 93,
                  "startLine": 91
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert mock_logger.warning.called\n"
                  },
                  "startLine": 105
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \n            assert mock_logger.warning.called\n            call_args = mock_logger.warning.call_args\n"
                  },
                  "endLine": 106,
                  "startLine": 104
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert audit_record['event_type'] == 'permission_denied'\n"
                  },
                  "startLine": 110
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \n            assert audit_record['event_type'] == 'permission_denied'\n            assert audit_record['outcome'] == 'denied'\n"
                  },
                  "endLine": 111,
                  "startLine": 109
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert audit_record['outcome'] == 'denied'\n"
                  },
                  "startLine": 111
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert audit_record['event_type'] == 'permission_denied'\n            assert audit_record['outcome'] == 'denied'\n            assert audit_record['severity'] == 'warning'\n"
                  },
                  "endLine": 112,
                  "startLine": 110
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert audit_record['severity'] == 'warning'\n"
                  },
                  "startLine": 112
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert audit_record['outcome'] == 'denied'\n            assert audit_record['severity'] == 'warning'\n    \n"
                  },
                  "endLine": 113,
                  "startLine": 111
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert mock_logger.info.called\n"
                  },
                  "startLine": 126
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \n            assert mock_logger.info.called\n            call_args = mock_logger.info.call_args\n"
                  },
                  "endLine": 127,
                  "startLine": 125
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert audit_record['event_type'] == 'create'\n"
                  },
                  "startLine": 131
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \n            assert audit_record['event_type'] == 'create'\n            assert audit_record['resource'] == 'unit'\n"
                  },
                  "endLine": 132,
                  "startLine": 130
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert audit_record['resource'] == 'unit'\n"
                  },
                  "startLine": 132
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert audit_record['event_type'] == 'create'\n            assert audit_record['resource'] == 'unit'\n            assert audit_record['resource_id'] == 'TC001'\n"
                  },
                  "endLine": 133,
                  "startLine": 131
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert audit_record['resource_id'] == 'TC001'\n"
                  },
                  "startLine": 133
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert audit_record['resource'] == 'unit'\n            assert audit_record['resource_id'] == 'TC001'\n            assert audit_record['action'] == 'create_unit'\n"
                  },
                  "endLine": 134,
                  "startLine": 132
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert audit_record['action'] == 'create_unit'\n"
                  },
                  "startLine": 134
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert audit_record['resource_id'] == 'TC001'\n            assert audit_record['action'] == 'create_unit'\n    \n"
                  },
                  "endLine": 135,
                  "startLine": 133
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert logger_method.called\n"
                  },
                  "startLine": 155
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                logger_method = getattr(mock_logger, expected_method)\n                assert logger_method.called\n\n"
                  },
                  "endLine": 156,
                  "startLine": 154
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert call_args['operation'] == 'CREATE'\n"
                  },
                  "startLine": 175
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                call_args = mock_audit.call_args[1]\n                assert call_args['operation'] == 'CREATE'\n                assert call_args['resource'] == 'test_resource'\n"
                  },
                  "endLine": 176,
                  "startLine": 174
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert call_args['resource'] == 'test_resource'\n"
                  },
                  "startLine": 176
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert call_args['operation'] == 'CREATE'\n                assert call_args['resource'] == 'test_resource'\n                assert call_args['outcome'] == 'success'\n"
                  },
                  "endLine": 177,
                  "startLine": 175
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert call_args['outcome'] == 'success'\n"
                  },
                  "startLine": 177
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert call_args['resource'] == 'test_resource'\n                assert call_args['outcome'] == 'success'\n    \n"
                  },
                  "endLine": 178,
                  "startLine": 176
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert call_args['outcome'] == 'failure'\n"
                  },
                  "startLine": 194
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                call_args = mock_audit.call_args[1]\n                assert call_args['outcome'] == 'failure'\n                assert 'Test error' in call_args['details']['error']\n"
                  },
                  "endLine": 195,
                  "startLine": 193
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'Test error' in call_args['details']['error']\n"
                  },
                  "startLine": 195
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert call_args['outcome'] == 'failure'\n                assert 'Test error' in call_args['details']['error']\n    \n"
                  },
                  "endLine": 196,
                  "startLine": 194
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert call_args['username'] == 'baduser'\n"
                  },
                  "startLine": 216
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            call_args = mock_audit.call_args[1]\n            assert call_args['username'] == 'baduser'\n            assert call_args['outcome'] == 'failure'\n"
                  },
                  "endLine": 217,
                  "startLine": 215
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert call_args['outcome'] == 'failure'\n"
                  },
                  "startLine": 217
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert call_args['username'] == 'baduser'\n            assert call_args['outcome'] == 'failure'\n            assert call_args['details']['failure_reason'] == 'invalid_password'\n"
                  },
                  "endLine": 218,
                  "startLine": 216
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert call_args['details']['failure_reason'] == 'invalid_password'\n"
                  },
                  "startLine": 218
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert call_args['outcome'] == 'failure'\n            assert call_args['details']['failure_reason'] == 'invalid_password'\n    \n"
                  },
                  "endLine": 219,
                  "startLine": 217
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert len(app.before_request_funcs[None]) > 0\n"
                  },
                  "startLine": 244
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Verify before_request handler was registered\n            assert len(app.before_request_funcs[None]) > 0\n    \n"
                  },
                  "endLine": 245,
                  "startLine": 243
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert hasattr(AuditEventType, event)\n"
                  },
                  "startLine": 270
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        for event in required_events:\n            assert hasattr(AuditEventType, event)\n    \n"
                  },
                  "endLine": 271,
                  "startLine": 269
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert hasattr(AuditSeverity, severity)\n"
                  },
                  "startLine": 277
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        for severity in required_severities:\n            assert hasattr(AuditSeverity, severity)\n\n"
                  },
                  "endLine": 278,
                  "startLine": 276
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert callable(mock_success)\n"
                  },
                  "startLine": 290
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    # For now, we verify the functions exist and can be called\n                    assert callable(mock_success)\n                    assert callable(mock_failure)\n"
                  },
                  "endLine": 291,
                  "startLine": 289
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert callable(mock_failure)\n"
                  },
                  "startLine": 291
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert callable(mock_success)\n                    assert callable(mock_failure)\n    \n"
                  },
                  "endLine": 292,
                  "startLine": 290
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert callable(mock_audit)\n"
                  },
                  "startLine": 306
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_audit_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # We can verify the function exists and is importable\n                assert callable(mock_audit)\n\n"
                  },
                  "endLine": 307,
                  "startLine": 305
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 200\n"
                  },
                  "startLine": 33
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 200\n        data = unwrap_response(response)\n"
                  },
                  "endLine": 34,
                  "startLine": 32
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'access_token' in data\n"
                  },
                  "startLine": 36
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'access_token' in data\n        assert 'refresh_token' in data\n"
                  },
                  "endLine": 37,
                  "startLine": 35
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'refresh_token' in data\n"
                  },
                  "startLine": 37
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'access_token' in data\n        assert 'refresh_token' in data\n        assert 'user' in data\n"
                  },
                  "endLine": 38,
                  "startLine": 36
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'user' in data\n"
                  },
                  "startLine": 38
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'refresh_token' in data\n        assert 'user' in data\n        assert data['user']['username'] == 'admin'\n"
                  },
                  "endLine": 39,
                  "startLine": 37
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['user']['username'] == 'admin'\n"
                  },
                  "startLine": 39
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'user' in data\n        assert data['user']['username'] == 'admin'\n    \n"
                  },
                  "endLine": 40,
                  "startLine": 38
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 401\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 401\n        data = unwrap_response(response)\n"
                  },
                  "endLine": 49,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'error' in data\n"
                  },
                  "startLine": 50
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        data = unwrap_response(response)\n        assert 'error' in data\n    \n"
                  },
                  "endLine": 51,
                  "startLine": 49
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 400\n"
                  },
                  "startLine": 59
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 400\n        data = unwrap_response(response)\n"
                  },
                  "endLine": 60,
                  "startLine": 58
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'validation' in data_str or 'field' in data_str or 'required' in data_str\n"
                  },
                  "startLine": 63
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        data_str = str(data).lower()\n        assert 'validation' in data_str or 'field' in data_str or 'required' in data_str\n    \n"
                  },
                  "endLine": 64,
                  "startLine": 62
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 401\n"
                  },
                  "startLine": 77
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 401\n        \n"
                  },
                  "endLine": 78,
                  "startLine": 76
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Possible hardcoded password: 'admin123'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    def get_auth_token(self, client, username='admin', password='admin123'):\n"
                  },
                  "startLine": 83
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \n    def get_auth_token(self, client, username='admin', password='admin123'):\n        \"\"\"Helper method to get auth token.\"\"\"\n        response = client.post('/api/v1/auth/login',\n            json={'username': username, 'password': password},\n            headers={'Content-Type': 'application/json'}\n        )\n        \n        if response.status_code == 200:\n            data = unwrap_response(response)\n            return data['access_token']\n        return None\n    \n"
                  },
                  "endLine": 94,
                  "startLine": 82
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B107",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 401\n"
                  },
                  "startLine": 98
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        response = client.get('/api/v1/auth/me')\n        assert response.status_code == 401\n    \n"
                  },
                  "endLine": 99,
                  "startLine": 97
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 200\n"
                  },
                  "startLine": 108
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 200\n        data = unwrap_response(response)\n"
                  },
                  "endLine": 109,
                  "startLine": 107
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['username'] == 'admin'\n"
                  },
                  "startLine": 110
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        data = unwrap_response(response)\n        assert data['username'] == 'admin'\n    \n"
                  },
                  "endLine": 111,
                  "startLine": 109
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 200\n"
                  },
                  "startLine": 128
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 200\n        data = unwrap_response(response)\n"
                  },
                  "endLine": 129,
                  "startLine": 127
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'access_token' in data\n"
                  },
                  "startLine": 130
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        data = unwrap_response(response)\n        assert 'access_token' in data\n    \n"
                  },
                  "endLine": 131,
                  "startLine": 129
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Possible hardcoded password: 'admin123'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        original_password = 'admin123'\n"
                  },
                  "startLine": 135
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        token = self.get_auth_token(client)\n        original_password = 'admin123'\n        new_password = 'newpassword123'\n"
                  },
                  "endLine": 136,
                  "startLine": 134
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B105",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Possible hardcoded password: 'newpassword123'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        new_password = 'newpassword123'\n"
                  },
                  "startLine": 136
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        original_password = 'admin123'\n        new_password = 'newpassword123'\n        \n"
                  },
                  "endLine": 137,
                  "startLine": 135
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B105",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 200\n"
                  },
                  "startLine": 150
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 200\n        \n"
                  },
                  "endLine": 151,
                  "startLine": 149
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert new_login.status_code == 200\n"
                  },
                  "startLine": 159
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \n            assert new_login.status_code == 200\n            \n"
                  },
                  "endLine": 160,
                  "startLine": 158
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 401\n"
                  },
                  "startLine": 190
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 401\n    \n"
                  },
                  "endLine": 191,
                  "startLine": 189
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 200\n"
                  },
                  "startLine": 200
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 200\n\n"
                  },
                  "endLine": 201,
                  "startLine": 199
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Possible hardcoded password: 'admin123'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    def get_auth_token(self, client, username='admin', password='admin123'):\n"
                  },
                  "startLine": 206
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \n    def get_auth_token(self, client, username='admin', password='admin123'):\n        \"\"\"Helper method to get auth token.\"\"\"\n        response = client.post('/api/v1/auth/login',\n            json={'username': username, 'password': password},\n            headers={'Content-Type': 'application/json'}\n        )\n        \n        if response.status_code == 200:\n            data = unwrap_response(response)\n            return data['access_token']\n        return None\n    \n"
                  },
                  "endLine": 217,
                  "startLine": 205
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B107",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert existing_user is None, \"User should not exist before registration\"\n"
                  },
                  "startLine": 228
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        existing_user = User.query.filter_by(username='newuser').first()\n        assert existing_user is None, \"User should not exist before registration\"\n        \n"
                  },
                  "endLine": 229,
                  "startLine": 227
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 201\n"
                  },
                  "startLine": 246
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Verify HTTP response\n        assert response.status_code == 201\n        data = unwrap_response(response)\n"
                  },
                  "endLine": 247,
                  "startLine": 245
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['username'] == 'newuser'\n"
                  },
                  "startLine": 248
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        data = unwrap_response(response)\n        assert data['username'] == 'newuser'\n        assert data['email'] == 'newuser@test.com'\n"
                  },
                  "endLine": 249,
                  "startLine": 247
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['email'] == 'newuser@test.com'\n"
                  },
                  "startLine": 249
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['username'] == 'newuser'\n        assert data['email'] == 'newuser@test.com'\n        \n"
                  },
                  "endLine": 250,
                  "startLine": 248
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert created_user is not None, \"User should exist in database after registration\"\n"
                  },
                  "startLine": 253
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        created_user = User.query.filter_by(username='newuser').first()\n        assert created_user is not None, \"User should exist in database after registration\"\n        assert created_user.username == 'newuser', \"Username should match\"\n"
                  },
                  "endLine": 254,
                  "startLine": 252
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert created_user.username == 'newuser', \"Username should match\"\n"
                  },
                  "startLine": 254
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert created_user is not None, \"User should exist in database after registration\"\n        assert created_user.username == 'newuser', \"Username should match\"\n        assert created_user.email == 'newuser@test.com', \"Email should match\"\n"
                  },
                  "endLine": 255,
                  "startLine": 253
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert created_user.email == 'newuser@test.com', \"Email should match\"\n"
                  },
                  "startLine": 255
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert created_user.username == 'newuser', \"Username should match\"\n        assert created_user.email == 'newuser@test.com', \"Email should match\"\n        assert created_user.first_name == 'New', \"First name should match\"\n"
                  },
                  "endLine": 256,
                  "startLine": 254
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert created_user.first_name == 'New', \"First name should match\"\n"
                  },
                  "startLine": 256
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert created_user.email == 'newuser@test.com', \"Email should match\"\n        assert created_user.first_name == 'New', \"First name should match\"\n        assert created_user.last_name == 'User', \"Last name should match\"\n"
                  },
                  "endLine": 257,
                  "startLine": 255
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert created_user.last_name == 'User', \"Last name should match\"\n"
                  },
                  "startLine": 257
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert created_user.first_name == 'New', \"First name should match\"\n        assert created_user.last_name == 'User', \"Last name should match\"\n        assert created_user.role_id == admin_role.id, \"Role ID should match\"\n"
                  },
                  "endLine": 258,
                  "startLine": 256
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert created_user.role_id == admin_role.id, \"Role ID should match\"\n"
                  },
                  "startLine": 258
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert created_user.last_name == 'User', \"Last name should match\"\n        assert created_user.role_id == admin_role.id, \"Role ID should match\"\n        assert created_user.is_active is True, \"User should be active by default\"\n"
                  },
                  "endLine": 259,
                  "startLine": 257
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert created_user.is_active is True, \"User should be active by default\"\n"
                  },
                  "startLine": 259
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert created_user.role_id == admin_role.id, \"Role ID should match\"\n        assert created_user.is_active is True, \"User should be active by default\"\n        assert created_user.password_hash is not None, \"Password hash should be set\"\n"
                  },
                  "endLine": 260,
                  "startLine": 258
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert created_user.password_hash is not None, \"Password hash should be set\"\n"
                  },
                  "startLine": 260
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert created_user.is_active is True, \"User should be active by default\"\n        assert created_user.password_hash is not None, \"Password hash should be set\"\n        assert created_user.created_at is not None, \"Created timestamp should be set\"\n"
                  },
                  "endLine": 261,
                  "startLine": 259
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert created_user.created_at is not None, \"Created timestamp should be set\"\n"
                  },
                  "startLine": 261
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert created_user.password_hash is not None, \"Password hash should be set\"\n        assert created_user.created_at is not None, \"Created timestamp should be set\"\n        assert created_user.updated_at is not None, \"Updated timestamp should be set\"\n"
                  },
                  "endLine": 262,
                  "startLine": 260
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert created_user.updated_at is not None, \"Updated timestamp should be set\"\n"
                  },
                  "startLine": 262
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert created_user.created_at is not None, \"Created timestamp should be set\"\n        assert created_user.updated_at is not None, \"Updated timestamp should be set\"\n    \n"
                  },
                  "endLine": 263,
                  "startLine": 261
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 403\n"
                  },
                  "startLine": 285
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 403\n    \n"
                  },
                  "endLine": 286,
                  "startLine": 284
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 409\n"
                  },
                  "startLine": 307
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 409\n        data = unwrap_response(response)\n"
                  },
                  "endLine": 308,
                  "startLine": 306
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'already exists' in error_text or 'duplicate' in error_text\n"
                  },
                  "startLine": 311
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_auth.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        error_text = str(data).lower()\n        assert 'already exists' in error_text or 'duplicate' in error_text\n"
                  },
                  "endLine": 311,
                  "startLine": 310
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert is_production_environment(mock_app) is True\n"
                  },
                  "startLine": 23
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        with patch.dict('os.environ', {'FLASK_ENV': 'production'}, clear=True):\n            assert is_production_environment(mock_app) is True\n            assert is_development_environment(mock_app) is False\n"
                  },
                  "endLine": 24,
                  "startLine": 22
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert is_development_environment(mock_app) is False\n"
                  },
                  "startLine": 24
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert is_production_environment(mock_app) is True\n            assert is_development_environment(mock_app) is False\n    \n"
                  },
                  "endLine": 25,
                  "startLine": 23
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert is_production_environment(mock_app) is True\n"
                  },
                  "startLine": 32
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        with patch.dict('os.environ', {'APP_ENV': 'production'}, clear=True):\n            assert is_production_environment(mock_app) is True\n    \n"
                  },
                  "endLine": 33,
                  "startLine": 31
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert is_development_environment(mock_app) is True\n"
                  },
                  "startLine": 40
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        with patch.dict('os.environ', {'FLASK_ENV': 'development'}, clear=True):\n            assert is_development_environment(mock_app) is True\n            assert is_production_environment(mock_app) is False\n"
                  },
                  "endLine": 41,
                  "startLine": 39
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert is_production_environment(mock_app) is False\n"
                  },
                  "startLine": 41
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert is_development_environment(mock_app) is True\n            assert is_production_environment(mock_app) is False\n    \n"
                  },
                  "endLine": 42,
                  "startLine": 40
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert is_production_environment(mock_app) is True\n"
                  },
                  "startLine": 49
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        with patch.dict('os.environ', {}, clear=True):\n            assert is_production_environment(mock_app) is True\n    \n"
                  },
                  "endLine": 50,
                  "startLine": 48
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert is_production_environment(mock_app) is False\n"
                  },
                  "startLine": 57
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        with patch.dict('os.environ', {}, clear=True):\n            assert is_production_environment(mock_app) is False\n    \n"
                  },
                  "endLine": 58,
                  "startLine": 56
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert is_production_environment(mock_app) is True\n"
                  },
                  "startLine": 69
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                os.environ.pop(key, None)\n            assert is_production_environment(mock_app) is True\n    \n"
                  },
                  "endLine": 70,
                  "startLine": 68
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert is_testing_environment(mock_app) is True\n"
                  },
                  "startLine": 77
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        with patch.dict('os.environ', {'TESTING': 'true'}):\n            assert is_testing_environment(mock_app) is True\n        \n"
                  },
                  "endLine": 78,
                  "startLine": 76
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert is_testing_environment(mock_app) is True\n"
                  },
                  "startLine": 80
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        with patch.dict('os.environ', {'TESTING': '1'}):\n            assert is_testing_environment(mock_app) is True\n    \n"
                  },
                  "endLine": 81,
                  "startLine": 79
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert is_testing_environment(mock_app) is True\n"
                  },
                  "startLine": 88
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        with patch.dict('os.environ', {'TESTING': 'true'}):\n            assert is_testing_environment(mock_app) is True\n            assert is_development_environment(mock_app) is False\n"
                  },
                  "endLine": 89,
                  "startLine": 87
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert is_development_environment(mock_app) is False\n"
                  },
                  "startLine": 89
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert is_testing_environment(mock_app) is True\n            assert is_development_environment(mock_app) is False\n            assert is_production_environment(mock_app) is False\n"
                  },
                  "endLine": 90,
                  "startLine": 88
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert is_production_environment(mock_app) is False\n"
                  },
                  "startLine": 90
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert is_development_environment(mock_app) is False\n            assert is_production_environment(mock_app) is False\n    \n"
                  },
                  "endLine": 91,
                  "startLine": 89
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert is_testing_environment(mock_app) is True\n"
                  },
                  "startLine": 99
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        with patch.dict('os.environ', {'TESTING': 'true', 'FLASK_ENV': 'production'}):\n            assert is_testing_environment(mock_app) is True\n            assert is_production_environment(mock_app) is False\n"
                  },
                  "endLine": 100,
                  "startLine": 98
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert is_production_environment(mock_app) is False\n"
                  },
                  "startLine": 100
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert is_testing_environment(mock_app) is True\n            assert is_production_environment(mock_app) is False\n            assert is_development_environment(mock_app) is False\n"
                  },
                  "endLine": 101,
                  "startLine": 99
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert is_development_environment(mock_app) is False\n"
                  },
                  "startLine": 101
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert is_production_environment(mock_app) is False\n            assert is_development_environment(mock_app) is False\n\n"
                  },
                  "endLine": 102,
                  "startLine": 100
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client._validate_security_policy('Basic256Sha256', require_strong=True) is True\n"
                  },
                  "startLine": 112
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Strong policies should pass\n        assert client._validate_security_policy('Basic256Sha256', require_strong=True) is True\n        assert client._validate_security_policy('Aes256_Sha256_RsaPss', require_strong=True) is True\n"
                  },
                  "endLine": 113,
                  "startLine": 111
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client._validate_security_policy('Aes256_Sha256_RsaPss', require_strong=True) is True\n"
                  },
                  "startLine": 113
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert client._validate_security_policy('Basic256Sha256', require_strong=True) is True\n        assert client._validate_security_policy('Aes256_Sha256_RsaPss', require_strong=True) is True\n    \n"
                  },
                  "endLine": 114,
                  "startLine": 112
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client._validate_security_policy('Basic128Rsa15', require_strong=False) is True\n"
                  },
                  "startLine": 120
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Weak policies should pass when not requiring strong\n        assert client._validate_security_policy('Basic128Rsa15', require_strong=False) is True\n        assert client._validate_security_policy('Basic256', require_strong=False) is True\n"
                  },
                  "endLine": 121,
                  "startLine": 119
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client._validate_security_policy('Basic256', require_strong=False) is True\n"
                  },
                  "startLine": 121
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert client._validate_security_policy('Basic128Rsa15', require_strong=False) is True\n        assert client._validate_security_policy('Basic256', require_strong=False) is True\n        assert client._validate_security_policy('None', require_strong=False) is True\n"
                  },
                  "endLine": 122,
                  "startLine": 120
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client._validate_security_policy('None', require_strong=False) is True\n"
                  },
                  "startLine": 122
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert client._validate_security_policy('Basic256', require_strong=False) is True\n        assert client._validate_security_policy('None', require_strong=False) is True\n    \n"
                  },
                  "endLine": 123,
                  "startLine": 121
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is True\n"
                  },
                  "startLine": 158
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert result is True\n        mock_service.init_app.assert_called_once_with(mock_app)\n"
                  },
                  "endLine": 159,
                  "startLine": 157
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is False\n"
                  },
                  "startLine": 175
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert result is False\n        mock_logger.error.assert_called()  # Now expects error level logging for config issues\n"
                  },
                  "endLine": 176,
                  "startLine": 174
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is False\n"
                  },
                  "startLine": 204
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert result is False\n        mock_logger.warning.assert_called()\n"
                  },
                  "endLine": 205,
                  "startLine": 203
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is True\n"
                  },
                  "startLine": 232
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_batch_10_17_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert result is True\n        mock_service.init_app.assert_called_once_with(mock_app, additional_arg)\n"
                  },
                  "endLine": 233,
                  "startLine": 231
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['limit'] == 100\n"
                  },
                  "startLine": 21
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = schema.load(valid_data)\n        assert result['limit'] == 100\n        assert result['aggregation'] == 'hourly'\n"
                  },
                  "endLine": 22,
                  "startLine": 20
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['aggregation'] == 'hourly'\n"
                  },
                  "startLine": 22
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result['limit'] == 100\n        assert result['aggregation'] == 'hourly'\n        \n"
                  },
                  "endLine": 23,
                  "startLine": 21
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'limit' in exc_info.value.messages\n"
                  },
                  "startLine": 27
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            schema.load({'limit': '20000'})\n        assert 'limit' in exc_info.value.messages\n        \n"
                  },
                  "endLine": 28,
                  "startLine": 26
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'aggregation' in exc_info.value.messages\n"
                  },
                  "startLine": 32
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            schema.load({'aggregation': 'invalid'})\n        assert 'aggregation' in exc_info.value.messages\n    \n"
                  },
                  "endLine": 33,
                  "startLine": 31
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['days'] == 30  # Default value\n"
                  },
                  "startLine": 42
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = schema.load({})\n        assert result['days'] == 30  # Default value\n        \n"
                  },
                  "endLine": 43,
                  "startLine": 41
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['days'] == 7\n"
                  },
                  "startLine": 46
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = schema.load({'days': '7'})\n        assert result['days'] == 7\n        \n"
                  },
                  "endLine": 47,
                  "startLine": 45
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'days' in exc_info.value.messages\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            schema.load({'days': '500'})\n        assert 'days' in exc_info.value.messages\n    \n"
                  },
                  "endLine": 52,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['days'] == 14\n"
                  },
                  "startLine": 61
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = schema.load({'days': '14', 'sensor_type': 'temperature'})\n        assert result['days'] == 14\n        assert result['sensor_type'] == 'temperature'\n"
                  },
                  "endLine": 62,
                  "startLine": 60
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['sensor_type'] == 'temperature'\n"
                  },
                  "startLine": 62
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result['days'] == 14\n        assert result['sensor_type'] == 'temperature'\n        \n"
                  },
                  "endLine": 63,
                  "startLine": 61
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'days' in exc_info.value.messages\n"
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            schema.load({'days': 'invalid'})\n        assert 'days' in exc_info.value.messages\n    \n"
                  },
                  "endLine": 68,
                  "startLine": 66
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['hours'] == 48\n"
                  },
                  "startLine": 77
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = schema.load({'hours': '48'})\n        assert result['hours'] == 48\n        \n"
                  },
                  "endLine": 78,
                  "startLine": 76
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['hours'] == 24\n"
                  },
                  "startLine": 81
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = schema.load({})\n        assert result['hours'] == 24\n        \n"
                  },
                  "endLine": 82,
                  "startLine": 80
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'hours' in exc_info.value.messages\n"
                  },
                  "startLine": 86
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            schema.load({'hours': '10000'})\n        assert 'hours' in exc_info.value.messages\n    \n"
                  },
                  "endLine": 87,
                  "startLine": 85
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['days'] == 60\n"
                  },
                  "startLine": 96
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = schema.load({'days': '60'})\n        assert result['days'] == 60\n        \n"
                  },
                  "endLine": 97,
                  "startLine": 95
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'days' in exc_info.value.messages\n"
                  },
                  "startLine": 101
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            schema.load({'days': '-5'})\n        assert 'days' in exc_info.value.messages\n    \n"
                  },
                  "endLine": 102,
                  "startLine": 100
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(result['unit_ids']) == 2\n"
                  },
                  "startLine": 116
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = schema.load(valid_data)\n        assert len(result['unit_ids']) == 2\n        assert result['sensor_type'] == 'temperature'\n"
                  },
                  "endLine": 117,
                  "startLine": 115
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['sensor_type'] == 'temperature'\n"
                  },
                  "startLine": 117
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert len(result['unit_ids']) == 2\n        assert result['sensor_type'] == 'temperature'\n        assert result['aggregation'] == 'daily'\n"
                  },
                  "endLine": 118,
                  "startLine": 116
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['aggregation'] == 'daily'\n"
                  },
                  "startLine": 118
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result['sensor_type'] == 'temperature'\n        assert result['aggregation'] == 'daily'\n        \n"
                  },
                  "endLine": 119,
                  "startLine": 117
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'sensor_type' in exc_info.value.messages\n"
                  },
                  "startLine": 123
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            schema.load({'unit_ids': ['UNIT001']})\n        assert 'sensor_type' in exc_info.value.messages\n        \n"
                  },
                  "endLine": 124,
                  "startLine": 122
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'unit_ids' in exc_info.value.messages\n"
                  },
                  "startLine": 128
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            schema.load({'unit_ids': [], 'sensor_type': 'temperature'})\n        assert 'unit_ids' in exc_info.value.messages\n    \n"
                  },
                  "endLine": 129,
                  "startLine": 127
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['format'] == 'csv'\n"
                  },
                  "startLine": 138
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = schema.load({'format': 'csv', 'sensor_types': 'temperature,pressure'})\n        assert result['format'] == 'csv'\n        assert result['sensor_types'] == 'temperature,pressure'\n"
                  },
                  "endLine": 139,
                  "startLine": 137
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['sensor_types'] == 'temperature,pressure'\n"
                  },
                  "startLine": 139
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result['format'] == 'csv'\n        assert result['sensor_types'] == 'temperature,pressure'\n        \n"
                  },
                  "endLine": 140,
                  "startLine": 138
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['format'] == 'json'\n"
                  },
                  "startLine": 143
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = schema.load({})\n        assert result['format'] == 'json'\n        \n"
                  },
                  "endLine": 144,
                  "startLine": 142
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'format' in exc_info.value.messages\n"
                  },
                  "startLine": 148
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            schema.load({'format': 'xml'})\n        assert 'format' in exc_info.value.messages\n\n"
                  },
                  "endLine": 149,
                  "startLine": 147
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status_code == 400\n"
                  },
                  "startLine": 171
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Check status code\n            assert status_code == 400\n            \n"
                  },
                  "endLine": 172,
                  "startLine": 170
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert response_data['success'] is False\n"
                  },
                  "startLine": 175
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            response_data = response.get_json()\n            assert response_data['success'] is False\n            assert response_data['error']['code'] == 'VALIDATION_ERROR'\n"
                  },
                  "endLine": 176,
                  "startLine": 174
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert response_data['error']['code'] == 'VALIDATION_ERROR'\n"
                  },
                  "startLine": 176
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert response_data['success'] is False\n            assert response_data['error']['code'] == 'VALIDATION_ERROR'\n            assert response_data['error']['message'] == 'Invalid parameter provided.'\n"
                  },
                  "endLine": 177,
                  "startLine": 175
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert response_data['error']['message'] == 'Invalid parameter provided.'\n"
                  },
                  "startLine": 177
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert response_data['error']['code'] == 'VALIDATION_ERROR'\n            assert response_data['error']['message'] == 'Invalid parameter provided.'\n            assert 'Sensitive internal details' not in str(response_data)\n"
                  },
                  "endLine": 178,
                  "startLine": 176
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'Sensitive internal details' not in str(response_data)\n"
                  },
                  "startLine": 178
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert response_data['error']['message'] == 'Invalid parameter provided.'\n            assert 'Sensitive internal details' not in str(response_data)\n            assert 'correlation_id' in response_data['error']['details']\n"
                  },
                  "endLine": 179,
                  "startLine": 177
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'correlation_id' in response_data['error']['details']\n"
                  },
                  "startLine": 179
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'Sensitive internal details' not in str(response_data)\n            assert 'correlation_id' in response_data['error']['details']\n            assert response_data['request_id'] == 'test-123'\n"
                  },
                  "endLine": 180,
                  "startLine": 178
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert response_data['request_id'] == 'test-123'\n"
                  },
                  "startLine": 180
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_centralized_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'correlation_id' in response_data['error']['details']\n            assert response_data['request_id'] == 'test-123'\n"
                  },
                  "endLine": 180,
                  "startLine": 179
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result == utc_dt\n"
                  },
                  "startLine": 22
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert result == utc_dt\n        assert result.tzinfo == timezone.utc\n"
                  },
                  "endLine": 23,
                  "startLine": 21
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result.tzinfo == timezone.utc\n"
                  },
                  "startLine": 23
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result == utc_dt\n        assert result.tzinfo == timezone.utc\n    \n"
                  },
                  "endLine": 24,
                  "startLine": 22
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result == expected_utc\n"
                  },
                  "startLine": 35
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        expected_utc = datetime(2024, 12, 25, 10, 30, 0, tzinfo=timezone.utc)\n        assert result == expected_utc\n        assert result.tzinfo == timezone.utc\n"
                  },
                  "endLine": 36,
                  "startLine": 34
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result.tzinfo == timezone.utc\n"
                  },
                  "startLine": 36
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result == expected_utc\n        assert result.tzinfo == timezone.utc\n    \n"
                  },
                  "endLine": 37,
                  "startLine": 35
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result == expected_utc\n"
                  },
                  "startLine": 47
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        expected_utc = datetime(2024, 12, 25, 10, 30, 0, tzinfo=timezone.utc)\n        assert result == expected_utc\n        assert result.tzinfo == timezone.utc\n"
                  },
                  "endLine": 48,
                  "startLine": 46
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result.tzinfo == timezone.utc\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result == expected_utc\n        assert result.tzinfo == timezone.utc\n    \n"
                  },
                  "endLine": 49,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result == expected_utc\n"
                  },
                  "startLine": 59
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        expected_utc = datetime(2024, 12, 25, 10, 30, 0, tzinfo=timezone.utc)\n        assert result == expected_utc\n        assert result.tzinfo == timezone.utc\n"
                  },
                  "endLine": 60,
                  "startLine": 58
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result.tzinfo == timezone.utc\n"
                  },
                  "startLine": 60
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result == expected_utc\n        assert result.tzinfo == timezone.utc\n    \n"
                  },
                  "endLine": 61,
                  "startLine": 59
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result == expected_utc\n"
                  },
                  "startLine": 71
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        expected_utc = datetime(2024, 12, 25, 10, 30, 0, tzinfo=timezone.utc)\n        assert result == expected_utc\n        assert result.tzinfo == timezone.utc\n"
                  },
                  "endLine": 72,
                  "startLine": 70
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result.tzinfo == timezone.utc\n"
                  },
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result == expected_utc\n        assert result.tzinfo == timezone.utc\n    \n"
                  },
                  "endLine": 73,
                  "startLine": 71
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result == expected_utc\n"
                  },
                  "startLine": 83
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        expected_utc = datetime(2024, 12, 25, 10, 30, 0, tzinfo=timezone.utc)\n        assert result == expected_utc\n        assert result.tzinfo == timezone.utc\n"
                  },
                  "endLine": 84,
                  "startLine": 82
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result.tzinfo == timezone.utc\n"
                  },
                  "startLine": 84
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result == expected_utc\n        assert result.tzinfo == timezone.utc\n\n"
                  },
                  "endLine": 85,
                  "startLine": 83
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert result.tzinfo == timezone.utc, f\"Failed for format: {iso_string}\"\n"
                  },
                  "startLine": 99
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            result = opcua_client._normalize_certificate_datetime(iso_string)\n            assert result.tzinfo == timezone.utc, f\"Failed for format: {iso_string}\"\n            # All should normalize to UTC properly\n"
                  },
                  "endLine": 100,
                  "startLine": 98
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert isinstance(result, datetime), f\"Failed to return datetime for: {iso_string}\"\n"
                  },
                  "startLine": 101
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # All should normalize to UTC properly\n            assert isinstance(result, datetime), f\"Failed to return datetime for: {iso_string}\"\n    \n"
                  },
                  "endLine": 102,
                  "startLine": 100
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert e.__cause__ is not None, \"Expected error chaining with 'from e' not found\"\n"
                  },
                  "startLine": 132
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Should have error chaining (from e)\n            assert e.__cause__ is not None, \"Expected error chaining with 'from e' not found\"\n            assert \"Invalid certificate datetime format\" in str(e)\n"
                  },
                  "endLine": 133,
                  "startLine": 131
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert \"Invalid certificate datetime format\" in str(e)\n"
                  },
                  "startLine": 133
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert e.__cause__ is not None, \"Expected error chaining with 'from e' not found\"\n            assert \"Invalid certificate datetime format\" in str(e)\n\n"
                  },
                  "endLine": 134,
                  "startLine": 132
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert opcua_client.security_policy == 'None'\n"
                  },
                  "startLine": 179
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    # Should fallback to None security\n                    assert opcua_client.security_policy == 'None'\n                    assert opcua_client.security_mode == 'None'\n"
                  },
                  "endLine": 180,
                  "startLine": 178
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert opcua_client.security_mode == 'None'\n"
                  },
                  "startLine": 180
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert opcua_client.security_policy == 'None'\n                    assert opcua_client.security_mode == 'None'\n                    \n"
                  },
                  "endLine": 181,
                  "startLine": 179
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert len(fallback_warning_calls) > 0, \"Expected development-only fallback warning not found\"\n"
                  },
                  "startLine": 185
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                                            if 'DEVELOPMENT ONLY' in str(call)]\n                    assert len(fallback_warning_calls) > 0, \"Expected development-only fallback warning not found\"\n                    \n"
                  },
                  "endLine": 186,
                  "startLine": 184
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert 'DEVELOPMENT ONLY' in warning_message\n"
                  },
                  "startLine": 188
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    warning_message = str(fallback_warning_calls[0])\n                    assert 'DEVELOPMENT ONLY' in warning_message\n                    assert 'insecure OPC UA connection' in warning_message\n"
                  },
                  "endLine": 189,
                  "startLine": 187
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert 'insecure OPC UA connection' in warning_message\n"
                  },
                  "startLine": 189
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert 'DEVELOPMENT ONLY' in warning_message\n                    assert 'insecure OPC UA connection' in warning_message\n                    assert 'no encryption/authentication' in warning_message\n"
                  },
                  "endLine": 190,
                  "startLine": 188
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert 'no encryption/authentication' in warning_message\n"
                  },
                  "startLine": 190
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert 'insecure OPC UA connection' in warning_message\n                    assert 'no encryption/authentication' in warning_message\n                    assert 'ONLY allowed in development' in warning_message\n"
                  },
                  "endLine": 191,
                  "startLine": 189
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert 'ONLY allowed in development' in warning_message\n"
                  },
                  "startLine": 191
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_certificate_timezone_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert 'no encryption/authentication' in warning_message\n                    assert 'ONLY allowed in development' in warning_message\n    \n"
                  },
                  "endLine": 192,
                  "startLine": 190
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is not None\n"
                  },
                  "startLine": 17
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_field.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = field._serialize(iso_string, 'test_field', None)\n        assert result is not None\n        assert isinstance(result, str)\n"
                  },
                  "endLine": 18,
                  "startLine": 16
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(result, str)\n"
                  },
                  "startLine": 18
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_field.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result is not None\n        assert isinstance(result, str)\n    \n"
                  },
                  "endLine": 19,
                  "startLine": 17
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is not None\n"
                  },
                  "startLine": 27
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_field.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = field._serialize(iso_string_z, 'test_field', None)\n        assert result is not None\n        assert isinstance(result, str)\n"
                  },
                  "endLine": 28,
                  "startLine": 26
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(result, str)\n"
                  },
                  "startLine": 28
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_field.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result is not None\n        assert isinstance(result, str)\n    \n"
                  },
                  "endLine": 29,
                  "startLine": 27
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is None\n"
                  },
                  "startLine": 37
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_field.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = field._serialize(invalid_string, 'test_field', None)\n        assert result is None\n        \n"
                  },
                  "endLine": 38,
                  "startLine": 36
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is None\n"
                  },
                  "startLine": 42
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_field.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = field._serialize(malformed_string, 'test_field', None)\n        assert result is None\n    \n"
                  },
                  "endLine": 43,
                  "startLine": 41
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is None\n"
                  },
                  "startLine": 49
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_field.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = field._serialize(None, 'test_field', None)\n        assert result is None\n    \n"
                  },
                  "endLine": 50,
                  "startLine": 48
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is not None\n"
                  },
                  "startLine": 57
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_field.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = field._serialize(dt, 'test_field', None)\n        assert result is not None\n        assert isinstance(result, str)\n"
                  },
                  "endLine": 58,
                  "startLine": 56
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(result, str)\n"
                  },
                  "startLine": 58
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_field.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result is not None\n        assert isinstance(result, str)\n"
                  },
                  "endLine": 58,
                  "startLine": 57
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result.tzinfo is not None\n"
                  },
                  "startLine": 35
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = parse_timestamp(\"2024-01-01T10:00:00Z\")\n        assert result.tzinfo is not None\n        assert result.year == 2024\n"
                  },
                  "endLine": 36,
                  "startLine": 34
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result.year == 2024\n"
                  },
                  "startLine": 36
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result.tzinfo is not None\n        assert result.year == 2024\n        assert result.month == 1\n"
                  },
                  "endLine": 37,
                  "startLine": 35
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result.month == 1\n"
                  },
                  "startLine": 37
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result.year == 2024\n        assert result.month == 1\n        assert result.day == 1\n"
                  },
                  "endLine": 38,
                  "startLine": 36
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result.day == 1\n"
                  },
                  "startLine": 38
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result.month == 1\n        assert result.day == 1\n    \n"
                  },
                  "endLine": 39,
                  "startLine": 37
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result.tzinfo == timezone.utc\n"
                  },
                  "startLine": 43
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = parse_timestamp(\"2024-01-01T10:00:00\")\n        assert result.tzinfo == timezone.utc\n        \n"
                  },
                  "endLine": 44,
                  "startLine": 42
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(caplog.records) > 0\n"
                  },
                  "startLine": 52
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Check that logging message was recorded\n        assert len(caplog.records) > 0\n        log_message = caplog.records[0].message\n"
                  },
                  "endLine": 53,
                  "startLine": 51
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"Converting naive datetime\" in log_message\n"
                  },
                  "startLine": 54
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        log_message = caplog.records[0].message\n        assert \"Converting naive datetime\" in log_message\n        assert \"Assuming original timestamp was UTC\" in log_message\n"
                  },
                  "endLine": 55,
                  "startLine": 53
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"Assuming original timestamp was UTC\" in log_message\n"
                  },
                  "startLine": 55
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert \"Converting naive datetime\" in log_message\n        assert \"Assuming original timestamp was UTC\" in log_message\n\n"
                  },
                  "endLine": 56,
                  "startLine": 54
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert test_app.config['TESTING'] == True\n"
                  },
                  "startLine": 66
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        test_app = create_app('development')  # Explicit development\n        assert test_app.config['TESTING'] == True\n    \n"
                  },
                  "endLine": 67,
                  "startLine": 65
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert test_app.config['TESTING'] == True\n"
                  },
                  "startLine": 73
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        test_app = create_app('production')  # Explicit production\n        assert test_app.config['TESTING'] == True\n\n"
                  },
                  "endLine": 74,
                  "startLine": 72
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'score' in result\n"
                  },
                  "startLine": 104
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                \n                assert 'score' in result\n                assert 'factors' in result\n"
                  },
                  "endLine": 105,
                  "startLine": 103
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'factors' in result\n"
                  },
                  "startLine": 105
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'score' in result\n                assert 'factors' in result\n                assert isinstance(result['score'], int)\n"
                  },
                  "endLine": 106,
                  "startLine": 104
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert isinstance(result['score'], int)\n"
                  },
                  "startLine": 106
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'factors' in result\n                assert isinstance(result['score'], int)\n                \n"
                  },
                  "endLine": 107,
                  "startLine": 105
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert overdue_found, f\"Expected 'Overdue maintenance' factor with deterministic date, got: {factors}\"\n"
                  },
                  "startLine": 110
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                overdue_found = any('Overdue maintenance' in factor for factor in factors)\n                assert overdue_found, f\"Expected 'Overdue maintenance' factor with deterministic date, got: {factors}\"\n    \n"
                  },
                  "endLine": 111,
                  "startLine": 109
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'score' in result\n"
                  },
                  "startLine": 132
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                \n                assert 'score' in result\n                assert 'factors' in result\n"
                  },
                  "endLine": 133,
                  "startLine": 131
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'factors' in result\n"
                  },
                  "startLine": 133
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'score' in result\n                assert 'factors' in result\n                assert isinstance(result['score'], int)\n"
                  },
                  "endLine": 134,
                  "startLine": 132
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert isinstance(result['score'], int)\n"
                  },
                  "startLine": 134
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'factors' in result\n                assert isinstance(result['score'], int)\n    \n"
                  },
                  "endLine": 135,
                  "startLine": 133
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'score' in result\n"
                  },
                  "startLine": 154
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                \n                assert 'score' in result\n                assert 'factors' in result\n"
                  },
                  "endLine": 155,
                  "startLine": 153
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'factors' in result\n"
                  },
                  "startLine": 155
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'score' in result\n                assert 'factors' in result\n                assert isinstance(result['score'], int)\n"
                  },
                  "endLine": 156,
                  "startLine": 154
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert isinstance(result['score'], int)\n"
                  },
                  "startLine": 156
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'factors' in result\n                assert isinstance(result['score'], int)\n    \n"
                  },
                  "endLine": 157,
                  "startLine": 155
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert overdue_found, f\"Expected 'Overdue maintenance' factor, got: {factors}\"\n"
                  },
                  "startLine": 183
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_datetime_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                overdue_found = any('Overdue maintenance' in factor for factor in factors)\n                assert overdue_found, f\"Expected 'Overdue maintenance' factor, got: {factors}\"\n"
                  },
                  "endLine": 183,
                  "startLine": 182
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'device_id' in stats\n"
                  },
                  "startLine": 31
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_cache_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'device_id' in stats\n        assert 'connection_established' in stats\n"
                  },
                  "endLine": 32,
                  "startLine": 30
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'connection_established' in stats\n"
                  },
                  "startLine": 32
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_cache_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'device_id' in stats\n        assert 'connection_established' in stats\n        assert 'connection_last_used' in stats\n"
                  },
                  "endLine": 33,
                  "startLine": 31
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'connection_last_used' in stats\n"
                  },
                  "startLine": 33
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_cache_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'connection_established' in stats\n        assert 'connection_last_used' in stats\n    \n"
                  },
                  "endLine": 34,
                  "startLine": 32
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'device_id' in stats\n"
                  },
                  "startLine": 46
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_cache_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'device_id' in stats\n        # Should not have connection info since device not in pool\n"
                  },
                  "endLine": 47,
                  "startLine": 45
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'connection_established' not in stats\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_cache_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Should not have connection info since device not in pool\n        assert 'connection_established' not in stats\n        assert 'connection_last_used' not in stats\n"
                  },
                  "endLine": 49,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'connection_last_used' not in stats\n"
                  },
                  "startLine": 49
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_cache_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'connection_established' not in stats\n        assert 'connection_last_used' not in stats\n    \n"
                  },
                  "endLine": 50,
                  "startLine": 48
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'connection_established' in stats\n"
                  },
                  "startLine": 75
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_cache_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        mock_get.assert_called_once_with('test_device')\n        assert 'connection_established' in stats\n    \n"
                  },
                  "endLine": 76,
                  "startLine": 74
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(service._connection_pool, TTLCache)\n"
                  },
                  "startLine": 82
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_cache_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Verify it's a TTLCache instance\n        assert isinstance(service._connection_pool, TTLCache)\n        \n"
                  },
                  "endLine": 83,
                  "startLine": 81
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(service._connection_pool, 'get')\n"
                  },
                  "startLine": 85
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_cache_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Verify it has .get() method\n        assert hasattr(service._connection_pool, 'get')\n        assert callable(service._connection_pool.get)\n"
                  },
                  "endLine": 86,
                  "startLine": 84
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert callable(service._connection_pool.get)\n"
                  },
                  "startLine": 86
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_cache_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(service._connection_pool, 'get')\n        assert callable(service._connection_pool.get)\n    \n"
                  },
                  "endLine": 87,
                  "startLine": 85
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is None\n"
                  },
                  "startLine": 95
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_cache_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert result is None\n    \n"
                  },
                  "endLine": 96,
                  "startLine": 94
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is not None\n"
                  },
                  "startLine": 108
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_cache_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert result is not None\n        assert result == test_value\n"
                  },
                  "endLine": 109,
                  "startLine": 107
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result == test_value\n"
                  },
                  "startLine": 109
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_cache_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result is not None\n        assert result == test_value\n"
                  },
                  "endLine": 109,
                  "startLine": 108
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(metrics, 'operation_times')\n"
                  },
                  "startLine": 22
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert hasattr(metrics, 'operation_times')\n        assert hasattr(metrics, 'operation_counts')\n"
                  },
                  "endLine": 23,
                  "startLine": 21
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(metrics, 'operation_counts')\n"
                  },
                  "startLine": 23
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(metrics, 'operation_times')\n        assert hasattr(metrics, 'operation_counts')\n        assert hasattr(metrics, 'error_counts')\n"
                  },
                  "endLine": 24,
                  "startLine": 22
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(metrics, 'error_counts')\n"
                  },
                  "startLine": 24
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(metrics, 'operation_counts')\n        assert hasattr(metrics, 'error_counts')\n        assert hasattr(metrics, 'data_throughput')\n"
                  },
                  "endLine": 25,
                  "startLine": 23
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(metrics, 'data_throughput')\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(metrics, 'error_counts')\n        assert hasattr(metrics, 'data_throughput')\n        assert metrics.max_history == 1000\n"
                  },
                  "endLine": 26,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert metrics.max_history == 1000\n"
                  },
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(metrics, 'data_throughput')\n        assert metrics.max_history == 1000\n    \n"
                  },
                  "endLine": 27,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert metrics.operation_counts['test_op'] == 1\n"
                  },
                  "startLine": 34
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert metrics.operation_counts['test_op'] == 1\n        assert len(metrics.operation_times['test_op']) == 1\n"
                  },
                  "endLine": 35,
                  "startLine": 33
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(metrics.operation_times['test_op']) == 1\n"
                  },
                  "startLine": 35
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert metrics.operation_counts['test_op'] == 1\n        assert len(metrics.operation_times['test_op']) == 1\n        assert metrics.operation_times['test_op'][0] == 0.5\n"
                  },
                  "endLine": 36,
                  "startLine": 34
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert metrics.operation_times['test_op'][0] == 0.5\n"
                  },
                  "startLine": 36
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert len(metrics.operation_times['test_op']) == 1\n        assert metrics.operation_times['test_op'][0] == 0.5\n        assert metrics.error_counts['test_op'] == 0\n"
                  },
                  "endLine": 37,
                  "startLine": 35
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert metrics.error_counts['test_op'] == 0\n"
                  },
                  "startLine": 37
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert metrics.operation_times['test_op'][0] == 0.5\n        assert metrics.error_counts['test_op'] == 0\n        assert len(metrics.data_throughput['test_op']) == 1\n"
                  },
                  "endLine": 38,
                  "startLine": 36
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(metrics.data_throughput['test_op']) == 1\n"
                  },
                  "startLine": 38
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert metrics.error_counts['test_op'] == 0\n        assert len(metrics.data_throughput['test_op']) == 1\n        assert metrics.data_throughput['test_op'][0] == 20.0  # 10 points / 0.5s\n"
                  },
                  "endLine": 39,
                  "startLine": 37
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert metrics.data_throughput['test_op'][0] == 20.0  # 10 points / 0.5s\n"
                  },
                  "startLine": 39
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert len(metrics.data_throughput['test_op']) == 1\n        assert metrics.data_throughput['test_op'][0] == 20.0  # 10 points / 0.5s\n    \n"
                  },
                  "endLine": 40,
                  "startLine": 38
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert metrics.operation_counts['test_op'] == 1\n"
                  },
                  "startLine": 47
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert metrics.operation_counts['test_op'] == 1\n        assert metrics.error_counts['test_op'] == 1\n"
                  },
                  "endLine": 48,
                  "startLine": 46
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert metrics.error_counts['test_op'] == 1\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert metrics.operation_counts['test_op'] == 1\n        assert metrics.error_counts['test_op'] == 1\n        assert len(metrics.data_throughput['test_op']) == 0  # No data points\n"
                  },
                  "endLine": 49,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(metrics.data_throughput['test_op']) == 0  # No data points\n"
                  },
                  "startLine": 49
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert metrics.error_counts['test_op'] == 1\n        assert len(metrics.data_throughput['test_op']) == 0  # No data points\n    \n"
                  },
                  "endLine": 50,
                  "startLine": 48
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert stats['operation'] == 'read_data'\n"
                  },
                  "startLine": 62
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert stats['operation'] == 'read_data'\n        assert stats['count'] == 3\n"
                  },
                  "endLine": 63,
                  "startLine": 61
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert stats['count'] == 3\n"
                  },
                  "startLine": 63
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert stats['operation'] == 'read_data'\n        assert stats['count'] == 3\n        assert stats['errors'] == 1\n"
                  },
                  "endLine": 64,
                  "startLine": 62
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert stats['errors'] == 1\n"
                  },
                  "startLine": 64
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert stats['count'] == 3\n        assert stats['errors'] == 1\n        assert stats['avg_time'] == 0.2\n"
                  },
                  "endLine": 65,
                  "startLine": 63
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert stats['avg_time'] == 0.2\n"
                  },
                  "startLine": 65
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert stats['errors'] == 1\n        assert stats['avg_time'] == 0.2\n        assert stats['min_time'] == 0.1\n"
                  },
                  "endLine": 66,
                  "startLine": 64
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert stats['min_time'] == 0.1\n"
                  },
                  "startLine": 66
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert stats['avg_time'] == 0.2\n        assert stats['min_time'] == 0.1\n        assert stats['max_time'] == 0.3\n"
                  },
                  "endLine": 67,
                  "startLine": 65
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert stats['max_time'] == 0.3\n"
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert stats['min_time'] == 0.1\n        assert stats['max_time'] == 0.3\n        assert stats['success_rate'] == pytest.approx(66.67, rel=1e-2)\n"
                  },
                  "endLine": 68,
                  "startLine": 66
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert stats['success_rate'] == pytest.approx(66.67, rel=1e-2)\n"
                  },
                  "startLine": 68
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert stats['max_time'] == 0.3\n        assert stats['success_rate'] == pytest.approx(66.67, rel=1e-2)\n        assert 'avg_throughput' in stats\n"
                  },
                  "endLine": 69,
                  "startLine": 67
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'avg_throughput' in stats\n"
                  },
                  "startLine": 69
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert stats['success_rate'] == pytest.approx(66.67, rel=1e-2)\n        assert 'avg_throughput' in stats\n    \n"
                  },
                  "endLine": 70,
                  "startLine": 68
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'no_data' in stats\n"
                  },
                  "startLine": 77
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'no_data' in stats\n        assert stats['operation'] == 'nonexistent'\n"
                  },
                  "endLine": 78,
                  "startLine": 76
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert stats['operation'] == 'nonexistent'\n"
                  },
                  "startLine": 78
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'no_data' in stats\n        assert stats['operation'] == 'nonexistent'\n\n"
                  },
                  "endLine": 79,
                  "startLine": 77
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['total_points'] == 10\n"
                  },
                  "startLine": 99
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert result['total_points'] == 10\n        \n"
                  },
                  "endLine": 100,
                  "startLine": 98
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert stats['count'] == 1\n"
                  },
                  "startLine": 103
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        stats = service._performance_metrics.get_operation_stats('test_operation')\n        assert stats['count'] == 1\n        assert stats['errors'] == 0\n"
                  },
                  "endLine": 104,
                  "startLine": 102
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert stats['errors'] == 0\n"
                  },
                  "startLine": 104
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert stats['count'] == 1\n        assert stats['errors'] == 0\n        assert stats['avg_time'] > 0.1  # Should be at least the sleep time\n"
                  },
                  "endLine": 105,
                  "startLine": 103
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert stats['avg_time'] > 0.1  # Should be at least the sleep time\n"
                  },
                  "startLine": 105
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert stats['errors'] == 0\n        assert stats['avg_time'] > 0.1  # Should be at least the sleep time\n    \n"
                  },
                  "endLine": 106,
                  "startLine": 104
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert stats['count'] == 1\n"
                  },
                  "startLine": 126
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        stats = service._performance_metrics.get_operation_stats('failing_operation')\n        assert stats['count'] == 1\n        assert stats['errors'] == 1\n"
                  },
                  "endLine": 127,
                  "startLine": 125
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert stats['errors'] == 1\n"
                  },
                  "startLine": 127
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert stats['count'] == 1\n        assert stats['errors'] == 1\n        assert stats['success_rate'] == 0.0\n"
                  },
                  "endLine": 128,
                  "startLine": 126
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert stats['success_rate'] == 0.0\n"
                  },
                  "startLine": 128
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert stats['errors'] == 1\n        assert stats['success_rate'] == 0.0\n\n"
                  },
                  "endLine": 129,
                  "startLine": 127
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(service, '_performance_metrics')\n"
                  },
                  "startLine": 138
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert hasattr(service, '_performance_metrics')\n        assert hasattr(service, '_connection_pool')\n"
                  },
                  "endLine": 139,
                  "startLine": 137
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(service, '_connection_pool')\n"
                  },
                  "startLine": 139
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(service, '_performance_metrics')\n        assert hasattr(service, '_connection_pool')\n        assert hasattr(service, '_data_cache')\n"
                  },
                  "endLine": 140,
                  "startLine": 138
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(service, '_data_cache')\n"
                  },
                  "startLine": 140
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(service, '_connection_pool')\n        assert hasattr(service, '_data_cache')\n        assert service._enable_caching is True\n"
                  },
                  "endLine": 141,
                  "startLine": 139
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert service._enable_caching is True\n"
                  },
                  "startLine": 141
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(service, '_data_cache')\n        assert service._enable_caching is True\n        assert service._enable_bulk_operations is True\n"
                  },
                  "endLine": 142,
                  "startLine": 140
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert service._enable_bulk_operations is True\n"
                  },
                  "startLine": 142
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert service._enable_caching is True\n        assert service._enable_bulk_operations is True\n    \n"
                  },
                  "endLine": 143,
                  "startLine": 141
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert service._enable_caching is False\n"
                  },
                  "startLine": 151
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert service._enable_caching is False\n        assert service._enable_bulk_operations is False\n"
                  },
                  "endLine": 152,
                  "startLine": 150
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert service._enable_bulk_operations is False\n"
                  },
                  "startLine": 152
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert service._enable_caching is False\n        assert service._enable_bulk_operations is False\n        \n"
                  },
                  "endLine": 153,
                  "startLine": 151
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert service._enable_caching is True\n"
                  },
                  "startLine": 157
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert service._enable_caching is True\n        assert service._enable_bulk_operations is True\n"
                  },
                  "endLine": 158,
                  "startLine": 156
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert service._enable_bulk_operations is True\n"
                  },
                  "startLine": 158
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert service._enable_caching is True\n        assert service._enable_bulk_operations is True\n    \n"
                  },
                  "endLine": 159,
                  "startLine": 157
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'timestamp' in metrics\n"
                  },
                  "startLine": 171
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'timestamp' in metrics\n        assert 'operation_metrics' in metrics\n"
                  },
                  "endLine": 172,
                  "startLine": 170
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'operation_metrics' in metrics\n"
                  },
                  "startLine": 172
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'timestamp' in metrics\n        assert 'operation_metrics' in metrics\n        assert 'connection_pool' in metrics\n"
                  },
                  "endLine": 173,
                  "startLine": 171
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'connection_pool' in metrics\n"
                  },
                  "startLine": 173
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'operation_metrics' in metrics\n        assert 'connection_pool' in metrics\n        assert 'data_cache' in metrics\n"
                  },
                  "endLine": 174,
                  "startLine": 172
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'data_cache' in metrics\n"
                  },
                  "startLine": 174
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'connection_pool' in metrics\n        assert 'data_cache' in metrics\n        assert 'configuration' in metrics\n"
                  },
                  "endLine": 175,
                  "startLine": 173
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'configuration' in metrics\n"
                  },
                  "startLine": 175
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'data_cache' in metrics\n        assert 'configuration' in metrics\n    \n"
                  },
                  "endLine": 176,
                  "startLine": 174
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'total_operations' in summary\n"
                  },
                  "startLine": 184
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'total_operations' in summary\n        assert 'average_response_time_ms' in summary\n"
                  },
                  "endLine": 185,
                  "startLine": 183
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'average_response_time_ms' in summary\n"
                  },
                  "startLine": 185
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'total_operations' in summary\n        assert 'average_response_time_ms' in summary\n        assert 'success_rate_percent' in summary\n"
                  },
                  "endLine": 186,
                  "startLine": 184
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'success_rate_percent' in summary\n"
                  },
                  "startLine": 186
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'average_response_time_ms' in summary\n        assert 'success_rate_percent' in summary\n        assert 'performance_optimizations' in summary\n"
                  },
                  "endLine": 187,
                  "startLine": 185
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'performance_optimizations' in summary\n"
                  },
                  "startLine": 187
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'success_rate_percent' in summary\n        assert 'performance_optimizations' in summary\n        \n"
                  },
                  "endLine": 188,
                  "startLine": 186
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'caching' in opts\n"
                  },
                  "startLine": 191
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        opts = summary['performance_optimizations']\n        assert 'caching' in opts\n        assert 'bulk_operations' in opts\n"
                  },
                  "endLine": 192,
                  "startLine": 190
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'bulk_operations' in opts\n"
                  },
                  "startLine": 192
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'caching' in opts\n        assert 'bulk_operations' in opts\n        assert 'connection_pooling' in opts\n"
                  },
                  "endLine": 193,
                  "startLine": 191
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'connection_pooling' in opts\n"
                  },
                  "startLine": 193
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'bulk_operations' in opts\n        assert 'connection_pooling' in opts\n    \n"
                  },
                  "endLine": 194,
                  "startLine": 192
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert service._last_cache_cleanup == future_time\n"
                  },
                  "startLine": 215
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Cleanup time should be updated\n        assert service._last_cache_cleanup == future_time\n\n"
                  },
                  "endLine": 216,
                  "startLine": 214
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(service._connection_pool, TTLCache)\n"
                  },
                  "startLine": 226
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert isinstance(service._connection_pool, TTLCache)\n        assert service._connection_pool.maxsize == 20\n"
                  },
                  "endLine": 227,
                  "startLine": 225
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert service._connection_pool.maxsize == 20\n"
                  },
                  "startLine": 227
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert isinstance(service._connection_pool, TTLCache)\n        assert service._connection_pool.maxsize == 20\n        assert service._connection_pool.ttl == 300.0  # 5 minutes\n"
                  },
                  "endLine": 228,
                  "startLine": 226
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert service._connection_pool.ttl == 300.0  # 5 minutes\n"
                  },
                  "startLine": 228
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert service._connection_pool.maxsize == 20\n        assert service._connection_pool.ttl == 300.0  # 5 minutes\n    \n"
                  },
                  "endLine": 229,
                  "startLine": 227
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(service._data_cache, TTLCache)\n"
                  },
                  "startLine": 235
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert isinstance(service._data_cache, TTLCache)\n        assert service._data_cache.maxsize == 1024\n"
                  },
                  "endLine": 236,
                  "startLine": 234
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert service._data_cache.maxsize == 1024\n"
                  },
                  "startLine": 236
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert isinstance(service._data_cache, TTLCache)\n        assert service._data_cache.maxsize == 1024\n        assert service._data_cache.ttl == 2.0  # 2 seconds\n"
                  },
                  "endLine": 237,
                  "startLine": 235
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert service._data_cache.ttl == 2.0  # 2 seconds\n"
                  },
                  "startLine": 237
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert service._data_cache.maxsize == 1024\n        assert service._data_cache.ttl == 2.0  # 2 seconds\n    \n"
                  },
                  "endLine": 238,
                  "startLine": 236
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'connection_pool' in metrics\n"
                  },
                  "startLine": 255
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'connection_pool' in metrics\n        assert 'active_connections' in metrics['connection_pool']\n"
                  },
                  "endLine": 256,
                  "startLine": 254
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'active_connections' in metrics['connection_pool']\n"
                  },
                  "startLine": 256
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'connection_pool' in metrics\n        assert 'active_connections' in metrics['connection_pool']\n        assert 'max_connections' in metrics['connection_pool']\n"
                  },
                  "endLine": 257,
                  "startLine": 255
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'max_connections' in metrics['connection_pool']\n"
                  },
                  "startLine": 257
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'active_connections' in metrics['connection_pool']\n        assert 'max_connections' in metrics['connection_pool']\n        assert 'connection_ttl_seconds' in metrics['connection_pool']\n"
                  },
                  "endLine": 258,
                  "startLine": 256
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'connection_ttl_seconds' in metrics['connection_pool']\n"
                  },
                  "startLine": 258
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'max_connections' in metrics['connection_pool']\n        assert 'connection_ttl_seconds' in metrics['connection_pool']\n        assert metrics['connection_pool']['max_connections'] == 20\n"
                  },
                  "endLine": 259,
                  "startLine": 257
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert metrics['connection_pool']['max_connections'] == 20\n"
                  },
                  "startLine": 259
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'connection_ttl_seconds' in metrics['connection_pool']\n        assert metrics['connection_pool']['max_connections'] == 20\n        assert metrics['connection_pool']['connection_ttl_seconds'] == 300.0\n"
                  },
                  "endLine": 260,
                  "startLine": 258
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert metrics['connection_pool']['connection_ttl_seconds'] == 300.0\n"
                  },
                  "startLine": 260
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert metrics['connection_pool']['max_connections'] == 20\n        assert metrics['connection_pool']['connection_ttl_seconds'] == 300.0\n        \n"
                  },
                  "endLine": 261,
                  "startLine": 259
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'data_cache' in metrics\n"
                  },
                  "startLine": 262
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'data_cache' in metrics\n        assert 'cached_readings' in metrics['data_cache']\n"
                  },
                  "endLine": 263,
                  "startLine": 261
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'cached_readings' in metrics['data_cache']\n"
                  },
                  "startLine": 263
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'data_cache' in metrics\n        assert 'cached_readings' in metrics['data_cache']\n        assert 'cache_ttl_seconds' in metrics['data_cache']\n"
                  },
                  "endLine": 264,
                  "startLine": 262
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'cache_ttl_seconds' in metrics['data_cache']\n"
                  },
                  "startLine": 264
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'cached_readings' in metrics['data_cache']\n        assert 'cache_ttl_seconds' in metrics['data_cache']\n        assert 'max_cache_size' in metrics['data_cache']\n"
                  },
                  "endLine": 265,
                  "startLine": 263
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'max_cache_size' in metrics['data_cache']\n"
                  },
                  "startLine": 265
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'cache_ttl_seconds' in metrics['data_cache']\n        assert 'max_cache_size' in metrics['data_cache']\n        assert metrics['data_cache']['cache_ttl_seconds'] == 2.0\n"
                  },
                  "endLine": 266,
                  "startLine": 264
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert metrics['data_cache']['cache_ttl_seconds'] == 2.0\n"
                  },
                  "startLine": 266
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'max_cache_size' in metrics['data_cache']\n        assert metrics['data_cache']['cache_ttl_seconds'] == 2.0\n        assert metrics['data_cache']['max_cache_size'] == 1024\n"
                  },
                  "endLine": 267,
                  "startLine": 265
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert metrics['data_cache']['max_cache_size'] == 1024\n"
                  },
                  "startLine": 267
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert metrics['data_cache']['cache_ttl_seconds'] == 2.0\n        assert metrics['data_cache']['max_cache_size'] == 1024\n    \n"
                  },
                  "endLine": 268,
                  "startLine": 266
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'device_id' in stats\n"
                  },
                  "startLine": 289
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'device_id' in stats\n        assert 'cached_readings' in stats\n"
                  },
                  "endLine": 290,
                  "startLine": 288
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'cached_readings' in stats\n"
                  },
                  "startLine": 290
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'device_id' in stats\n        assert 'cached_readings' in stats\n        assert stats['cached_readings'] == 2\n"
                  },
                  "endLine": 291,
                  "startLine": 289
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert stats['cached_readings'] == 2\n"
                  },
                  "startLine": 291
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'cached_readings' in stats\n        assert stats['cached_readings'] == 2\n        assert 'connection_established' in stats\n"
                  },
                  "endLine": 292,
                  "startLine": 290
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'connection_established' in stats\n"
                  },
                  "startLine": 292
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert stats['cached_readings'] == 2\n        assert 'connection_established' in stats\n        assert 'connection_last_used' in stats\n"
                  },
                  "endLine": 293,
                  "startLine": 291
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'connection_last_used' in stats\n"
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'connection_established' in stats\n        assert 'connection_last_used' in stats\n    \n"
                  },
                  "endLine": 294,
                  "startLine": 292
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(service._data_cache) == 3\n"
                  },
                  "startLine": 311
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert len(service._data_cache) == 3\n        \n"
                  },
                  "endLine": 312,
                  "startLine": 310
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(remaining_keys) == 1\n"
                  },
                  "startLine": 318
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        remaining_keys = list(service._data_cache.keys())\n        assert len(remaining_keys) == 1\n        assert remaining_keys[0] == ('device2', 1)\n"
                  },
                  "endLine": 319,
                  "startLine": 317
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert remaining_keys[0] == ('device2', 1)\n"
                  },
                  "startLine": 319
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert len(remaining_keys) == 1\n        assert remaining_keys[0] == ('device2', 1)\n    \n"
                  },
                  "endLine": 320,
                  "startLine": 318
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(service._data_cache) == 1\n"
                  },
                  "startLine": 327
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        service._data_cache[('device1', 1)] = {'value': 25.5}\n        assert len(service._data_cache) == 1\n        \n"
                  },
                  "endLine": 328,
                  "startLine": 326
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(service._data_cache) == 0\n"
                  },
                  "startLine": 333
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Cache should be empty due to automatic expiration\n        assert len(service._data_cache) == 0\n    \n"
                  },
                  "endLine": 334,
                  "startLine": 332
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(service._connection_pool) == 1\n"
                  },
                  "startLine": 344
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        }\n        assert len(service._connection_pool) == 1\n        \n"
                  },
                  "endLine": 345,
                  "startLine": 343
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(service._connection_pool) == 1\n"
                  },
                  "startLine": 348
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_dnp3_performance.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        time.sleep(1)\n        assert len(service._connection_pool) == 1\n        \n"
                  },
                  "endLine": 349,
                  "startLine": 347
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert admin_role.has_permission(\"read_users\") is True\n"
                  },
                  "startLine": 15
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Test with valid string permission\n        assert admin_role.has_permission(\"read_users\") is True\n        assert admin_role.has_permission(\"write_users\") is True\n"
                  },
                  "endLine": 16,
                  "startLine": 14
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert admin_role.has_permission(\"write_users\") is True\n"
                  },
                  "startLine": 16
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert admin_role.has_permission(\"read_users\") is True\n        assert admin_role.has_permission(\"write_users\") is True\n        assert admin_role.has_permission(\"nonexistent_permission\") is False\n"
                  },
                  "endLine": 17,
                  "startLine": 15
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert admin_role.has_permission(\"nonexistent_permission\") is False\n"
                  },
                  "startLine": 17
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert admin_role.has_permission(\"write_users\") is True\n        assert admin_role.has_permission(\"nonexistent_permission\") is False\n    \n"
                  },
                  "endLine": 18,
                  "startLine": 16
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert admin_role.has_permission(PermissionEnum.READ_USERS) is True\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Test with PermissionEnum\n        assert admin_role.has_permission(PermissionEnum.READ_USERS) is True\n        assert admin_role.has_permission(PermissionEnum.WRITE_USERS) is True\n"
                  },
                  "endLine": 26,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert admin_role.has_permission(PermissionEnum.WRITE_USERS) is True\n"
                  },
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert admin_role.has_permission(PermissionEnum.READ_USERS) is True\n        assert admin_role.has_permission(PermissionEnum.WRITE_USERS) is True\n    \n"
                  },
                  "endLine": 27,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert admin_user.has_permission(\"read_users\") is True\n"
                  },
                  "startLine": 52
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Valid cases should work\n        assert admin_user.has_permission(\"read_users\") is True\n        assert admin_user.has_permission(PermissionEnum.READ_USERS) is True\n"
                  },
                  "endLine": 53,
                  "startLine": 51
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert admin_user.has_permission(PermissionEnum.READ_USERS) is True\n"
                  },
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert admin_user.has_permission(\"read_users\") is True\n        assert admin_user.has_permission(PermissionEnum.READ_USERS) is True\n        \n"
                  },
                  "endLine": 54,
                  "startLine": 52
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(all_permission_enums) == 8, f\"Expected exactly 8 permissions, got {len(all_permission_enums)}\"\n"
                  },
                  "startLine": 76
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Exact count assertion instead of weak count > 0\n        assert len(all_permission_enums) == 8, f\"Expected exactly 8 permissions, got {len(all_permission_enums)}\"\n        \n"
                  },
                  "endLine": 77,
                  "startLine": 75
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert actual_permissions == expected_permissions, (\n"
                  },
                  "startLine": 79
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Set-based comparison for exact matching\n        assert actual_permissions == expected_permissions, (\n            f\"Permission mismatch detected!\\n\"\n            f\"Expected: {sorted(expected_permissions)}\\n\"\n            f\"Actual:   {sorted(actual_permissions)}\\n\"\n            f\"Missing:  {sorted(expected_permissions - actual_permissions)}\\n\"\n            f\"Extra:    {sorted(actual_permissions - expected_permissions)}\"\n        )\n        \n"
                  },
                  "endLine": 86,
                  "startLine": 78
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert isinstance(result, bool), f\"Permission {permission.value} should return boolean\"\n"
                  },
                  "startLine": 90
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            result = admin_role.has_permission(permission)\n            assert isinstance(result, bool), f\"Permission {permission.value} should return boolean\"\n    \n"
                  },
                  "endLine": 91,
                  "startLine": 89
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(actual_permission_strings) == 8, f\"Expected exactly 8 permissions, got {len(actual_permission_strings)}\"\n"
                  },
                  "startLine": 108
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Exact count assertion instead of weak count > 0\n        assert len(actual_permission_strings) == 8, f\"Expected exactly 8 permissions, got {len(actual_permission_strings)}\"\n        \n"
                  },
                  "endLine": 109,
                  "startLine": 107
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert actual_permission_strings == expected_permission_strings, (\n"
                  },
                  "startLine": 111
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Set-based comparison with meaningful diff output\n        assert actual_permission_strings == expected_permission_strings, (\n            f\"Permission string mismatch detected!\\n\"\n            f\"Expected: {sorted(expected_permission_strings)}\\n\" \n            f\"Actual:   {sorted(actual_permission_strings)}\\n\"\n            f\"Missing:  {sorted(expected_permission_strings - actual_permission_strings)}\\n\"\n            f\"Extra:    {sorted(actual_permission_strings - expected_permission_strings)}\"\n        )\n        \n"
                  },
                  "endLine": 118,
                  "startLine": 110
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert isinstance(result, bool), f\"Permission string '{permission}' should return boolean\"\n"
                  },
                  "startLine": 122
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            result = admin_role.has_permission(permission)\n            assert isinstance(result, bool), f\"Permission string '{permission}' should return boolean\"\n            \n"
                  },
                  "endLine": 123,
                  "startLine": 121
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert admin_role.has_permission(permission) is False\n"
                  },
                  "startLine": 132
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        for permission in invalid_permissions:\n            assert admin_role.has_permission(permission) is False\n    \n"
                  },
                  "endLine": 133,
                  "startLine": 131
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(all_permissions) == 8, f\"Expected exactly 8 permissions, got {len(all_permissions)}\"\n"
                  },
                  "startLine": 152
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Exact count assertion\n        assert len(all_permissions) == 8, f\"Expected exactly 8 permissions, got {len(all_permissions)}\"\n        \n"
                  },
                  "endLine": 153,
                  "startLine": 151
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert actual_permissions == expected_permissions, (\n"
                  },
                  "startLine": 155
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Exact set comparison with meaningful diff\n        assert actual_permissions == expected_permissions, (\n            f\"Permission set mismatch detected!\\n\"\n            f\"Expected: {sorted(expected_permissions)}\\n\"\n            f\"Actual:   {sorted(actual_permissions)}\\n\"\n            f\"Missing:  {sorted(expected_permissions - actual_permissions)}\\n\"\n            f\"Extra:    {sorted(actual_permissions - expected_permissions)}\"\n        )\n        \n"
                  },
                  "endLine": 162,
                  "startLine": 154
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert isinstance(enum_result, bool)\n"
                  },
                  "startLine": 167
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            enum_result = admin_role.has_permission(permission_enum)\n            assert isinstance(enum_result, bool)\n            \n"
                  },
                  "endLine": 168,
                  "startLine": 166
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert isinstance(string_result, bool)\n"
                  },
                  "startLine": 171
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            string_result = admin_role.has_permission(permission_enum.value)\n            assert isinstance(string_result, bool)\n            \n"
                  },
                  "endLine": 172,
                  "startLine": 170
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert enum_result == string_result\n"
                  },
                  "startLine": 174
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Both should return the same result\n            assert enum_result == string_result\n    \n"
                  },
                  "endLine": 175,
                  "startLine": 173
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(invalid_types) == 9, f\"Expected exactly 9 invalid types to test, got {len(invalid_types)}\"\n"
                  },
                  "startLine": 195
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Exact count assertion for test coverage\n        assert len(invalid_types) == 9, f\"Expected exactly 9 invalid types to test, got {len(invalid_types)}\"\n        \n"
                  },
                  "endLine": 196,
                  "startLine": 194
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert admin_role is not None, \"Admin role should exist\"\n"
                  },
                  "startLine": 211
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Verify all roles exist\n        assert admin_role is not None, \"Admin role should exist\"\n        assert operator_role is not None, \"Operator role should exist\" \n"
                  },
                  "endLine": 212,
                  "startLine": 210
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert operator_role is not None, \"Operator role should exist\" \n"
                  },
                  "startLine": 212
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert admin_role is not None, \"Admin role should exist\"\n        assert operator_role is not None, \"Operator role should exist\" \n        assert viewer_role is not None, \"Viewer role should exist\"\n"
                  },
                  "endLine": 213,
                  "startLine": 211
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert viewer_role is not None, \"Viewer role should exist\"\n"
                  },
                  "startLine": 213
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert operator_role is not None, \"Operator role should exist\" \n        assert viewer_role is not None, \"Viewer role should exist\"\n        \n"
                  },
                  "endLine": 214,
                  "startLine": 212
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert role.has_permission(\"remote_control\") is True, f\"{role_name} role should have remote_control permission (string)\"\n"
                  },
                  "startLine": 224
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Test with string permission\n            assert role.has_permission(\"remote_control\") is True, f\"{role_name} role should have remote_control permission (string)\"\n            \n"
                  },
                  "endLine": 225,
                  "startLine": 223
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert role.has_permission(PermissionEnum.REMOTE_CONTROL) is True, f\"{role_name} role should have remote_control permission (enum)\"\n"
                  },
                  "startLine": 227
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Test with enum permission\n            assert role.has_permission(PermissionEnum.REMOTE_CONTROL) is True, f\"{role_name} role should have remote_control permission (enum)\"\n            \n"
                  },
                  "endLine": 228,
                  "startLine": 226
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(PermissionEnum, 'REMOTE_CONTROL'), \"REMOTE_CONTROL should exist in PermissionEnum\"\n"
                  },
                  "startLine": 230
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Verify that the remote control permission exists in the enum\n        assert hasattr(PermissionEnum, 'REMOTE_CONTROL'), \"REMOTE_CONTROL should exist in PermissionEnum\"\n        assert PermissionEnum.REMOTE_CONTROL.value == \"remote_control\", \"REMOTE_CONTROL enum value should be 'remote_control'\"\n"
                  },
                  "endLine": 231,
                  "startLine": 229
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert PermissionEnum.REMOTE_CONTROL.value == \"remote_control\", \"REMOTE_CONTROL enum value should be 'remote_control'\"\n"
                  },
                  "startLine": 231
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_enhanced_permissions.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(PermissionEnum, 'REMOTE_CONTROL'), \"REMOTE_CONTROL should exist in PermissionEnum\"\n        assert PermissionEnum.REMOTE_CONTROL.value == \"remote_control\", \"REMOTE_CONTROL enum value should be 'remote_control'\"\n"
                  },
                  "endLine": 231,
                  "startLine": 230
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Possible hardcoded password: 'admin123'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    def get_auth_token(self, client, username='admin', password='admin123'):\n"
                  },
                  "startLine": 21
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \n    def get_auth_token(self, client, username='admin', password='admin123'):\n        \"\"\"Helper method to get auth token.\"\"\"\n        response = client.post('/api/v1/auth/login',\n            json={'username': username, 'password': password}\n        )\n        if response.status_code == 200:\n            return response.json['access_token']\n        return None\n\n"
                  },
                  "endLine": 29,
                  "startLine": 20
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B107",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert response.status_code == 400\n"
                  },
                  "startLine": 47
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    # Verify response\n                    assert response.status_code == 400\n                    data = response.json\n"
                  },
                  "endLine": 48,
                  "startLine": 46
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert 'success' in data\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    # Check new error envelope structure\n                    assert 'success' in data\n                    assert data['success'] is False\n"
                  },
                  "endLine": 52,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert data['success'] is False\n"
                  },
                  "startLine": 52
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert 'success' in data\n                    assert data['success'] is False\n                    assert 'error' in data\n"
                  },
                  "endLine": 53,
                  "startLine": 51
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert 'error' in data\n"
                  },
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert data['success'] is False\n                    assert 'error' in data\n                    assert 'code' in data['error']\n"
                  },
                  "endLine": 54,
                  "startLine": 52
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert 'code' in data['error']\n"
                  },
                  "startLine": 54
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert 'error' in data\n                    assert 'code' in data['error']\n                    assert 'message' in data['error']\n"
                  },
                  "endLine": 55,
                  "startLine": 53
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert 'message' in data['error']\n"
                  },
                  "startLine": 55
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert 'code' in data['error']\n                    assert 'message' in data['error']\n                    \n"
                  },
                  "endLine": 56,
                  "startLine": 54
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert 'Sensitive internal error details' not in str(data)\n"
                  },
                  "startLine": 58
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    # Should NOT contain the sensitive error details\n                    assert 'Sensitive internal error details' not in str(data)\n                    \n"
                  },
                  "endLine": 59,
                  "startLine": 57
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert data['error']['message'] == 'Invalid date format provided. Please use ISO 8601 format.'\n"
                  },
                  "startLine": 61
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    # Should contain generic message\n                    assert data['error']['message'] == 'Invalid date format provided. Please use ISO 8601 format.'\n                    assert data['error']['code'] == 'VALIDATION_ERROR'\n"
                  },
                  "endLine": 62,
                  "startLine": 60
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert data['error']['code'] == 'VALIDATION_ERROR'\n"
                  },
                  "startLine": 62
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert data['error']['message'] == 'Invalid date format provided. Please use ISO 8601 format.'\n                    assert data['error']['code'] == 'VALIDATION_ERROR'\n                    \n"
                  },
                  "endLine": 63,
                  "startLine": 61
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert mock_logger.error.called\n"
                  },
                  "startLine": 65
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    # Verify logger was called\n                    assert mock_logger.error.called\n\n"
                  },
                  "endLine": 66,
                  "startLine": 64
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert response.status_code == 400\n"
                  },
                  "startLine": 88
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    # Verify response\n                    assert response.status_code == 400\n                    data = response.json\n"
                  },
                  "endLine": 89,
                  "startLine": 87
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert 'success' in data\n"
                  },
                  "startLine": 92
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    # Check new error envelope structure\n                    assert 'success' in data\n                    assert data['success'] is False\n"
                  },
                  "endLine": 93,
                  "startLine": 91
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert data['success'] is False\n"
                  },
                  "startLine": 93
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert 'success' in data\n                    assert data['success'] is False\n                    assert 'error' in data\n"
                  },
                  "endLine": 94,
                  "startLine": 92
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert 'error' in data\n"
                  },
                  "startLine": 94
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert data['success'] is False\n                    assert 'error' in data\n                    \n"
                  },
                  "endLine": 95,
                  "startLine": 93
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert 'Sensitive date parsing error' not in str(data)\n"
                  },
                  "startLine": 97
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    # Should NOT contain the sensitive error details\n                    assert 'Sensitive date parsing error' not in str(data)\n                    \n"
                  },
                  "endLine": 98,
                  "startLine": 96
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert data['error']['message'] == 'Invalid date format provided. Please use ISO 8601 format.'\n"
                  },
                  "startLine": 100
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    # Should contain generic message\n                    assert data['error']['message'] == 'Invalid date format provided. Please use ISO 8601 format.'\n                    assert data['error']['code'] == 'VALIDATION_ERROR'\n"
                  },
                  "endLine": 101,
                  "startLine": 99
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert data['error']['code'] == 'VALIDATION_ERROR'\n"
                  },
                  "startLine": 101
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert data['error']['message'] == 'Invalid date format provided. Please use ISO 8601 format.'\n                    assert data['error']['code'] == 'VALIDATION_ERROR'\n                    \n"
                  },
                  "endLine": 102,
                  "startLine": 100
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert mock_logger.error.called\n"
                  },
                  "startLine": 104
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    # Verify logger was called\n                    assert mock_logger.error.called\n\n"
                  },
                  "endLine": 105,
                  "startLine": 103
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 400\n"
                  },
                  "startLine": 117
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Verify response\n        assert response.status_code == 400\n        data = response.json\n"
                  },
                  "endLine": 118,
                  "startLine": 116
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'success' in data\n"
                  },
                  "startLine": 121
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Check new error envelope structure\n        assert 'success' in data\n        assert data['success'] is False\n"
                  },
                  "endLine": 122,
                  "startLine": 120
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['success'] is False\n"
                  },
                  "startLine": 122
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'success' in data\n        assert data['success'] is False\n        assert 'error' in data\n"
                  },
                  "endLine": 123,
                  "startLine": 121
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'error' in data\n"
                  },
                  "startLine": 123
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['success'] is False\n        assert 'error' in data\n        assert data['error']['code'] == 'VALIDATION_ERROR'\n"
                  },
                  "endLine": 124,
                  "startLine": 122
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['error']['code'] == 'VALIDATION_ERROR'\n"
                  },
                  "startLine": 124
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'error' in data\n        assert data['error']['code'] == 'VALIDATION_ERROR'\n        assert 'field_errors' in data['error']['details']\n"
                  },
                  "endLine": 125,
                  "startLine": 123
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'field_errors' in data['error']['details']\n"
                  },
                  "startLine": 125
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['error']['code'] == 'VALIDATION_ERROR'\n        assert 'field_errors' in data['error']['details']\n        \n"
                  },
                  "endLine": 126,
                  "startLine": 124
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'days' in data['error']['details']['field_errors']\n"
                  },
                  "startLine": 128
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # The error should mention the 'days' field\n        assert 'days' in data['error']['details']['field_errors']\n\n"
                  },
                  "endLine": 129,
                  "startLine": 127
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 400\n"
                  },
                  "startLine": 141
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Verify response\n        assert response.status_code == 400\n        data = response.json\n"
                  },
                  "endLine": 142,
                  "startLine": 140
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'success' in data\n"
                  },
                  "startLine": 145
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Check new error envelope structure\n        assert 'success' in data\n        assert data['success'] is False\n"
                  },
                  "endLine": 146,
                  "startLine": 144
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['success'] is False\n"
                  },
                  "startLine": 146
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'success' in data\n        assert data['success'] is False\n        assert 'error' in data\n"
                  },
                  "endLine": 147,
                  "startLine": 145
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'error' in data\n"
                  },
                  "startLine": 147
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['success'] is False\n        assert 'error' in data\n        assert data['error']['code'] == 'VALIDATION_ERROR'\n"
                  },
                  "endLine": 148,
                  "startLine": 146
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['error']['code'] == 'VALIDATION_ERROR'\n"
                  },
                  "startLine": 148
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'error' in data\n        assert data['error']['code'] == 'VALIDATION_ERROR'\n        assert 'field_errors' in data['error']['details']\n"
                  },
                  "endLine": 149,
                  "startLine": 147
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'field_errors' in data['error']['details']\n"
                  },
                  "startLine": 149
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['error']['code'] == 'VALIDATION_ERROR'\n        assert 'field_errors' in data['error']['details']\n        \n"
                  },
                  "endLine": 150,
                  "startLine": 148
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'hours' in data['error']['details']['field_errors']\n"
                  },
                  "startLine": 152
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # The error should mention the 'hours' field\n        assert 'hours' in data['error']['details']['field_errors']\n\n"
                  },
                  "endLine": 153,
                  "startLine": 151
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 400\n"
                  },
                  "startLine": 165
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Verify response\n        assert response.status_code == 400\n        data = response.json\n"
                  },
                  "endLine": 166,
                  "startLine": 164
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'success' in data\n"
                  },
                  "startLine": 169
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Check new error envelope structure\n        assert 'success' in data\n        assert data['success'] is False\n"
                  },
                  "endLine": 170,
                  "startLine": 168
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['success'] is False\n"
                  },
                  "startLine": 170
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'success' in data\n        assert data['success'] is False\n        assert 'error' in data\n"
                  },
                  "endLine": 171,
                  "startLine": 169
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'error' in data\n"
                  },
                  "startLine": 171
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['success'] is False\n        assert 'error' in data\n        assert data['error']['code'] == 'VALIDATION_ERROR'\n"
                  },
                  "endLine": 172,
                  "startLine": 170
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['error']['code'] == 'VALIDATION_ERROR'\n"
                  },
                  "startLine": 172
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'error' in data\n        assert data['error']['code'] == 'VALIDATION_ERROR'\n        assert 'field_errors' in data['error']['details']\n"
                  },
                  "endLine": 173,
                  "startLine": 171
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'field_errors' in data['error']['details']\n"
                  },
                  "startLine": 173
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['error']['code'] == 'VALIDATION_ERROR'\n        assert 'field_errors' in data['error']['details']\n        \n"
                  },
                  "endLine": 174,
                  "startLine": 172
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'days' in data['error']['details']['field_errors']\n"
                  },
                  "startLine": 176
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_message_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # The error should mention the 'days' field\n        assert 'days' in data['error']['details']['field_errors']\n"
                  },
                  "endLine": 176,
                  "startLine": 175
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert should_continue is False\n"
                  },
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Should not continue and should have an error to raise\n        assert should_continue is False\n        assert error_to_raise is not None\n"
                  },
                  "endLine": 27,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert error_to_raise is not None\n"
                  },
                  "startLine": 27
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert should_continue is False\n        assert error_to_raise is not None\n        assert isinstance(error_to_raise, RuntimeError)\n"
                  },
                  "endLine": 28,
                  "startLine": 26
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(error_to_raise, RuntimeError)\n"
                  },
                  "startLine": 28
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert error_to_raise is not None\n        assert isinstance(error_to_raise, RuntimeError)\n        assert \"security validation failed in production\" in str(error_to_raise)\n"
                  },
                  "endLine": 29,
                  "startLine": 27
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"security validation failed in production\" in str(error_to_raise)\n"
                  },
                  "startLine": 29
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert isinstance(error_to_raise, RuntimeError)\n        assert \"security validation failed in production\" in str(error_to_raise)\n        assert error_to_raise.__cause__ is original_error\n"
                  },
                  "endLine": 30,
                  "startLine": 28
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert error_to_raise.__cause__ is original_error\n"
                  },
                  "startLine": 30
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert \"security validation failed in production\" in str(error_to_raise)\n        assert error_to_raise.__cause__ is original_error\n    \n"
                  },
                  "endLine": 31,
                  "startLine": 29
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert should_continue is False\n"
                  },
                  "startLine": 45
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Should not continue and should have an error to raise\n        assert should_continue is False\n        assert error_to_raise is not None\n"
                  },
                  "endLine": 46,
                  "startLine": 44
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert error_to_raise is not None\n"
                  },
                  "startLine": 46
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert should_continue is False\n        assert error_to_raise is not None\n        assert isinstance(error_to_raise, RuntimeError)\n"
                  },
                  "endLine": 47,
                  "startLine": 45
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(error_to_raise, RuntimeError)\n"
                  },
                  "startLine": 47
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert error_to_raise is not None\n        assert isinstance(error_to_raise, RuntimeError)\n        assert \"Critical service initialization failed\" in str(error_to_raise)\n"
                  },
                  "endLine": 48,
                  "startLine": 46
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"Critical service initialization failed\" in str(error_to_raise)\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert isinstance(error_to_raise, RuntimeError)\n        assert \"Critical service initialization failed\" in str(error_to_raise)\n        assert error_to_raise.__cause__ is original_error\n"
                  },
                  "endLine": 49,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert error_to_raise.__cause__ is original_error\n"
                  },
                  "startLine": 49
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert \"Critical service initialization failed\" in str(error_to_raise)\n        assert error_to_raise.__cause__ is original_error\n    \n"
                  },
                  "endLine": 50,
                  "startLine": 48
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert should_continue is False\n"
                  },
                  "startLine": 65
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Should not continue and should have an error to raise\n        assert should_continue is False\n        assert error_to_raise is not None\n"
                  },
                  "endLine": 66,
                  "startLine": 64
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert error_to_raise is not None\n"
                  },
                  "startLine": 66
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert should_continue is False\n        assert error_to_raise is not None\n        assert isinstance(error_to_raise, RuntimeError)\n"
                  },
                  "endLine": 67,
                  "startLine": 65
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(error_to_raise, RuntimeError)\n"
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert error_to_raise is not None\n        assert isinstance(error_to_raise, RuntimeError)\n        assert \"initialization failed in testing\" in str(error_to_raise)\n"
                  },
                  "endLine": 68,
                  "startLine": 66
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"initialization failed in testing\" in str(error_to_raise)\n"
                  },
                  "startLine": 68
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert isinstance(error_to_raise, RuntimeError)\n        assert \"initialization failed in testing\" in str(error_to_raise)\n        assert error_to_raise.__cause__ is original_error\n"
                  },
                  "endLine": 69,
                  "startLine": 67
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert error_to_raise.__cause__ is original_error\n"
                  },
                  "startLine": 69
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert \"initialization failed in testing\" in str(error_to_raise)\n        assert error_to_raise.__cause__ is original_error\n    \n"
                  },
                  "endLine": 70,
                  "startLine": 68
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert should_continue is False\n"
                  },
                  "startLine": 85
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Should not continue but no error to raise (handled in calling code)\n        assert should_continue is False\n        assert error_to_raise is None\n"
                  },
                  "endLine": 86,
                  "startLine": 84
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert error_to_raise is None\n"
                  },
                  "startLine": 86
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert should_continue is False\n        assert error_to_raise is None\n        mock_logger.error.assert_called_with(\n"
                  },
                  "endLine": 87,
                  "startLine": 85
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert should_continue is False\n"
                  },
                  "startLine": 105
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Should not continue but no error to raise (handled in calling code)\n        assert should_continue is False\n        assert error_to_raise is None\n"
                  },
                  "endLine": 106,
                  "startLine": 104
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert error_to_raise is None\n"
                  },
                  "startLine": 106
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert should_continue is False\n        assert error_to_raise is None\n        mock_logger.warning.assert_called_with(\n"
                  },
                  "endLine": 107,
                  "startLine": 105
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert result is False\n"
                  },
                  "startLine": 123
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            result = _initialize_critical_service(mock_service, \"Test Service\", mock_app, mock_logger)\n            assert result is False\n            \n"
                  },
                  "endLine": 124,
                  "startLine": 122
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert should_continue is False\n"
                  },
                  "startLine": 142
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Should not continue and should have a runtime error\n        assert should_continue is False\n        assert error_to_raise is not None\n"
                  },
                  "endLine": 143,
                  "startLine": 141
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert error_to_raise is not None\n"
                  },
                  "startLine": 143
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert should_continue is False\n        assert error_to_raise is not None\n        assert isinstance(error_to_raise, RuntimeError)\n"
                  },
                  "endLine": 144,
                  "startLine": 142
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(error_to_raise, RuntimeError)\n"
                  },
                  "startLine": 144
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert error_to_raise is not None\n        assert isinstance(error_to_raise, RuntimeError)\n        assert \"environment configuration error\" in str(error_to_raise)\n"
                  },
                  "endLine": 145,
                  "startLine": 143
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"environment configuration error\" in str(error_to_raise)\n"
                  },
                  "startLine": 145
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert isinstance(error_to_raise, RuntimeError)\n        assert \"environment configuration error\" in str(error_to_raise)\n        assert \"Env detection failed\" in str(error_to_raise.__cause__)\n"
                  },
                  "endLine": 146,
                  "startLine": 144
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"Env detection failed\" in str(error_to_raise.__cause__)\n"
                  },
                  "startLine": 146
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_error_propagation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert \"environment configuration error\" in str(error_to_raise)\n        assert \"Env detection failed\" in str(error_to_raise.__cause__)\n\n"
                  },
                  "endLine": 147,
                  "startLine": 145
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result == UnitStatusEnum.ONLINE\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = enum_field.deserialize('online')\n        assert result == UnitStatusEnum.ONLINE\n        \n"
                  },
                  "endLine": 26,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result == UnitStatusEnum.OFFLINE\n"
                  },
                  "startLine": 28
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = enum_field.deserialize('offline')\n        assert result == UnitStatusEnum.OFFLINE\n    \n"
                  },
                  "endLine": 29,
                  "startLine": 27
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'Invalid value \"invalid_status\"' in error_msg\n"
                  },
                  "startLine": 38
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        error_msg = str(exc_info.value)\n        assert 'Invalid value \"invalid_status\"' in error_msg\n        assert 'online' in error_msg\n"
                  },
                  "endLine": 39,
                  "startLine": 37
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'online' in error_msg\n"
                  },
                  "startLine": 39
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'Invalid value \"invalid_status\"' in error_msg\n        assert 'online' in error_msg\n        assert 'offline' in error_msg\n"
                  },
                  "endLine": 40,
                  "startLine": 38
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'offline' in error_msg\n"
                  },
                  "startLine": 40
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'online' in error_msg\n        assert 'offline' in error_msg\n    \n"
                  },
                  "endLine": 41,
                  "startLine": 39
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is None\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = enum_field.deserialize(None)\n        assert result is None\n        \n"
                  },
                  "endLine": 49,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result == enum_instance\n"
                  },
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = enum_field.deserialize(enum_instance)\n        assert result == enum_instance\n    \n"
                  },
                  "endLine": 54,
                  "startLine": 52
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result == HealthStatusEnum.OPTIMAL\n"
                  },
                  "startLine": 61
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = enum_field.deserialize('optimal')\n        assert result == HealthStatusEnum.OPTIMAL\n        \n"
                  },
                  "endLine": 62,
                  "startLine": 60
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'Invalid value \"invalid_health\"' in error_msg\n"
                  },
                  "startLine": 68
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        error_msg = str(exc_info.value)\n        assert 'Invalid value \"invalid_health\"' in error_msg\n        assert 'optimal' in error_msg\n"
                  },
                  "endLine": 69,
                  "startLine": 67
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'optimal' in error_msg\n"
                  },
                  "startLine": 69
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'Invalid value \"invalid_health\"' in error_msg\n        assert 'optimal' in error_msg\n        assert 'warning' in error_msg\n"
                  },
                  "endLine": 70,
                  "startLine": 68
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'warning' in error_msg\n"
                  },
                  "startLine": 70
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'optimal' in error_msg\n        assert 'warning' in error_msg\n        assert 'critical' in error_msg\n"
                  },
                  "endLine": 71,
                  "startLine": 69
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'critical' in error_msg\n"
                  },
                  "startLine": 71
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'warning' in error_msg\n        assert 'critical' in error_msg\n\n"
                  },
                  "endLine": 72,
                  "startLine": 70
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Possible hardcoded password: 'admin123'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    def get_auth_token(self, client, username='admin', password='admin123'):\n"
                  },
                  "startLine": 12
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \n    def get_auth_token(self, client, username='admin', password='admin123'):\n        \"\"\"Helper method to get auth token.\"\"\"\n        response = client.post('/api/v1/auth/login',\n            json={'username': username, 'password': password},\n            headers={'Content-Type': 'application/json'}\n        )\n        \n        if response.status_code == 200:\n            data = json.loads(response.data)\n            return data['access_token']\n        return None\n    \n"
                  },
                  "endLine": 23,
                  "startLine": 11
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B107",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert create_response.status_code == 201\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert create_response.status_code == 201\n        created_unit = json.loads(create_response.data)\n"
                  },
                  "endLine": 49,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert created_unit['id'] == 'LIFECYCLE001'\n"
                  },
                  "startLine": 50
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        created_unit = json.loads(create_response.data)\n        assert created_unit['id'] == 'LIFECYCLE001'\n        \n"
                  },
                  "endLine": 51,
                  "startLine": 49
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sensor_response.status_code == 201\n"
                  },
                  "startLine": 69
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert sensor_response.status_code == 201\n        sensor = json.loads(sensor_response.data)\n"
                  },
                  "endLine": 70,
                  "startLine": 68
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert update_response.status_code == 200\n"
                  },
                  "startLine": 89
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert update_response.status_code == 200\n        updated_unit = json.loads(update_response.data)\n"
                  },
                  "endLine": 90,
                  "startLine": 88
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert updated_unit['status'] == 'online'\n"
                  },
                  "startLine": 91
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        updated_unit = json.loads(update_response.data)\n        assert updated_unit['status'] == 'online'\n        assert updated_unit['temp_outside'] == 25.5\n"
                  },
                  "endLine": 92,
                  "startLine": 90
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert updated_unit['temp_outside'] == 25.5\n"
                  },
                  "startLine": 92
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert updated_unit['status'] == 'online'\n        assert updated_unit['temp_outside'] == 25.5\n        \n"
                  },
                  "endLine": 93,
                  "startLine": 91
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert get_response.status_code == 200\n"
                  },
                  "startLine": 99
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert get_response.status_code == 200\n        unit_with_sensors = json.loads(get_response.data)\n"
                  },
                  "endLine": 100,
                  "startLine": 98
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(unit_with_sensors['sensors']) >= 1\n"
                  },
                  "startLine": 101
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        unit_with_sensors = json.loads(get_response.data)\n        assert len(unit_with_sensors['sensors']) >= 1\n        \n"
                  },
                  "endLine": 102,
                  "startLine": 100
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert delete_response.status_code == 204\n"
                  },
                  "startLine": 108
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert delete_response.status_code == 204\n        \n"
                  },
                  "endLine": 109,
                  "startLine": 107
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert verify_response.status_code == 404\n"
                  },
                  "startLine": 114
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert verify_response.status_code == 404\n    \n"
                  },
                  "endLine": 115,
                  "startLine": 113
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert create_response.status_code == 201\n"
                  },
                  "startLine": 141
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert create_response.status_code == 201\n        new_user = json.loads(create_response.data)\n"
                  },
                  "endLine": 142,
                  "startLine": 140
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert operator_token is not None\n"
                  },
                  "startLine": 147
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        operator_token = self.get_auth_token(client, 'newoperator', 'operator123')\n        assert operator_token is not None\n        \n"
                  },
                  "endLine": 148,
                  "startLine": 146
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert units_response.status_code == 200\n"
                  },
                  "startLine": 153
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert units_response.status_code == 200\n        \n"
                  },
                  "endLine": 154,
                  "startLine": 152
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert create_unit_response.status_code == 201\n"
                  },
                  "startLine": 170
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert create_unit_response.status_code == 201\n        \n"
                  },
                  "endLine": 171,
                  "startLine": 169
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert delete_user_response.status_code == 403\n"
                  },
                  "startLine": 176
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert delete_user_response.status_code == 403\n        \n"
                  },
                  "endLine": 177,
                  "startLine": 175
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert deactivate_response.status_code == 200\n"
                  },
                  "startLine": 182
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert deactivate_response.status_code == 200\n        \n"
                  },
                  "endLine": 183,
                  "startLine": 181
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert disabled_login.status_code == 401\n"
                  },
                  "startLine": 189
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert disabled_login.status_code == 401\n    \n"
                  },
                  "endLine": 190,
                  "startLine": 188
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert response.status_code == 201\n"
                  },
                  "startLine": 235
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            )\n            assert response.status_code == 201\n        \n"
                  },
                  "endLine": 236,
                  "startLine": 234
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert online_units.status_code == 200\n"
                  },
                  "startLine": 242
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert online_units.status_code == 200\n        online_data = json.loads(online_units.data)\n"
                  },
                  "endLine": 243,
                  "startLine": 241
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert unit['status'] == 'online'\n"
                  },
                  "startLine": 246
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        for unit in online_data['data']:\n            assert unit['status'] == 'online'\n        \n"
                  },
                  "endLine": 247,
                  "startLine": 245
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert critical_units.status_code == 200\n"
                  },
                  "startLine": 253
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert critical_units.status_code == 200\n        critical_data = json.loads(critical_units.data)\n"
                  },
                  "endLine": 254,
                  "startLine": 252
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert unit['health_status'] == 'critical'\n"
                  },
                  "startLine": 257
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        for unit in critical_data['data']:\n            assert unit['health_status'] == 'critical'\n        \n"
                  },
                  "endLine": 258,
                  "startLine": 256
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert site_a_units.status_code == 200\n"
                  },
                  "startLine": 264
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert site_a_units.status_code == 200\n        site_a_data = json.loads(site_a_units.data)\n"
                  },
                  "endLine": 265,
                  "startLine": 263
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'Site A' in unit['location']\n"
                  },
                  "startLine": 268
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        for unit in site_a_data['data']:\n            assert 'Site A' in unit['location']\n        \n"
                  },
                  "endLine": 269,
                  "startLine": 267
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert search_units.status_code == 200\n"
                  },
                  "startLine": 275
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert search_units.status_code == 200\n        search_data = json.loads(search_units.data)\n"
                  },
                  "endLine": 276,
                  "startLine": 274
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert found_maintenance_unit\n"
                  },
                  "startLine": 283
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                break\n        assert found_maintenance_unit\n        \n"
                  },
                  "endLine": 284,
                  "startLine": 282
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert page1.status_code == 200\n"
                  },
                  "startLine": 290
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert page1.status_code == 200\n        page1_data = json.loads(page1.data)\n"
                  },
                  "endLine": 291,
                  "startLine": 289
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert page1_data['page'] == 1\n"
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert page1_data['page'] == 1\n        assert page1_data['per_page'] == 2\n"
                  },
                  "endLine": 294,
                  "startLine": 292
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert page1_data['per_page'] == 2\n"
                  },
                  "startLine": 294
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert page1_data['page'] == 1\n        assert page1_data['per_page'] == 2\n        assert len(page1_data['data']) <= 2\n"
                  },
                  "endLine": 295,
                  "startLine": 293
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(page1_data['data']) <= 2\n"
                  },
                  "startLine": 295
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert page1_data['per_page'] == 2\n        assert len(page1_data['data']) <= 2\n        \n"
                  },
                  "endLine": 296,
                  "startLine": 294
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 400\n"
                  },
                  "startLine": 315
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert response.status_code == 400\n        \n"
                  },
                  "endLine": 316,
                  "startLine": 314
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 400\n"
                  },
                  "startLine": 325
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert response.status_code == 400\n        \n"
                  },
                  "endLine": 326,
                  "startLine": 324
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code in [400, 201]  # May pass validation but fail business rules\n"
                  },
                  "startLine": 341
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert response.status_code in [400, 201]  # May pass validation but fail business rules\n        \n"
                  },
                  "endLine": 342,
                  "startLine": 340
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 401\n"
                  },
                  "startLine": 345
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        response = client.get('/api/v1/units')  # No auth token\n        assert response.status_code == 401\n        \n"
                  },
                  "endLine": 346,
                  "startLine": 344
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 422  # Invalid token format\n"
                  },
                  "startLine": 351
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert response.status_code == 422  # Invalid token format\n    \n"
                  },
                  "endLine": 352,
                  "startLine": 350
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert create_response.status_code == 201\n"
                  },
                  "startLine": 372
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert create_response.status_code == 201\n        \n"
                  },
                  "endLine": 373,
                  "startLine": 371
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert sensor_response.status_code == 201\n"
                  },
                  "startLine": 392
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            )\n            assert sensor_response.status_code == 201\n            created_sensors.append(json.loads(sensor_response.data)['id'])\n"
                  },
                  "endLine": 393,
                  "startLine": 391
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(unit_data['sensors']) == 3\n"
                  },
                  "startLine": 401
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        unit_data = json.loads(unit_response.data)\n        assert len(unit_data['sensors']) == 3\n        \n"
                  },
                  "endLine": 402,
                  "startLine": 400
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert delete_response.status_code == 204\n"
                  },
                  "startLine": 407
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert delete_response.status_code == 204\n        \n"
                  },
                  "endLine": 408,
                  "startLine": 406
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(remaining_sensors) == 0\n"
                  },
                  "startLine": 411
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        remaining_sensors = Sensor.query.filter(Sensor.id.in_(created_sensors)).all()\n        assert len(remaining_sensors) == 0\n"
                  },
                  "endLine": 411,
                  "startLine": 410
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(client, 'write_multiple_registers')\n"
                  },
                  "startLine": 15
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        client = ModbusClient('localhost', 502)\n        assert hasattr(client, 'write_multiple_registers')\n    \n"
                  },
                  "endLine": 16,
                  "startLine": 14
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is True\n"
                  },
                  "startLine": 24
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = client.write_multiple_registers(100, [0x4048, 0xF5C3], unit_id=1)\n        assert result is True\n    \n"
                  },
                  "endLine": 25,
                  "startLine": 23
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert mock_client.write_multiple_registers.called\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Verify write_multiple_registers was called\n        assert mock_client.write_multiple_registers.called\n        assert result is True\n"
                  },
                  "endLine": 52,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is True\n"
                  },
                  "startLine": 52
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert mock_client.write_multiple_registers.called\n        assert result is True\n        \n"
                  },
                  "endLine": 53,
                  "startLine": 51
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert address == 100\n"
                  },
                  "startLine": 59
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert address == 100\n        assert len(values) == 2\n"
                  },
                  "endLine": 60,
                  "startLine": 58
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(values) == 2\n"
                  },
                  "startLine": 60
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert address == 100\n        assert len(values) == 2\n        \n"
                  },
                  "endLine": 61,
                  "startLine": 59
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert abs(reconstructed_float - test_float) < 0.0001\n"
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        reconstructed_float = struct.unpack('>f', bytes_val)[0]\n        assert abs(reconstructed_float - test_float) < 0.0001\n    \n"
                  },
                  "endLine": 68,
                  "startLine": 66
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert mock_client.write_multiple_registers.call_count == 1\n"
                  },
                  "startLine": 86
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Verify write_multiple_registers was called once\n        assert mock_client.write_multiple_registers.call_count == 1\n        # Verify write_single_register was NOT called for float32\n"
                  },
                  "endLine": 87,
                  "startLine": 85
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert mock_client.write_single_register.call_count == 0\n"
                  },
                  "startLine": 88
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Verify write_single_register was NOT called for float32\n        assert mock_client.write_single_register.call_count == 0\n        assert result is True\n"
                  },
                  "endLine": 89,
                  "startLine": 87
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is True\n"
                  },
                  "startLine": 89
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert mock_client.write_single_register.call_count == 0\n        assert result is True\n    \n"
                  },
                  "endLine": 90,
                  "startLine": 88
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert mock_client.write_single_register.call_count == 1\n"
                  },
                  "startLine": 108
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Verify write_single_register was called for uint16\n        assert mock_client.write_single_register.call_count == 1\n        # Verify write_multiple_registers was NOT called\n"
                  },
                  "endLine": 109,
                  "startLine": 107
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert mock_client.write_multiple_registers.call_count == 0\n"
                  },
                  "startLine": 110
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Verify write_multiple_registers was NOT called\n        assert mock_client.write_multiple_registers.call_count == 0\n        assert result is True\n"
                  },
                  "endLine": 111,
                  "startLine": 109
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is True\n"
                  },
                  "startLine": 111
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_optimization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert mock_client.write_multiple_registers.call_count == 0\n        assert result is True\n"
                  },
                  "endLine": 111,
                  "startLine": 110
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert _is_sensitive_logging_enabled() is False\n"
                  },
                  "startLine": 21
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert _is_sensitive_logging_enabled() is False\n    \n"
                  },
                  "endLine": 22,
                  "startLine": 20
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert _is_sensitive_logging_enabled() is True\n"
                  },
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        os.environ['MODBUS_LOG_SENSITIVE_DATA'] = 'true'\n        assert _is_sensitive_logging_enabled() is True\n        \n"
                  },
                  "endLine": 27,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert _is_sensitive_logging_enabled() is False\n"
                  },
                  "startLine": 34
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        os.environ['MODBUS_LOG_SENSITIVE_DATA'] = 'false'\n        assert _is_sensitive_logging_enabled() is False\n        \n"
                  },
                  "endLine": 35,
                  "startLine": 33
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert mock_logger.error.called\n"
                  },
                  "startLine": 66
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Verify error was logged with sensor_type context\n            assert mock_logger.error.called\n            error_call_args = str(mock_logger.error.call_args)\n"
                  },
                  "endLine": 67,
                  "startLine": 65
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'sensor_type=temperature' in error_call_args\n"
                  },
                  "startLine": 68
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            error_call_args = str(mock_logger.error.call_args)\n            assert 'sensor_type=temperature' in error_call_args\n            assert 'test_device' in error_call_args\n"
                  },
                  "endLine": 69,
                  "startLine": 67
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'test_device' in error_call_args\n"
                  },
                  "startLine": 69
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'sensor_type=temperature' in error_call_args\n            assert 'test_device' in error_call_args\n    \n"
                  },
                  "endLine": 70,
                  "startLine": 68
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert mock_logger.error.called\n"
                  },
                  "startLine": 90
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Verify error was logged with register_type context\n            assert mock_logger.error.called\n            error_call_args = str(mock_logger.error.call_args)\n"
                  },
                  "endLine": 91,
                  "startLine": 89
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'register_type=holding_register' in error_call_args\n"
                  },
                  "startLine": 92
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            error_call_args = str(mock_logger.error.call_args)\n            assert 'register_type=holding_register' in error_call_args\n            assert 'test_device' in error_call_args\n"
                  },
                  "endLine": 93,
                  "startLine": 91
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'test_device' in error_call_args\n"
                  },
                  "startLine": 93
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'register_type=holding_register' in error_call_args\n            assert 'test_device' in error_call_args\n            assert result is False\n"
                  },
                  "endLine": 94,
                  "startLine": 92
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert result is False\n"
                  },
                  "startLine": 94
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'test_device' in error_call_args\n            assert result is False\n    \n"
                  },
                  "endLine": 95,
                  "startLine": 93
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'address 100' not in call.lower() or 'address {address}' in call\n"
                  },
                  "startLine": 123
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Should not log address 100\n                assert 'address 100' not in call.lower() or 'address {address}' in call\n    \n"
                  },
                  "endLine": 124,
                  "startLine": 122
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert has_address, \"Expected address to be logged when sensitive logging enabled\"\n"
                  },
                  "startLine": 152
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                                '100' in call for call in debug_calls)\n                assert has_address, \"Expected address to be logged when sensitive logging enabled\"\n        finally:\n"
                  },
                  "endLine": 153,
                  "startLine": 151
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'address 100' not in call.lower() or 'address {address}' in call\n"
                  },
                  "startLine": 177
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Should not log specific address 100\n                assert 'address 100' not in call.lower() or 'address {address}' in call\n    \n"
                  },
                  "endLine": 178,
                  "startLine": 176
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert has_address, \"Expected address to be logged when sensitive logging enabled\"\n"
                  },
                  "startLine": 199
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                                '100' in call for call in info_calls)\n                assert has_address, \"Expected address to be logged when sensitive logging enabled\"\n        finally:\n"
                  },
                  "endLine": 200,
                  "startLine": 198
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert has_multiple\n"
                  },
                  "startLine": 229
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                             'registers' in call.lower() for call in info_calls)\n            assert has_multiple\n            assert result is True\n"
                  },
                  "endLine": 230,
                  "startLine": 228
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert result is True\n"
                  },
                  "startLine": 230
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert has_multiple\n            assert result is True\n    \n"
                  },
                  "endLine": 231,
                  "startLine": 229
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert mock_logger.error.called\n"
                  },
                  "startLine": 261
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Verify error log has context but no address\n            assert mock_logger.error.called\n            error_call_args = str(mock_logger.error.call_args)\n"
                  },
                  "endLine": 262,
                  "startLine": 260
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'sensor_type=pressure_sensor' in error_call_args\n"
                  },
                  "startLine": 265
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Should have sensor_type and register_type for context\n            assert 'sensor_type=pressure_sensor' in error_call_args\n            assert 'register_type=holding_register' in error_call_args\n"
                  },
                  "endLine": 266,
                  "startLine": 264
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'register_type=holding_register' in error_call_args\n"
                  },
                  "startLine": 266
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'sensor_type=pressure_sensor' in error_call_args\n            assert 'register_type=holding_register' in error_call_args\n            \n"
                  },
                  "endLine": 267,
                  "startLine": 265
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'address=100' not in error_call_args\n"
                  },
                  "startLine": 269
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Should not have address=100 (since sensitive logging disabled)\n            assert 'address=100' not in error_call_args\n    \n"
                  },
                  "endLine": 270,
                  "startLine": 268
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'address 100' not in call.lower() or 'address {address}' in call\n"
                  },
                  "startLine": 286
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            for call in debug_calls:\n                assert 'address 100' not in call.lower() or 'address {address}' in call\n        \n"
                  },
                  "endLine": 287,
                  "startLine": 285
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert has_address\n"
                  },
                  "startLine": 297
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                has_address = any('200' in call for call in debug_calls)\n                assert has_address\n        finally:\n"
                  },
                  "endLine": 298,
                  "startLine": 296
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'address 100' not in call.lower() or 'address {address}' in call\n"
                  },
                  "startLine": 316
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            for call in info_calls:\n                assert 'address 100' not in call.lower() or 'address {address}' in call\n        \n"
                  },
                  "endLine": 317,
                  "startLine": 315
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert has_address\n"
                  },
                  "startLine": 327
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_modbus_sensitive_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                has_address = any('200' in call for call in info_calls)\n                assert has_address\n        finally:\n"
                  },
                  "endLine": 328,
                  "startLine": 326
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.client is None\n"
                  },
                  "startLine": 16
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        client = MQTTClient()\n        assert client.client is None\n        assert client.connected is False\n"
                  },
                  "endLine": 17,
                  "startLine": 15
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.connected is False\n"
                  },
                  "startLine": 17
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert client.client is None\n        assert client.connected is False\n        assert client._app is None\n"
                  },
                  "endLine": 18,
                  "startLine": 16
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client._app is None\n"
                  },
                  "startLine": 18
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert client.connected is False\n        assert client._app is None\n    \n"
                  },
                  "endLine": 19,
                  "startLine": 17
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert client._app == mock_app\n"
                  },
                  "startLine": 32
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \n            assert client._app == mock_app\n            assert client.broker_host == 'test-broker'\n"
                  },
                  "endLine": 33,
                  "startLine": 31
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert client.broker_host == 'test-broker'\n"
                  },
                  "startLine": 33
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert client._app == mock_app\n            assert client.broker_host == 'test-broker'\n            assert client.broker_port == 1883\n"
                  },
                  "endLine": 34,
                  "startLine": 32
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert client.broker_port == 1883\n"
                  },
                  "startLine": 34
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert client.broker_host == 'test-broker'\n            assert client.broker_port == 1883\n            assert client.client_id == 'test-client'\n"
                  },
                  "endLine": 35,
                  "startLine": 33
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert client.client_id == 'test-client'\n"
                  },
                  "startLine": 35
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert client.broker_port == 1883\n            assert client.client_id == 'test-client'\n            mock_mqtt_client.assert_called_once_with(client_id='test-client')\n"
                  },
                  "endLine": 36,
                  "startLine": 34
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is not None\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert result is not None\n        assert result['unit_id'] == 'UNIT001'\n"
                  },
                  "endLine": 52,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['unit_id'] == 'UNIT001'\n"
                  },
                  "startLine": 52
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result is not None\n        assert result['unit_id'] == 'UNIT001'\n        assert result['sensor_type'] == 'temperature'\n"
                  },
                  "endLine": 53,
                  "startLine": 51
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['sensor_type'] == 'temperature'\n"
                  },
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result['unit_id'] == 'UNIT001'\n        assert result['sensor_type'] == 'temperature'\n        assert result['value'] == 25.5\n"
                  },
                  "endLine": 54,
                  "startLine": 52
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['value'] == 25.5\n"
                  },
                  "startLine": 54
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result['sensor_type'] == 'temperature'\n        assert result['value'] == 25.5\n        assert result['quality'] == 'GOOD'\n"
                  },
                  "endLine": 55,
                  "startLine": 53
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['quality'] == 'GOOD'\n"
                  },
                  "startLine": 55
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result['value'] == 25.5\n        assert result['quality'] == 'GOOD'\n        assert isinstance(result['timestamp'], datetime)\n"
                  },
                  "endLine": 56,
                  "startLine": 54
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(result['timestamp'], datetime)\n"
                  },
                  "startLine": 56
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result['quality'] == 'GOOD'\n        assert isinstance(result['timestamp'], datetime)\n    \n"
                  },
                  "endLine": 57,
                  "startLine": 55
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is not None\n"
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert result is not None\n        assert result['unit_id'] == 'UNIT002'\n"
                  },
                  "endLine": 68,
                  "startLine": 66
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['unit_id'] == 'UNIT002'\n"
                  },
                  "startLine": 68
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result is not None\n        assert result['unit_id'] == 'UNIT002'\n        assert result['sensor_type'] == 'pressure'\n"
                  },
                  "endLine": 69,
                  "startLine": 67
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['sensor_type'] == 'pressure'\n"
                  },
                  "startLine": 69
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result['unit_id'] == 'UNIT002'\n        assert result['sensor_type'] == 'pressure'\n        assert result['value'] == 42.7\n"
                  },
                  "endLine": 70,
                  "startLine": 68
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['value'] == 42.7\n"
                  },
                  "startLine": 70
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result['sensor_type'] == 'pressure'\n        assert result['value'] == 42.7\n        assert result['quality'] == 'GOOD'\n"
                  },
                  "endLine": 71,
                  "startLine": 69
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['quality'] == 'GOOD'\n"
                  },
                  "startLine": 71
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result['value'] == 42.7\n        assert result['quality'] == 'GOOD'\n        assert isinstance(result['timestamp'], datetime)\n"
                  },
                  "endLine": 72,
                  "startLine": 70
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(result['timestamp'], datetime)\n"
                  },
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result['quality'] == 'GOOD'\n        assert isinstance(result['timestamp'], datetime)\n    \n"
                  },
                  "endLine": 73,
                  "startLine": 71
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is None\n"
                  },
                  "startLine": 83
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = client._parse_scada_message(topic, payload)\n        assert result is None\n    \n"
                  },
                  "endLine": 84,
                  "startLine": 82
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is None\n"
                  },
                  "startLine": 93
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = client._parse_scada_message(topic, payload)\n        assert result is None\n    \n"
                  },
                  "endLine": 94,
                  "startLine": 92
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is None\n"
                  },
                  "startLine": 103
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = client._parse_scada_message(topic, payload)\n        assert result is None\n    \n"
                  },
                  "endLine": 104,
                  "startLine": 102
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is not None\n"
                  },
                  "startLine": 118
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert result is not None\n        assert result['timestamp'].timestamp() == unix_timestamp\n"
                  },
                  "endLine": 119,
                  "startLine": 117
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['timestamp'].timestamp() == unix_timestamp\n"
                  },
                  "startLine": 119
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result is not None\n        assert result['timestamp'].timestamp() == unix_timestamp\n    \n"
                  },
                  "endLine": 120,
                  "startLine": 118
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result == existing_sensor\n"
                  },
                  "startLine": 140
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert result == existing_sensor\n        mock_sensor.query.filter_by.assert_called_with(unit_id='UNIT001', sensor_type='temperature')\n"
                  },
                  "endLine": 141,
                  "startLine": 139
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result == new_sensor\n"
                  },
                  "startLine": 164
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert result == new_sensor\n        mock_sensor_class.assert_called_once()\n"
                  },
                  "endLine": 165,
                  "startLine": 163
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is None\n"
                  },
                  "startLine": 179
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert result is None\n    \n"
                  },
                  "endLine": 180,
                  "startLine": 178
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status['connected'] is True\n"
                  },
                  "startLine": 197
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \n            assert status['connected'] is True\n            assert status['broker_host'] == 'test-broker'\n"
                  },
                  "endLine": 198,
                  "startLine": 196
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status['broker_host'] == 'test-broker'\n"
                  },
                  "startLine": 198
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert status['connected'] is True\n            assert status['broker_host'] == 'test-broker'\n            assert status['broker_port'] == 1883\n"
                  },
                  "endLine": 199,
                  "startLine": 197
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status['broker_port'] == 1883\n"
                  },
                  "startLine": 199
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert status['broker_host'] == 'test-broker'\n            assert status['broker_port'] == 1883\n            assert status['client_id'] == 'test-client'\n"
                  },
                  "endLine": 200,
                  "startLine": 198
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status['client_id'] == 'test-client'\n"
                  },
                  "startLine": 200
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert status['broker_port'] == 1883\n            assert status['client_id'] == 'test-client'\n            assert 'scada/+/temperature' in status['subscribed_topics']\n"
                  },
                  "endLine": 201,
                  "startLine": 199
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'scada/+/temperature' in status['subscribed_topics']\n"
                  },
                  "startLine": 201
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert status['client_id'] == 'test-client'\n            assert 'scada/+/temperature' in status['subscribed_topics']\n    \n"
                  },
                  "endLine": 202,
                  "startLine": 200
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.connected is False\n"
                  },
                  "startLine": 253
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        mock_client.disconnect.assert_called_once()\n        assert client.connected is False\n    \n"
                  },
                  "endLine": 254,
                  "startLine": 252
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.connected is True\n"
                  },
                  "startLine": 264
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert client.connected is True\n        client.subscribe_topic.assert_called_once_with('test/topic')\n"
                  },
                  "endLine": 265,
                  "startLine": 263
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.connected is False\n"
                  },
                  "startLine": 274
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert client.connected is False\n    \n"
                  },
                  "endLine": 275,
                  "startLine": 273
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client.connected is False\n"
                  },
                  "startLine": 284
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_mqtt_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert client.connected is False\n"
                  },
                  "endLine": 284,
                  "startLine": 283
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert user.created_at is not None\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_postgres_timestamps.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Verify initial timestamps are set by database\n            assert user.created_at is not None\n            assert user.updated_at is not None\n"
                  },
                  "endLine": 52,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert user.updated_at is not None\n"
                  },
                  "startLine": 52
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_postgres_timestamps.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert user.created_at is not None\n            assert user.updated_at is not None\n            assert user.updated_at >= user.created_at\n"
                  },
                  "endLine": 53,
                  "startLine": 51
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert user.updated_at >= user.created_at\n"
                  },
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_postgres_timestamps.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert user.updated_at is not None\n            assert user.updated_at >= user.created_at\n            \n"
                  },
                  "endLine": 54,
                  "startLine": 52
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert first_updated_at <= second_updated_at <= third_updated_at\n"
                  },
                  "startLine": 169
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_postgres_timestamps.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Verify ordering\n            assert first_updated_at <= second_updated_at <= third_updated_at\n\n"
                  },
                  "endLine": 170,
                  "startLine": 168
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert is_using_postgres_tests() is True\n"
                  },
                  "startLine": 177
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_postgres_timestamps.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \"\"\"Test that PostgreSQL environment is properly configured.\"\"\"\n        assert is_using_postgres_tests() is True\n        \n"
                  },
                  "endLine": 178,
                  "startLine": 176
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert postgres_url is not None\n"
                  },
                  "startLine": 180
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_postgres_timestamps.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        postgres_url = get_postgres_test_url()\n        assert postgres_url is not None\n        assert postgres_url.startswith('postgresql://')\n"
                  },
                  "endLine": 181,
                  "startLine": 179
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert postgres_url.startswith('postgresql://')\n"
                  },
                  "startLine": 181
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_postgres_timestamps.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert postgres_url is not None\n        assert postgres_url.startswith('postgresql://')\n    \n"
                  },
                  "endLine": 182,
                  "startLine": 180
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert result.test == 1\n"
                  },
                  "startLine": 188
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_postgres_timestamps.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            result = db.session.execute(db.text(\"SELECT 1 as test\")).fetchone()\n            assert result.test == 1\n            \n"
                  },
                  "endLine": 189,
                  "startLine": 187
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'PostgreSQL' in result.version\n"
                  },
                  "startLine": 192
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_postgres_timestamps.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            result = db.session.execute(db.text(\"SELECT version()\")).fetchone()\n            assert 'PostgreSQL' in result.version\n"
                  },
                  "endLine": 192,
                  "startLine": 191
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert result is None\n"
                  },
                  "startLine": 28
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            result = RequestValidator.validate_json_content_type()\n            assert result is None\n    \n"
                  },
                  "endLine": 29,
                  "startLine": 27
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert result is not None\n"
                  },
                  "startLine": 36
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            result = RequestValidator.validate_json_content_type()\n            assert result is not None\n            response, status_code = result\n"
                  },
                  "endLine": 37,
                  "startLine": 35
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status_code == 400\n"
                  },
                  "startLine": 38
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            response, status_code = result\n            assert status_code == 400\n            data = json.loads(response.data)\n"
                  },
                  "endLine": 39,
                  "startLine": 37
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert not data['success']\n"
                  },
                  "startLine": 40
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            data = json.loads(response.data)\n            assert not data['success']\n            assert data['error']['code'] == 'INVALID_CONTENT_TYPE'\n"
                  },
                  "endLine": 41,
                  "startLine": 39
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert data['error']['code'] == 'INVALID_CONTENT_TYPE'\n"
                  },
                  "startLine": 41
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert not data['success']\n            assert data['error']['code'] == 'INVALID_CONTENT_TYPE'\n    \n"
                  },
                  "endLine": 42,
                  "startLine": 40
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert result is None\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            result = RequestValidator.validate_request_size(1000)\n            assert result is None\n    \n"
                  },
                  "endLine": 49,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert result is not None\n"
                  },
                  "startLine": 56
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            result = RequestValidator.validate_request_size(1000)\n            assert result is not None\n            response, status_code = result\n"
                  },
                  "endLine": 57,
                  "startLine": 55
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status_code == 413\n"
                  },
                  "startLine": 58
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            response, status_code = result\n            assert status_code == 413\n            data = json.loads(response.data)\n"
                  },
                  "endLine": 59,
                  "startLine": 57
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert not data['success']\n"
                  },
                  "startLine": 60
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            data = json.loads(response.data)\n            assert not data['success']\n            assert data['error']['code'] == 'PAYLOAD_TOO_LARGE'\n"
                  },
                  "endLine": 61,
                  "startLine": 59
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert data['error']['code'] == 'PAYLOAD_TOO_LARGE'\n"
                  },
                  "startLine": 61
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert not data['success']\n            assert data['error']['code'] == 'PAYLOAD_TOO_LARGE'\n\n"
                  },
                  "endLine": 62,
                  "startLine": 60
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert is_allowed\n"
                  },
                  "startLine": 73
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        is_allowed, info = limiter.is_allowed('test_user', 5, 60)\n        assert is_allowed\n        assert info['remaining'] == 4\n"
                  },
                  "endLine": 74,
                  "startLine": 72
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert info['remaining'] == 4\n"
                  },
                  "startLine": 74
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert is_allowed\n        assert info['remaining'] == 4\n        assert info['limit'] == 5\n"
                  },
                  "endLine": 75,
                  "startLine": 73
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert info['limit'] == 5\n"
                  },
                  "startLine": 75
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert info['remaining'] == 4\n        assert info['limit'] == 5\n        assert info.get('fallback', False)  # Memory limiter is fallback\n"
                  },
                  "endLine": 76,
                  "startLine": 74
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert info.get('fallback', False)  # Memory limiter is fallback\n"
                  },
                  "startLine": 76
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert info['limit'] == 5\n        assert info.get('fallback', False)  # Memory limiter is fallback\n    \n"
                  },
                  "endLine": 77,
                  "startLine": 75
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert is_allowed\n"
                  },
                  "startLine": 85
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            is_allowed, info = limiter.is_allowed('test_user', 5, 60)\n            assert is_allowed\n        \n"
                  },
                  "endLine": 86,
                  "startLine": 84
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert not is_allowed\n"
                  },
                  "startLine": 89
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        is_allowed, info = limiter.is_allowed('test_user', 5, 60)\n        assert not is_allowed\n        assert info['remaining'] == 0\n"
                  },
                  "endLine": 90,
                  "startLine": 88
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert info['remaining'] == 0\n"
                  },
                  "startLine": 90
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert not is_allowed\n        assert info['remaining'] == 0\n    \n"
                  },
                  "endLine": 91,
                  "startLine": 89
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert isinstance(response3, tuple)\n"
                  },
                  "startLine": 107
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            response3 = test_route()\n            assert isinstance(response3, tuple)\n            data = json.loads(response3[0].data)\n"
                  },
                  "endLine": 108,
                  "startLine": 106
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert not data['success']\n"
                  },
                  "startLine": 109
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            data = json.loads(response3[0].data)\n            assert not data['success']\n            assert data['error']['code'] == 'RATE_LIMIT_EXCEEDED'\n"
                  },
                  "endLine": 110,
                  "startLine": 108
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert data['error']['code'] == 'RATE_LIMIT_EXCEEDED'\n"
                  },
                  "startLine": 110
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert not data['success']\n            assert data['error']['code'] == 'RATE_LIMIT_EXCEEDED'\n\n"
                  },
                  "endLine": 111,
                  "startLine": 109
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(request_id, str)\n"
                  },
                  "startLine": 119
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        request_id = RequestIDManager.generate_request_id()\n        assert isinstance(request_id, str)\n        assert len(request_id) == 36  # UUID4 length\n"
                  },
                  "endLine": 120,
                  "startLine": 118
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(request_id) == 36  # UUID4 length\n"
                  },
                  "startLine": 120
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert isinstance(request_id, str)\n        assert len(request_id) == 36  # UUID4 length\n        # Verify it's a valid UUID\n"
                  },
                  "endLine": 121,
                  "startLine": 119
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert extracted_id == test_id\n"
                  },
                  "startLine": 129
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            extracted_id = RequestIDManager.extract_request_id()\n            assert extracted_id == test_id\n    \n"
                  },
                  "endLine": 130,
                  "startLine": 128
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert extracted_id != 'invalid-uuid'\n"
                  },
                  "startLine": 135
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            extracted_id = RequestIDManager.extract_request_id()\n            assert extracted_id != 'invalid-uuid'\n            # Should generate a new valid UUID\n"
                  },
                  "endLine": 136,
                  "startLine": 134
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert extracted_id != uuid1\n"
                  },
                  "startLine": 145
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Should NOT return the UUID1, should generate new UUID4\n            assert extracted_id != uuid1\n            parsed = uuid.UUID(extracted_id)\n"
                  },
                  "endLine": 146,
                  "startLine": 144
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert parsed.version == 4\n"
                  },
                  "startLine": 147
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            parsed = uuid.UUID(extracted_id)\n            assert parsed.version == 4\n    \n"
                  },
                  "endLine": 148,
                  "startLine": 146
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert extracted_id != uuid5\n"
                  },
                  "startLine": 155
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Should NOT return the UUID5, should generate new UUID4\n            assert extracted_id != uuid5\n            parsed = uuid.UUID(extracted_id)\n"
                  },
                  "endLine": 156,
                  "startLine": 154
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert parsed.version == 4\n"
                  },
                  "startLine": 157
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            parsed = uuid.UUID(extracted_id)\n            assert parsed.version == 4\n    \n"
                  },
                  "endLine": 158,
                  "startLine": 156
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert xss_payload not in extracted_id\n"
                  },
                  "startLine": 165
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Should NOT contain XSS payload\n            assert xss_payload not in extracted_id\n            # Should be a valid UUID4\n"
                  },
                  "endLine": 166,
                  "startLine": 164
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert parsed.version == 4\n"
                  },
                  "startLine": 168
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            parsed = uuid.UUID(extracted_id)\n            assert parsed.version == 4\n    \n"
                  },
                  "endLine": 169,
                  "startLine": 167
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is True\n"
                  },
                  "startLine": 182
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = filter_obj.filter(record)\n        assert result is True\n        assert record.request_id == 'no-request-context'\n"
                  },
                  "endLine": 183,
                  "startLine": 181
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert record.request_id == 'no-request-context'\n"
                  },
                  "startLine": 183
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result is True\n        assert record.request_id == 'no-request-context'\n    \n"
                  },
                  "endLine": 184,
                  "startLine": 182
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'X-Request-ID' in response.headers\n"
                  },
                  "startLine": 195
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Should have request ID in headers\n            assert 'X-Request-ID' in response.headers\n\n"
                  },
                  "endLine": 196,
                  "startLine": 194
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert collector.max_history == 1000\n"
                  },
                  "startLine": 204
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        collector = MetricsCollector()\n        assert collector.max_history == 1000\n        assert len(collector.request_count) == 0\n"
                  },
                  "endLine": 205,
                  "startLine": 203
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(collector.request_count) == 0\n"
                  },
                  "startLine": 205
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert collector.max_history == 1000\n        assert len(collector.request_count) == 0\n        assert len(collector.endpoint_metrics) == 0\n"
                  },
                  "endLine": 206,
                  "startLine": 204
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(collector.endpoint_metrics) == 0\n"
                  },
                  "startLine": 206
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert len(collector.request_count) == 0\n        assert len(collector.endpoint_metrics) == 0\n    \n"
                  },
                  "endLine": 207,
                  "startLine": 205
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert hasattr(g, 'request_start_time')\n"
                  },
                  "startLine": 217
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            collector.record_request_start('/test', 'GET')\n            assert hasattr(g, 'request_start_time')\n            assert g.request_endpoint == '/test'\n"
                  },
                  "endLine": 218,
                  "startLine": 216
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert g.request_endpoint == '/test'\n"
                  },
                  "startLine": 218
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert hasattr(g, 'request_start_time')\n            assert g.request_endpoint == '/test'\n            \n"
                  },
                  "endLine": 219,
                  "startLine": 217
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert collector.request_count[key] == 1\n"
                  },
                  "startLine": 228
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            key = 'GET /test'\n            assert collector.request_count[key] == 1\n            assert len(collector.response_times[key]) == 1\n"
                  },
                  "endLine": 229,
                  "startLine": 227
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert len(collector.response_times[key]) == 1\n"
                  },
                  "startLine": 229
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert collector.request_count[key] == 1\n            assert len(collector.response_times[key]) == 1\n            assert collector.status_codes[key][200] == 1\n"
                  },
                  "endLine": 230,
                  "startLine": 228
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert collector.status_codes[key][200] == 1\n"
                  },
                  "startLine": 230
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert len(collector.response_times[key]) == 1\n            assert collector.status_codes[key][200] == 1\n            assert collector.endpoint_metrics[key]['calls'] == 1\n"
                  },
                  "endLine": 231,
                  "startLine": 229
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert collector.endpoint_metrics[key]['calls'] == 1\n"
                  },
                  "startLine": 231
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert collector.status_codes[key][200] == 1\n            assert collector.endpoint_metrics[key]['calls'] == 1\n    \n"
                  },
                  "endLine": 232,
                  "startLine": 230
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'overview' in summary\n"
                  },
                  "startLine": 244
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        summary = collector.get_metrics_summary()\n        assert 'overview' in summary\n        assert 'endpoints' in summary\n"
                  },
                  "endLine": 245,
                  "startLine": 243
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'endpoints' in summary\n"
                  },
                  "startLine": 245
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'overview' in summary\n        assert 'endpoints' in summary\n        assert 'top_endpoints' in summary\n"
                  },
                  "endLine": 246,
                  "startLine": 244
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'top_endpoints' in summary\n"
                  },
                  "startLine": 246
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'endpoints' in summary\n        assert 'top_endpoints' in summary\n        assert summary['overview']['total_requests'] == 1\n"
                  },
                  "endLine": 247,
                  "startLine": 245
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert summary['overview']['total_requests'] == 1\n"
                  },
                  "startLine": 247
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'top_endpoints' in summary\n        assert summary['overview']['total_requests'] == 1\n    \n"
                  },
                  "endLine": 248,
                  "startLine": 246
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert response == ({'message': 'test'}, 200)\n"
                  },
                  "startLine": 262
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # It should not interfere with the route execution\n            assert response == ({'message': 'test'}, 200)\n            \n"
                  },
                  "endLine": 263,
                  "startLine": 261
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert len(collector.request_count) == 0\n"
                  },
                  "startLine": 268
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Since we're not using middleware here, metrics should be empty\n            assert len(collector.request_count) == 0\n    \n"
                  },
                  "endLine": 269,
                  "startLine": 267
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert response.status_code == 200\n"
                  },
                  "startLine": 295
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            response = client.get('/test-metrics')\n            assert response.status_code == 200\n            \n"
                  },
                  "endLine": 296,
                  "startLine": 294
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert response_decorated.status_code == 200\n"
                  },
                  "startLine": 299
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            response_decorated = client.get('/test-metrics-decorated')\n            assert response_decorated.status_code == 200\n            \n"
                  },
                  "endLine": 300,
                  "startLine": 298
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert any('GET' in key for key in collector.request_count.keys())\n"
                  },
                  "startLine": 302
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Check that metrics were collected by middleware\n            assert any('GET' in key for key in collector.request_count.keys())\n            \n"
                  },
                  "endLine": 303,
                  "startLine": 301
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert collector.request_count['GET test_route'] == 1\n"
                  },
                  "startLine": 305
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Verify no double-counting - each endpoint should have exactly 1 request\n            assert collector.request_count['GET test_route'] == 1\n            assert collector.request_count['GET test_route_decorated'] == 1\n"
                  },
                  "endLine": 306,
                  "startLine": 304
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert collector.request_count['GET test_route_decorated'] == 1\n"
                  },
                  "startLine": 306
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert collector.request_count['GET test_route'] == 1\n            assert collector.request_count['GET test_route_decorated'] == 1\n            \n"
                  },
                  "endLine": 307,
                  "startLine": 305
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert collector.get_metrics_summary()['overview']['total_requests'] == 2\n"
                  },
                  "startLine": 309
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Verify total requests count\n            assert collector.get_metrics_summary()['overview']['total_requests'] == 2\n    \n"
                  },
                  "endLine": 310,
                  "startLine": 308
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert response.status_code == 500\n"
                  },
                  "startLine": 330
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Flask returns 500 for unhandled exceptions\n            assert response.status_code == 500\n            \n"
                  },
                  "endLine": 331,
                  "startLine": 329
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert collector.request_count['GET test_error_route'] == 1\n"
                  },
                  "startLine": 333
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Verify metrics were recorded for the error\n            assert collector.request_count['GET test_error_route'] == 1\n            \n"
                  },
                  "endLine": 334,
                  "startLine": 332
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert summary['overview']['total_requests'] == 1\n"
                  },
                  "startLine": 337
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            summary = collector.get_metrics_summary()\n            assert summary['overview']['total_requests'] == 1\n            \n"
                  },
                  "endLine": 338,
                  "startLine": 336
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert len(recent_errors) > 0\n"
                  },
                  "startLine": 341
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            recent_errors = collector.get_recent_errors()\n            assert len(recent_errors) > 0\n            assert recent_errors[-1]['error_type'] == 'ValueError'\n"
                  },
                  "endLine": 342,
                  "startLine": 340
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert recent_errors[-1]['error_type'] == 'ValueError'\n"
                  },
                  "startLine": 342
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert len(recent_errors) > 0\n            assert recent_errors[-1]['error_type'] == 'ValueError'\n            assert 'Test exception' in recent_errors[-1]['error']\n"
                  },
                  "endLine": 343,
                  "startLine": 341
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'Test exception' in recent_errors[-1]['error']\n"
                  },
                  "startLine": 343
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert recent_errors[-1]['error_type'] == 'ValueError'\n            assert 'Test exception' in recent_errors[-1]['error']\n    \n"
                  },
                  "endLine": 344,
                  "startLine": 342
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert metrics['endpoint'] != key\n"
                  },
                  "startLine": 365
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Verify the endpoint in the response is escaped\n            assert metrics['endpoint'] != key\n            assert '&lt;' in metrics['endpoint']  # < should be escaped to &lt;\n"
                  },
                  "endLine": 366,
                  "startLine": 364
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert '&lt;' in metrics['endpoint']  # < should be escaped to &lt;\n"
                  },
                  "startLine": 366
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert metrics['endpoint'] != key\n            assert '&lt;' in metrics['endpoint']  # < should be escaped to &lt;\n            assert '&gt;' in metrics['endpoint']  # > should be escaped to &gt;\n"
                  },
                  "endLine": 367,
                  "startLine": 365
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert '&gt;' in metrics['endpoint']  # > should be escaped to &gt;\n"
                  },
                  "startLine": 367
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert '&lt;' in metrics['endpoint']  # < should be escaped to &lt;\n            assert '&gt;' in metrics['endpoint']  # > should be escaped to &gt;\n            assert '<script>' not in metrics['endpoint']  # Raw script tag should not be present\n"
                  },
                  "endLine": 368,
                  "startLine": 366
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert '<script>' not in metrics['endpoint']  # Raw script tag should not be present\n"
                  },
                  "startLine": 368
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert '&gt;' in metrics['endpoint']  # > should be escaped to &gt;\n            assert '<script>' not in metrics['endpoint']  # Raw script tag should not be present\n            assert '</script>' not in metrics['endpoint']  # Raw closing script tag should not be present\n"
                  },
                  "endLine": 369,
                  "startLine": 367
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert '</script>' not in metrics['endpoint']  # Raw closing script tag should not be present\n"
                  },
                  "startLine": 369
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert '<script>' not in metrics['endpoint']  # Raw script tag should not be present\n            assert '</script>' not in metrics['endpoint']  # Raw closing script tag should not be present\n            assert 'alert' in metrics['endpoint']  # But the text content should still be there (escaped)\n"
                  },
                  "endLine": 370,
                  "startLine": 368
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'alert' in metrics['endpoint']  # But the text content should still be there (escaped)\n"
                  },
                  "startLine": 370
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert '</script>' not in metrics['endpoint']  # Raw closing script tag should not be present\n            assert 'alert' in metrics['endpoint']  # But the text content should still be there (escaped)\n            assert '&#34;' in metrics['endpoint']  # \" should be escaped to &#34;\n"
                  },
                  "endLine": 371,
                  "startLine": 369
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert '&#34;' in metrics['endpoint']  # \" should be escaped to &#34;\n"
                  },
                  "startLine": 371
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'alert' in metrics['endpoint']  # But the text content should still be there (escaped)\n            assert '&#34;' in metrics['endpoint']  # \" should be escaped to &#34;\n    \n"
                  },
                  "endLine": 372,
                  "startLine": 370
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<script>' not in endpoint_key\n"
                  },
                  "startLine": 399
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Dangerous opening tags should not be present in executable form\n                assert '<script>' not in endpoint_key\n                assert '</script>' not in endpoint_key\n"
                  },
                  "endLine": 400,
                  "startLine": 398
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '</script>' not in endpoint_key\n"
                  },
                  "startLine": 400
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '<script>' not in endpoint_key\n                assert '</script>' not in endpoint_key\n                assert '<img' not in endpoint_key\n"
                  },
                  "endLine": 401,
                  "startLine": 399
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<img' not in endpoint_key\n"
                  },
                  "startLine": 401
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '</script>' not in endpoint_key\n                assert '<img' not in endpoint_key\n                assert '<iframe' not in endpoint_key\n"
                  },
                  "endLine": 402,
                  "startLine": 400
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<iframe' not in endpoint_key\n"
                  },
                  "startLine": 402
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '<img' not in endpoint_key\n                assert '<iframe' not in endpoint_key\n                assert '<svg' not in endpoint_key\n"
                  },
                  "endLine": 403,
                  "startLine": 401
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<svg' not in endpoint_key\n"
                  },
                  "startLine": 403
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '<iframe' not in endpoint_key\n                assert '<svg' not in endpoint_key\n            \n"
                  },
                  "endLine": 404,
                  "startLine": 402
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<script>' not in stats['endpoint']\n"
                  },
                  "startLine": 408
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Dangerous opening tags should not be present in executable form\n                assert '<script>' not in stats['endpoint']\n                assert '</script>' not in stats['endpoint']\n"
                  },
                  "endLine": 409,
                  "startLine": 407
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '</script>' not in stats['endpoint']\n"
                  },
                  "startLine": 409
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '<script>' not in stats['endpoint']\n                assert '</script>' not in stats['endpoint']\n                assert '<img' not in stats['endpoint']\n"
                  },
                  "endLine": 410,
                  "startLine": 408
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<img' not in stats['endpoint']\n"
                  },
                  "startLine": 410
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '</script>' not in stats['endpoint']\n                assert '<img' not in stats['endpoint']\n                assert '<iframe' not in stats['endpoint']\n"
                  },
                  "endLine": 411,
                  "startLine": 409
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<iframe' not in stats['endpoint']\n"
                  },
                  "startLine": 411
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '<img' not in stats['endpoint']\n                assert '<iframe' not in stats['endpoint']\n                assert '<svg' not in stats['endpoint']\n"
                  },
                  "endLine": 412,
                  "startLine": 410
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<svg' not in stats['endpoint']\n"
                  },
                  "startLine": 412
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '<iframe' not in stats['endpoint']\n                assert '<svg' not in stats['endpoint']\n            \n"
                  },
                  "endLine": 413,
                  "startLine": 411
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<script>' not in endpoint_stat['endpoint']\n"
                  },
                  "startLine": 417
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Dangerous opening tags should not be present in executable form\n                assert '<script>' not in endpoint_stat['endpoint']\n                assert '</script>' not in endpoint_stat['endpoint']\n"
                  },
                  "endLine": 418,
                  "startLine": 416
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '</script>' not in endpoint_stat['endpoint']\n"
                  },
                  "startLine": 418
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '<script>' not in endpoint_stat['endpoint']\n                assert '</script>' not in endpoint_stat['endpoint']\n                assert '<img' not in endpoint_stat['endpoint']\n"
                  },
                  "endLine": 419,
                  "startLine": 417
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<img' not in endpoint_stat['endpoint']\n"
                  },
                  "startLine": 419
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '</script>' not in endpoint_stat['endpoint']\n                assert '<img' not in endpoint_stat['endpoint']\n                assert '<iframe' not in endpoint_stat['endpoint']\n"
                  },
                  "endLine": 420,
                  "startLine": 418
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<iframe' not in endpoint_stat['endpoint']\n"
                  },
                  "startLine": 420
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '<img' not in endpoint_stat['endpoint']\n                assert '<iframe' not in endpoint_stat['endpoint']\n                assert '<svg' not in endpoint_stat['endpoint']\n"
                  },
                  "endLine": 421,
                  "startLine": 419
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<svg' not in endpoint_stat['endpoint']\n"
                  },
                  "startLine": 421
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '<iframe' not in endpoint_stat['endpoint']\n                assert '<svg' not in endpoint_stat['endpoint']\n            \n"
                  },
                  "endLine": 422,
                  "startLine": 420
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<script>' not in endpoint_key\n"
                  },
                  "startLine": 426
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Dangerous opening tags should not be present in executable form\n                assert '<script>' not in endpoint_key\n                assert '</script>' not in endpoint_key\n"
                  },
                  "endLine": 427,
                  "startLine": 425
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '</script>' not in endpoint_key\n"
                  },
                  "startLine": 427
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '<script>' not in endpoint_key\n                assert '</script>' not in endpoint_key\n                assert '<img' not in endpoint_key\n"
                  },
                  "endLine": 428,
                  "startLine": 426
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<img' not in endpoint_key\n"
                  },
                  "startLine": 428
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '</script>' not in endpoint_key\n                assert '<img' not in endpoint_key\n                assert '<iframe' not in endpoint_key\n"
                  },
                  "endLine": 429,
                  "startLine": 427
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<iframe' not in endpoint_key\n"
                  },
                  "startLine": 429
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '<img' not in endpoint_key\n                assert '<iframe' not in endpoint_key\n                assert '<svg' not in endpoint_key\n"
                  },
                  "endLine": 430,
                  "startLine": 428
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<svg' not in endpoint_key\n"
                  },
                  "startLine": 430
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '<iframe' not in endpoint_key\n                assert '<svg' not in endpoint_key\n    \n"
                  },
                  "endLine": 431,
                  "startLine": 429
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert len(activity) > 0\n"
                  },
                  "startLine": 453
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Verify endpoint and error fields are escaped - check dangerous HTML tags are NOT executable\n            assert len(activity) > 0\n            for record in activity:\n"
                  },
                  "endLine": 454,
                  "startLine": 452
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<svg' not in record['endpoint']\n"
                  },
                  "startLine": 456
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Check endpoint field - dangerous HTML tags should not be in executable form\n                assert '<svg' not in record['endpoint']\n                assert '<script>' not in record['endpoint']\n"
                  },
                  "endLine": 457,
                  "startLine": 455
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<script>' not in record['endpoint']\n"
                  },
                  "startLine": 457
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '<svg' not in record['endpoint']\n                assert '<script>' not in record['endpoint']\n                assert '</script>' not in record['endpoint']\n"
                  },
                  "endLine": 458,
                  "startLine": 456
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '</script>' not in record['endpoint']\n"
                  },
                  "startLine": 458
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '<script>' not in record['endpoint']\n                assert '</script>' not in record['endpoint']\n                assert '<img' not in record['endpoint']\n"
                  },
                  "endLine": 459,
                  "startLine": 457
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<img' not in record['endpoint']\n"
                  },
                  "startLine": 459
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '</script>' not in record['endpoint']\n                assert '<img' not in record['endpoint']\n                assert '<iframe' not in record['endpoint']\n"
                  },
                  "endLine": 460,
                  "startLine": 458
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<iframe' not in record['endpoint']\n"
                  },
                  "startLine": 460
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '<img' not in record['endpoint']\n                assert '<iframe' not in record['endpoint']\n                \n"
                  },
                  "endLine": 461,
                  "startLine": 459
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert '<script>' not in record['error']\n"
                  },
                  "startLine": 464
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                if record.get('error'):\n                    assert '<script>' not in record['error']\n                    assert '</script>' not in record['error']\n"
                  },
                  "endLine": 465,
                  "startLine": 463
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert '</script>' not in record['error']\n"
                  },
                  "startLine": 465
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert '<script>' not in record['error']\n                    assert '</script>' not in record['error']\n                    assert '<img' not in record['error']\n"
                  },
                  "endLine": 466,
                  "startLine": 464
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert '<img' not in record['error']\n"
                  },
                  "startLine": 466
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert '</script>' not in record['error']\n                    assert '<img' not in record['error']\n                    assert '<iframe' not in record['error']\n"
                  },
                  "endLine": 467,
                  "startLine": 465
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert '<iframe' not in record['error']\n"
                  },
                  "startLine": 467
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert '<img' not in record['error']\n                    assert '<iframe' not in record['error']\n                    assert '<svg' not in record['error']\n"
                  },
                  "endLine": 468,
                  "startLine": 466
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert '<svg' not in record['error']\n"
                  },
                  "startLine": 468
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert '<iframe' not in record['error']\n                    assert '<svg' not in record['error']\n    \n"
                  },
                  "endLine": 469,
                  "startLine": 467
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert len(errors) > 0\n"
                  },
                  "startLine": 490
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Verify endpoint and error fields are escaped - check dangerous HTML tags are NOT executable\n            assert len(errors) > 0\n            for record in errors:\n"
                  },
                  "endLine": 491,
                  "startLine": 489
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<iframe' not in record['endpoint']\n"
                  },
                  "startLine": 493
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Check endpoint field - dangerous HTML tags should not be in executable form\n                assert '<iframe' not in record['endpoint']\n                assert '<script>' not in record['endpoint']\n"
                  },
                  "endLine": 494,
                  "startLine": 492
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<script>' not in record['endpoint']\n"
                  },
                  "startLine": 494
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '<iframe' not in record['endpoint']\n                assert '<script>' not in record['endpoint']\n                assert '</script>' not in record['endpoint']\n"
                  },
                  "endLine": 495,
                  "startLine": 493
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '</script>' not in record['endpoint']\n"
                  },
                  "startLine": 495
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '<script>' not in record['endpoint']\n                assert '</script>' not in record['endpoint']\n                assert '<img' not in record['endpoint']\n"
                  },
                  "endLine": 496,
                  "startLine": 494
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<img' not in record['endpoint']\n"
                  },
                  "startLine": 496
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '</script>' not in record['endpoint']\n                assert '<img' not in record['endpoint']\n                assert '<svg' not in record['endpoint']\n"
                  },
                  "endLine": 497,
                  "startLine": 495
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<svg' not in record['endpoint']\n"
                  },
                  "startLine": 497
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '<img' not in record['endpoint']\n                assert '<svg' not in record['endpoint']\n                \n"
                  },
                  "endLine": 498,
                  "startLine": 496
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<script>' not in record['error']\n"
                  },
                  "startLine": 500
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Check error field - dangerous HTML tags should not be in executable form\n                assert '<script>' not in record['error']\n                assert '</script>' not in record['error']\n"
                  },
                  "endLine": 501,
                  "startLine": 499
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '</script>' not in record['error']\n"
                  },
                  "startLine": 501
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '<script>' not in record['error']\n                assert '</script>' not in record['error']\n                assert '<img' not in record['error']\n"
                  },
                  "endLine": 502,
                  "startLine": 500
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<img' not in record['error']\n"
                  },
                  "startLine": 502
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '</script>' not in record['error']\n                assert '<img' not in record['error']\n                assert '<iframe' not in record['error']\n"
                  },
                  "endLine": 503,
                  "startLine": 501
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<iframe' not in record['error']\n"
                  },
                  "startLine": 503
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '<img' not in record['error']\n                assert '<iframe' not in record['error']\n                assert '<svg' not in record['error']\n"
                  },
                  "endLine": 504,
                  "startLine": 502
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert '<svg' not in record['error']\n"
                  },
                  "startLine": 504
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert '<iframe' not in record['error']\n                assert '<svg' not in record['error']\n\n"
                  },
                  "endLine": 505,
                  "startLine": 503
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status_code == 400\n"
                  },
                  "startLine": 520
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \n            assert status_code == 400\n            data = json.loads(response.data)\n"
                  },
                  "endLine": 521,
                  "startLine": 519
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert not data['success']\n"
                  },
                  "startLine": 522
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            data = json.loads(response.data)\n            assert not data['success']\n            assert data['error']['code'] == 'VALIDATION_ERROR'\n"
                  },
                  "endLine": 523,
                  "startLine": 521
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert data['error']['code'] == 'VALIDATION_ERROR'\n"
                  },
                  "startLine": 523
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert not data['success']\n            assert data['error']['code'] == 'VALIDATION_ERROR'\n            assert data['error']['message'] == SecurityAwareErrorHandler.GENERIC_MESSAGES['validation_error']\n"
                  },
                  "endLine": 524,
                  "startLine": 522
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert data['error']['message'] == SecurityAwareErrorHandler.GENERIC_MESSAGES['validation_error']\n"
                  },
                  "startLine": 524
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert data['error']['code'] == 'VALIDATION_ERROR'\n            assert data['error']['message'] == SecurityAwareErrorHandler.GENERIC_MESSAGES['validation_error']\n            assert data['request_id'] == 'test-id'\n"
                  },
                  "endLine": 525,
                  "startLine": 523
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert data['request_id'] == 'test-id'\n"
                  },
                  "startLine": 525
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert data['error']['message'] == SecurityAwareErrorHandler.GENERIC_MESSAGES['validation_error']\n            assert data['request_id'] == 'test-id'\n            assert 'timestamp' in data\n"
                  },
                  "endLine": 526,
                  "startLine": 524
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'timestamp' in data\n"
                  },
                  "startLine": 526
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert data['request_id'] == 'test-id'\n            assert 'timestamp' in data\n    \n"
                  },
                  "endLine": 527,
                  "startLine": 525
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status_code == 200\n"
                  },
                  "startLine": 538
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \n            assert status_code == 200\n            response_data = json.loads(response.data)\n"
                  },
                  "endLine": 539,
                  "startLine": 537
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert response_data['success']\n"
                  },
                  "startLine": 540
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            response_data = json.loads(response.data)\n            assert response_data['success']\n            assert response_data['data'] == data\n"
                  },
                  "endLine": 541,
                  "startLine": 539
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert response_data['data'] == data\n"
                  },
                  "startLine": 541
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert response_data['success']\n            assert response_data['data'] == data\n            assert response_data['message'] == 'Test message'\n"
                  },
                  "endLine": 542,
                  "startLine": 540
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert response_data['message'] == 'Test message'\n"
                  },
                  "startLine": 542
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert response_data['data'] == data\n            assert response_data['message'] == 'Test message'\n            assert response_data['request_id'] == 'test-id'\n"
                  },
                  "endLine": 543,
                  "startLine": 541
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert response_data['request_id'] == 'test-id'\n"
                  },
                  "startLine": 543
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert response_data['message'] == 'Test message'\n            assert response_data['request_id'] == 'test-id'\n            assert 'timestamp' in response_data\n"
                  },
                  "endLine": 544,
                  "startLine": 542
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'timestamp' in response_data\n"
                  },
                  "startLine": 544
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert response_data['request_id'] == 'test-id'\n            assert 'timestamp' in response_data\n\n"
                  },
                  "endLine": 545,
                  "startLine": 543
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Possible hardcoded password: 'test-secret'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    app.config['SECRET_KEY'] = 'test-secret'\n"
                  },
                  "startLine": 552
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    app.config['TESTING'] = True\n    app.config['SECRET_KEY'] = 'test-secret'\n    return app\n"
                  },
                  "endLine": 553,
                  "startLine": 551
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B105",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 200\n"
                  },
                  "startLine": 574
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        response = client.get('/test')\n        assert response.status_code == 200\n        \n"
                  },
                  "endLine": 575,
                  "startLine": 573
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['success']\n"
                  },
                  "startLine": 578
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        data = json.loads(response.data)\n        assert data['success']\n        assert 'request_id' in data\n"
                  },
                  "endLine": 579,
                  "startLine": 577
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'request_id' in data\n"
                  },
                  "startLine": 579
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['success']\n        assert 'request_id' in data\n        assert 'timestamp' in data\n"
                  },
                  "endLine": 580,
                  "startLine": 578
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'timestamp' in data\n"
                  },
                  "startLine": 580
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'request_id' in data\n        assert 'timestamp' in data\n        \n"
                  },
                  "endLine": 581,
                  "startLine": 579
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'X-Request-ID' in response.headers\n"
                  },
                  "startLine": 583
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Check headers\n        assert 'X-Request-ID' in response.headers\n        assert 'X-RateLimit-Limit' in response.headers\n"
                  },
                  "endLine": 584,
                  "startLine": 582
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'X-RateLimit-Limit' in response.headers\n"
                  },
                  "startLine": 584
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'X-Request-ID' in response.headers\n        assert 'X-RateLimit-Limit' in response.headers\n\n"
                  },
                  "endLine": 585,
                  "startLine": 583
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(recent_errors) >= 3\n"
                  },
                  "startLine": 620
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Should have 3 errors recorded\n        assert len(recent_errors) >= 3\n        \n"
                  },
                  "endLine": 621,
                  "startLine": 619
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert ('NotFound', 404) in errors_data\n"
                  },
                  "startLine": 624
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        errors_data = [(err['error_type'], err['status_code']) for err in recent_errors]\n        assert ('NotFound', 404) in errors_data\n        assert ('BadRequest', 400) in errors_data\n"
                  },
                  "endLine": 625,
                  "startLine": 623
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert ('BadRequest', 400) in errors_data\n"
                  },
                  "startLine": 625
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert ('NotFound', 404) in errors_data\n        assert ('BadRequest', 400) in errors_data\n        assert ('Forbidden', 403) in errors_data\n"
                  },
                  "endLine": 626,
                  "startLine": 624
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert ('Forbidden', 403) in errors_data\n"
                  },
                  "startLine": 626
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert ('BadRequest', 400) in errors_data\n        assert ('Forbidden', 403) in errors_data\n\n"
                  },
                  "endLine": 627,
                  "startLine": 625
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert key in endpoint_metrics or 'GET test_endpoint' in endpoint_metrics\n"
                  },
                  "startLine": 652
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        key = 'GET /test-endpoint'\n        assert key in endpoint_metrics or 'GET test_endpoint' in endpoint_metrics\n        \n"
                  },
                  "endLine": 653,
                  "startLine": 651
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert endpoint_metrics[actual_key]['calls'] == 3\n"
                  },
                  "startLine": 656
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_pr2_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        actual_key = key if key in endpoint_metrics else 'GET test_endpoint'\n        assert endpoint_metrics[actual_key]['calls'] == 3\n"
                  },
                  "endLine": 656,
                  "startLine": 655
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert len(statuses) == 5\n"
                  },
                  "startLine": 57
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Should have all 5 protocols\n            assert len(statuses) == 5\n            \n"
                  },
                  "endLine": 58,
                  "startLine": 56
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert protocol in statuses_dict\n"
                  },
                  "startLine": 65
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            for protocol in expected_protocols:\n                assert protocol in statuses_dict\n                \n"
                  },
                  "endLine": 66,
                  "startLine": 64
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'available' in status\n"
                  },
                  "startLine": 69
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            for protocol_name, status in statuses_dict.items():\n                assert 'available' in status\n                assert 'connected' in status\n"
                  },
                  "endLine": 70,
                  "startLine": 68
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'connected' in status\n"
                  },
                  "startLine": 70
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'available' in status\n                assert 'connected' in status\n                assert 'status' in status\n"
                  },
                  "endLine": 71,
                  "startLine": 69
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'status' in status\n"
                  },
                  "startLine": 71
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'connected' in status\n                assert 'status' in status\n                assert isinstance(status['available'], bool)\n"
                  },
                  "endLine": 72,
                  "startLine": 70
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert isinstance(status['available'], bool)\n"
                  },
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'status' in status\n                assert isinstance(status['available'], bool)\n                assert isinstance(status['connected'], bool)\n"
                  },
                  "endLine": 73,
                  "startLine": 71
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert isinstance(status['connected'], bool)\n"
                  },
                  "startLine": 73
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert isinstance(status['available'], bool)\n                assert isinstance(status['connected'], bool)\n                assert status['status'] in ['not_initialized', 'initializing', 'ready', 'error', 'degraded', 'unknown', 'reconnecting']\n"
                  },
                  "endLine": 74,
                  "startLine": 72
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert status['status'] in ['not_initialized', 'initializing', 'ready', 'error', 'degraded', 'unknown', 'reconnecting']\n"
                  },
                  "startLine": 74
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert isinstance(status['connected'], bool)\n                assert status['status'] in ['not_initialized', 'initializing', 'ready', 'error', 'degraded', 'unknown', 'reconnecting']\n    \n"
                  },
                  "endLine": 75,
                  "startLine": 73
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'available' in status\n"
                  },
                  "startLine": 84
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \n            assert 'available' in status\n            assert 'connected' in status\n"
                  },
                  "endLine": 85,
                  "startLine": 83
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'connected' in status\n"
                  },
                  "startLine": 85
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'available' in status\n            assert 'connected' in status\n            assert 'status' in status\n"
                  },
                  "endLine": 86,
                  "startLine": 84
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'status' in status\n"
                  },
                  "startLine": 86
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'connected' in status\n            assert 'status' in status\n            assert 'metrics' in status\n"
                  },
                  "endLine": 87,
                  "startLine": 85
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'metrics' in status\n"
                  },
                  "startLine": 87
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'status' in status\n            assert 'metrics' in status\n            assert 'devices' in status\n"
                  },
                  "endLine": 88,
                  "startLine": 86
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'devices' in status\n"
                  },
                  "startLine": 88
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'metrics' in status\n            assert 'devices' in status\n            \n"
                  },
                  "endLine": 89,
                  "startLine": 87
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status['available'] is True  # Mock service is always available\n"
                  },
                  "startLine": 91
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Initially no devices configured\n            assert status['available'] is True  # Mock service is always available\n            assert status['connected'] is False  # No devices connected\n"
                  },
                  "endLine": 92,
                  "startLine": 90
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status['connected'] is False  # No devices connected\n"
                  },
                  "startLine": 92
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert status['available'] is True  # Mock service is always available\n            assert status['connected'] is False  # No devices connected\n            assert status['status'] == 'not_initialized'\n"
                  },
                  "endLine": 93,
                  "startLine": 91
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status['status'] == 'not_initialized'\n"
                  },
                  "startLine": 93
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert status['connected'] is False  # No devices connected\n            assert status['status'] == 'not_initialized'\n            assert status['demo'] is True\n"
                  },
                  "endLine": 94,
                  "startLine": 92
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status['demo'] is True\n"
                  },
                  "startLine": 94
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert status['status'] == 'not_initialized'\n            assert status['demo'] is True\n            \n"
                  },
                  "endLine": 95,
                  "startLine": 93
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status['status'] in ['error', 'initializing']  # Device added but not connected\n"
                  },
                  "startLine": 101
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            status = modbus_service.get_status()\n            assert status['status'] in ['error', 'initializing']  # Device added but not connected\n            assert status['metrics']['total_devices'] == 1\n"
                  },
                  "endLine": 102,
                  "startLine": 100
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status['metrics']['total_devices'] == 1\n"
                  },
                  "startLine": 102
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert status['status'] in ['error', 'initializing']  # Device added but not connected\n            assert status['metrics']['total_devices'] == 1\n            assert status['metrics']['connected_devices'] == 0\n"
                  },
                  "endLine": 103,
                  "startLine": 101
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status['metrics']['connected_devices'] == 0\n"
                  },
                  "startLine": 103
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert status['metrics']['total_devices'] == 1\n            assert status['metrics']['connected_devices'] == 0\n    \n"
                  },
                  "endLine": 104,
                  "startLine": 102
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'available' in status\n"
                  },
                  "startLine": 113
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \n            assert 'available' in status\n            assert 'connected' in status\n"
                  },
                  "endLine": 114,
                  "startLine": 112
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'connected' in status\n"
                  },
                  "startLine": 114
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'available' in status\n            assert 'connected' in status\n            assert 'status' in status\n"
                  },
                  "endLine": 115,
                  "startLine": 113
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'status' in status\n"
                  },
                  "startLine": 115
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'connected' in status\n            assert 'status' in status\n            assert 'metrics' in status\n"
                  },
                  "endLine": 116,
                  "startLine": 114
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'metrics' in status\n"
                  },
                  "startLine": 116
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'status' in status\n            assert 'metrics' in status\n            assert 'devices' in status\n"
                  },
                  "endLine": 117,
                  "startLine": 115
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'devices' in status\n"
                  },
                  "startLine": 117
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'metrics' in status\n            assert 'devices' in status\n            \n"
                  },
                  "endLine": 118,
                  "startLine": 116
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status['available'] is False  # Master not initialized\n"
                  },
                  "startLine": 120
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Initially master not initialized\n            assert status['available'] is False  # Master not initialized\n            assert status['connected'] is False\n"
                  },
                  "endLine": 121,
                  "startLine": 119
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status['connected'] is False\n"
                  },
                  "startLine": 121
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert status['available'] is False  # Master not initialized\n            assert status['connected'] is False\n            assert status['status'] == 'not_initialized'\n"
                  },
                  "endLine": 122,
                  "startLine": 120
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status['status'] == 'not_initialized'\n"
                  },
                  "startLine": 122
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert status['connected'] is False\n            assert status['status'] == 'not_initialized'\n            assert status['demo'] is True\n"
                  },
                  "endLine": 123,
                  "startLine": 121
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status['demo'] is True\n"
                  },
                  "startLine": 123
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert status['status'] == 'not_initialized'\n            assert status['demo'] is True\n            \n"
                  },
                  "endLine": 124,
                  "startLine": 122
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status['available'] is True  # Master now initialized\n"
                  },
                  "startLine": 130
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            status = dnp3_service.get_status()\n            assert status['available'] is True  # Master now initialized\n            assert status['status'] == 'initializing'  # No devices yet\n"
                  },
                  "endLine": 131,
                  "startLine": 129
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status['status'] == 'initializing'  # No devices yet\n"
                  },
                  "startLine": 131
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert status['available'] is True  # Master now initialized\n            assert status['status'] == 'initializing'  # No devices yet\n    \n"
                  },
                  "endLine": 132,
                  "startLine": 130
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'connected' in sim_status\n"
                  },
                  "startLine": 140
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            sim_status = simulator.get_status()\n            assert 'connected' in sim_status\n            assert 'running' in sim_status\n"
                  },
                  "endLine": 141,
                  "startLine": 139
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'running' in sim_status\n"
                  },
                  "startLine": 141
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'connected' in sim_status\n            assert 'running' in sim_status\n            assert 'simulation_units' in sim_status\n"
                  },
                  "endLine": 142,
                  "startLine": 140
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'simulation_units' in sim_status\n"
                  },
                  "startLine": 142
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'running' in sim_status\n            assert 'simulation_units' in sim_status\n            \n"
                  },
                  "endLine": 143,
                  "startLine": 141
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'simulator' in statuses_dict\n"
                  },
                  "startLine": 149
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Verify simulator is included\n            assert 'simulator' in statuses_dict\n            \n"
                  },
                  "endLine": 150,
                  "startLine": 148
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'available' in simulator_status\n"
                  },
                  "startLine": 154
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # The simulator's status depends on its current state\n            assert 'available' in simulator_status\n            assert 'connected' in simulator_status\n"
                  },
                  "endLine": 155,
                  "startLine": 153
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'connected' in simulator_status\n"
                  },
                  "startLine": 155
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'available' in simulator_status\n            assert 'connected' in simulator_status\n    \n"
                  },
                  "endLine": 156,
                  "startLine": 154
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'value' in sensor_data\n"
                  },
                  "startLine": 171
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \n            assert 'value' in sensor_data\n            assert 'quality' in sensor_data\n"
                  },
                  "endLine": 172,
                  "startLine": 170
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'quality' in sensor_data\n"
                  },
                  "startLine": 172
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'value' in sensor_data\n            assert 'quality' in sensor_data\n            assert 'timestamp' in sensor_data\n"
                  },
                  "endLine": 173,
                  "startLine": 171
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'timestamp' in sensor_data\n"
                  },
                  "startLine": 173
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'quality' in sensor_data\n            assert 'timestamp' in sensor_data\n            assert 'unit' in sensor_data\n"
                  },
                  "endLine": 174,
                  "startLine": 172
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'unit' in sensor_data\n"
                  },
                  "startLine": 174
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'timestamp' in sensor_data\n            assert 'unit' in sensor_data\n            \n"
                  },
                  "endLine": 175,
                  "startLine": 173
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert -10.0 <= sensor_data['value'] <= 40.0  # Temperature range\n"
                  },
                  "startLine": 177
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Verify realistic ranges\n            assert -10.0 <= sensor_data['value'] <= 40.0  # Temperature range\n            assert sensor_data['unit'] == '\u00b0C'\n"
                  },
                  "endLine": 178,
                  "startLine": 176
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert sensor_data['unit'] == '\u00b0C'\n"
                  },
                  "startLine": 178
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert -10.0 <= sensor_data['value'] <= 40.0  # Temperature range\n            assert sensor_data['unit'] == '\u00b0C'\n            assert sensor_data['quality'] in ['GOOD', 'BAD', 'UNCERTAIN']\n"
                  },
                  "endLine": 179,
                  "startLine": 177
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert sensor_data['quality'] in ['GOOD', 'BAD', 'UNCERTAIN']\n"
                  },
                  "startLine": 179
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert sensor_data['unit'] == '\u00b0C'\n            assert sensor_data['quality'] in ['GOOD', 'BAD', 'UNCERTAIN']\n    \n"
                  },
                  "endLine": 180,
                  "startLine": 178
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert broken_status['available'] is False\n"
                  },
                  "startLine": 201
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    broken_status = statuses_dict['test_broken']\n                    assert broken_status['available'] is False\n                    assert broken_status['connected'] is False\n"
                  },
                  "endLine": 202,
                  "startLine": 200
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert broken_status['connected'] is False\n"
                  },
                  "startLine": 202
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert broken_status['available'] is False\n                    assert broken_status['connected'] is False\n                    assert broken_status['status'] == 'error'\n"
                  },
                  "endLine": 203,
                  "startLine": 201
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert broken_status['status'] == 'error'\n"
                  },
                  "startLine": 203
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert broken_status['connected'] is False\n                    assert broken_status['status'] == 'error'\n                    assert 'error' in broken_status\n"
                  },
                  "endLine": 204,
                  "startLine": 202
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert 'error' in broken_status\n"
                  },
                  "startLine": 204
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert broken_status['status'] == 'error'\n                    assert 'error' in broken_status\n                    \n"
                  },
                  "endLine": 205,
                  "startLine": 203
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'timestamp' in data\n"
                  },
                  "startLine": 225
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            for data in data_points:\n                assert 'timestamp' in data\n                # The method returns an ISO string, so we parse it\n"
                  },
                  "endLine": 226,
                  "startLine": 224
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert isinstance(ts, datetime)\n"
                  },
                  "startLine": 228
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                ts = datetime.fromisoformat(data['timestamp'])\n                assert isinstance(ts, datetime)\n                timestamps.append(ts)\n"
                  },
                  "endLine": 229,
                  "startLine": 227
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert timestamps[0] < timestamps[1] < timestamps[2]\n"
                  },
                  "startLine": 232
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Timestamps should be strictly increasing (progression)\n            assert timestamps[0] < timestamps[1] < timestamps[2]\n    \n"
                  },
                  "endLine": 233,
                  "startLine": 231
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert len(statuses) >= 5\n"
                  },
                  "startLine": 264
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Verify we got comprehensive status information\n            assert len(statuses) >= 5\n            \n"
                  },
                  "endLine": 265,
                  "startLine": 263
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'name' in status\n"
                  },
                  "startLine": 268
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            for status in statuses:\n                assert 'name' in status\n                assert 'available' in status\n"
                  },
                  "endLine": 269,
                  "startLine": 267
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'available' in status\n"
                  },
                  "startLine": 269
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'name' in status\n                assert 'available' in status\n                assert 'connected' in status\n"
                  },
                  "endLine": 270,
                  "startLine": 268
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'connected' in status\n"
                  },
                  "startLine": 270
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'available' in status\n                assert 'connected' in status\n                assert 'status' in status\n"
                  },
                  "endLine": 271,
                  "startLine": 269
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'status' in status\n"
                  },
                  "startLine": 271
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'connected' in status\n                assert 'status' in status\n                \n"
                  },
                  "endLine": 272,
                  "startLine": 270
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'is_heartbeat_stale' in status\n"
                  },
                  "startLine": 274
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Check PR1a enhanced fields are present\n                assert 'is_heartbeat_stale' in status\n                assert 'is_recovering' in status\n"
                  },
                  "endLine": 275,
                  "startLine": 273
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'is_recovering' in status\n"
                  },
                  "startLine": 275
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'is_heartbeat_stale' in status\n                assert 'is_recovering' in status\n                assert 'health_score' in status\n"
                  },
                  "endLine": 276,
                  "startLine": 274
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'health_score' in status\n"
                  },
                  "startLine": 276
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'is_recovering' in status\n                assert 'health_score' in status\n                assert isinstance(status['health_score'], (int, float))\n"
                  },
                  "endLine": 277,
                  "startLine": 275
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert isinstance(status['health_score'], (int, float))\n"
                  },
                  "startLine": 277
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'health_score' in status\n                assert isinstance(status['health_score'], (int, float))\n                assert 0 <= status['health_score'] <= 100\n"
                  },
                  "endLine": 278,
                  "startLine": 276
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 0 <= status['health_score'] <= 100\n"
                  },
                  "startLine": 278
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert isinstance(status['health_score'], (int, float))\n                assert 0 <= status['health_score'] <= 100\n    \n"
                  },
                  "endLine": 279,
                  "startLine": 277
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'total_devices' in metrics\n"
                  },
                  "startLine": 290
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                metrics = modbus_status['metrics']\n                assert 'total_devices' in metrics\n                assert 'connected_devices' in metrics\n"
                  },
                  "endLine": 291,
                  "startLine": 289
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'connected_devices' in metrics\n"
                  },
                  "startLine": 291
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'total_devices' in metrics\n                assert 'connected_devices' in metrics\n                assert isinstance(metrics['total_devices'], int)\n"
                  },
                  "endLine": 292,
                  "startLine": 290
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert isinstance(metrics['total_devices'], int)\n"
                  },
                  "startLine": 292
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'connected_devices' in metrics\n                assert isinstance(metrics['total_devices'], int)\n                assert isinstance(metrics['connected_devices'], int)\n"
                  },
                  "endLine": 293,
                  "startLine": 291
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert isinstance(metrics['connected_devices'], int)\n"
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert isinstance(metrics['total_devices'], int)\n                assert isinstance(metrics['connected_devices'], int)\n            \n"
                  },
                  "endLine": 294,
                  "startLine": 292
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'master_initialized' in metrics\n"
                  },
                  "startLine": 299
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                metrics = dnp3_status['metrics']\n                assert 'master_initialized' in metrics\n                assert 'total_devices' in metrics\n"
                  },
                  "endLine": 300,
                  "startLine": 298
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'total_devices' in metrics\n"
                  },
                  "startLine": 300
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'master_initialized' in metrics\n                assert 'total_devices' in metrics\n                assert isinstance(metrics['master_initialized'], bool)\n"
                  },
                  "endLine": 301,
                  "startLine": 299
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert isinstance(metrics['master_initialized'], bool)\n"
                  },
                  "startLine": 301
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'total_devices' in metrics\n                assert isinstance(metrics['master_initialized'], bool)\n                assert isinstance(metrics['total_devices'], int)\n"
                  },
                  "endLine": 302,
                  "startLine": 300
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert isinstance(metrics['total_devices'], int)\n"
                  },
                  "startLine": 302
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert isinstance(metrics['master_initialized'], bool)\n                assert isinstance(metrics['total_devices'], int)\n            \n"
                  },
                  "endLine": 303,
                  "startLine": 301
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'available' in opcua_status\n"
                  },
                  "startLine": 309
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_simulation_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # but should have basic info\n                assert 'available' in opcua_status\n"
                  },
                  "endLine": 309,
                  "startLine": 308
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert status.name == \"mqtt\"\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert status.name == \"mqtt\"\n        assert status.available is True\n"
                  },
                  "endLine": 26,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert status.available is True\n"
                  },
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert status.name == \"mqtt\"\n        assert status.available is True\n        assert status.connected is True\n"
                  },
                  "endLine": 27,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert status.connected is True\n"
                  },
                  "startLine": 27
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert status.available is True\n        assert status.connected is True\n        assert status.status == \"ready\"\n"
                  },
                  "endLine": 28,
                  "startLine": 26
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert status.status == \"ready\"\n"
                  },
                  "startLine": 28
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert status.connected is True\n        assert status.status == \"ready\"\n        assert status.demo is False\n"
                  },
                  "endLine": 29,
                  "startLine": 27
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert status.demo is False\n"
                  },
                  "startLine": 29
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert status.status == \"ready\"\n        assert status.demo is False\n        assert status.last_heartbeat is None\n"
                  },
                  "endLine": 30,
                  "startLine": 28
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert status.last_heartbeat is None\n"
                  },
                  "startLine": 30
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert status.demo is False\n        assert status.last_heartbeat is None\n    \n"
                  },
                  "endLine": 31,
                  "startLine": 29
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result[\"name\"] == \"opcua\"\n"
                  },
                  "startLine": 49
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert result[\"name\"] == \"opcua\"\n        assert result[\"available\"] is True\n"
                  },
                  "endLine": 50,
                  "startLine": 48
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result[\"available\"] is True\n"
                  },
                  "startLine": 50
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result[\"name\"] == \"opcua\"\n        assert result[\"available\"] is True\n        assert result[\"connected\"] is False\n"
                  },
                  "endLine": 51,
                  "startLine": 49
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result[\"connected\"] is False\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result[\"available\"] is True\n        assert result[\"connected\"] is False\n        assert result[\"status\"] == \"error\"\n"
                  },
                  "endLine": 52,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result[\"status\"] == \"error\"\n"
                  },
                  "startLine": 52
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result[\"connected\"] is False\n        assert result[\"status\"] == \"error\"\n        assert result[\"error\"][\"code\"] == \"CONNECTION_FAILED\"\n"
                  },
                  "endLine": 53,
                  "startLine": 51
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result[\"error\"][\"code\"] == \"CONNECTION_FAILED\"\n"
                  },
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result[\"status\"] == \"error\"\n        assert result[\"error\"][\"code\"] == \"CONNECTION_FAILED\"\n        assert result[\"version\"] == \"1.04\"\n"
                  },
                  "endLine": 54,
                  "startLine": 52
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result[\"version\"] == \"1.04\"\n"
                  },
                  "startLine": 54
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result[\"error\"][\"code\"] == \"CONNECTION_FAILED\"\n        assert result[\"version\"] == \"1.04\"\n        assert result[\"last_heartbeat\"] == timestamp.isoformat()\n"
                  },
                  "endLine": 55,
                  "startLine": 53
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result[\"last_heartbeat\"] == timestamp.isoformat()\n"
                  },
                  "startLine": 55
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result[\"version\"] == \"1.04\"\n        assert result[\"last_heartbeat\"] == timestamp.isoformat()\n        assert result[\"demo\"] is True\n"
                  },
                  "endLine": 56,
                  "startLine": 54
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result[\"demo\"] is True\n"
                  },
                  "startLine": 56
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result[\"last_heartbeat\"] == timestamp.isoformat()\n        assert result[\"demo\"] is True\n        \n"
                  },
                  "endLine": 57,
                  "startLine": 55
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"is_heartbeat_stale\" in result\n"
                  },
                  "startLine": 59
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Test that computed fields are present (from status_utils)\n        assert \"is_heartbeat_stale\" in result\n        assert \"time_since_last_heartbeat\" in result\n"
                  },
                  "endLine": 60,
                  "startLine": 58
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"time_since_last_heartbeat\" in result\n"
                  },
                  "startLine": 60
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert \"is_heartbeat_stale\" in result\n        assert \"time_since_last_heartbeat\" in result\n        assert \"is_recovering\" in result\n"
                  },
                  "endLine": 61,
                  "startLine": 59
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"is_recovering\" in result\n"
                  },
                  "startLine": 61
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert \"time_since_last_heartbeat\" in result\n        assert \"is_recovering\" in result\n        assert \"health_score\" in result\n"
                  },
                  "endLine": 62,
                  "startLine": 60
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"health_score\" in result\n"
                  },
                  "startLine": 62
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert \"is_recovering\" in result\n        assert \"health_score\" in result\n\n"
                  },
                  "endLine": 63,
                  "startLine": 61
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert status.name == \"test_protocol\"\n"
                  },
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert status.name == \"test_protocol\"\n        assert status.available is False\n"
                  },
                  "endLine": 73,
                  "startLine": 71
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert status.available is False\n"
                  },
                  "startLine": 73
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert status.name == \"test_protocol\"\n        assert status.available is False\n        assert status.connected is False\n"
                  },
                  "endLine": 74,
                  "startLine": 72
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert status.connected is False\n"
                  },
                  "startLine": 74
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert status.available is False\n        assert status.connected is False\n        assert status.status == \"not_initialized\"\n"
                  },
                  "endLine": 75,
                  "startLine": 73
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert status.status == \"not_initialized\"\n"
                  },
                  "startLine": 75
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert status.connected is False\n        assert status.status == \"not_initialized\"\n    \n"
                  },
                  "endLine": 76,
                  "startLine": 74
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(statuses) == 5\n"
                  },
                  "startLine": 90
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Should have 5 protocols all in not_initialized state\n        assert len(statuses) == 5\n        for status in statuses:\n"
                  },
                  "endLine": 91,
                  "startLine": 89
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status[\"available\"] is False\n"
                  },
                  "startLine": 92
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        for status in statuses:\n            assert status[\"available\"] is False\n            assert status[\"connected\"] is False\n"
                  },
                  "endLine": 93,
                  "startLine": 91
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status[\"connected\"] is False\n"
                  },
                  "startLine": 93
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert status[\"available\"] is False\n            assert status[\"connected\"] is False\n            assert status[\"status\"] == \"not_initialized\"\n"
                  },
                  "endLine": 94,
                  "startLine": 92
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status[\"status\"] == \"not_initialized\"\n"
                  },
                  "startLine": 94
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert status[\"connected\"] is False\n            assert status[\"status\"] == \"not_initialized\"\n    \n"
                  },
                  "endLine": 95,
                  "startLine": 93
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert mqtt_status[\"available\"] is True\n"
                  },
                  "startLine": 130
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        mqtt_status = statuses_dict[\"mqtt\"]\n        assert mqtt_status[\"available\"] is True\n        assert mqtt_status[\"connected\"] is True\n"
                  },
                  "endLine": 131,
                  "startLine": 129
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert mqtt_status[\"connected\"] is True\n"
                  },
                  "startLine": 131
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert mqtt_status[\"available\"] is True\n        assert mqtt_status[\"connected\"] is True\n        assert mqtt_status[\"status\"] == \"ready\"\n"
                  },
                  "endLine": 132,
                  "startLine": 130
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert mqtt_status[\"status\"] == \"ready\"\n"
                  },
                  "startLine": 132
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert mqtt_status[\"connected\"] is True\n        assert mqtt_status[\"status\"] == \"ready\"\n        assert mqtt_status[\"version\"] == \"3.1.1\"\n"
                  },
                  "endLine": 133,
                  "startLine": 131
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert mqtt_status[\"version\"] == \"3.1.1\"\n"
                  },
                  "startLine": 133
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert mqtt_status[\"status\"] == \"ready\"\n        assert mqtt_status[\"version\"] == \"3.1.1\"\n        assert mqtt_status[\"metrics\"][\"messages_sent\"] == 100\n"
                  },
                  "endLine": 134,
                  "startLine": 132
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert mqtt_status[\"metrics\"][\"messages_sent\"] == 100\n"
                  },
                  "startLine": 134
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert mqtt_status[\"version\"] == \"3.1.1\"\n        assert mqtt_status[\"metrics\"][\"messages_sent\"] == 100\n        \n"
                  },
                  "endLine": 135,
                  "startLine": 133
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert opcua_status[\"available\"] is True\n"
                  },
                  "startLine": 138
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        opcua_status = statuses_dict[\"opcua\"]\n        assert opcua_status[\"available\"] is True\n        assert opcua_status[\"connected\"] is False\n"
                  },
                  "endLine": 139,
                  "startLine": 137
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert opcua_status[\"connected\"] is False\n"
                  },
                  "startLine": 139
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert opcua_status[\"available\"] is True\n        assert opcua_status[\"connected\"] is False\n        assert opcua_status[\"status\"] == \"error\"\n"
                  },
                  "endLine": 140,
                  "startLine": 138
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert opcua_status[\"status\"] == \"error\"\n"
                  },
                  "startLine": 140
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert opcua_status[\"connected\"] is False\n        assert opcua_status[\"status\"] == \"error\"\n        assert opcua_status[\"error\"][\"code\"] == \"CONNECTION_REFUSED\"\n"
                  },
                  "endLine": 141,
                  "startLine": 139
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert opcua_status[\"error\"][\"code\"] == \"CONNECTION_REFUSED\"\n"
                  },
                  "startLine": 141
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert opcua_status[\"status\"] == \"error\"\n        assert opcua_status[\"error\"][\"code\"] == \"CONNECTION_REFUSED\"\n        \n"
                  },
                  "endLine": 142,
                  "startLine": 140
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert protocol_status[\"available\"] is False\n"
                  },
                  "startLine": 146
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            protocol_status = statuses_dict[protocol_name]\n            assert protocol_status[\"available\"] is False\n            assert protocol_status[\"connected\"] is False\n"
                  },
                  "endLine": 147,
                  "startLine": 145
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert protocol_status[\"connected\"] is False\n"
                  },
                  "startLine": 147
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert protocol_status[\"available\"] is False\n            assert protocol_status[\"connected\"] is False\n            assert protocol_status[\"status\"] == \"not_initialized\"\n"
                  },
                  "endLine": 148,
                  "startLine": 146
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert protocol_status[\"status\"] == \"not_initialized\"\n"
                  },
                  "startLine": 148
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert protocol_status[\"connected\"] is False\n            assert protocol_status[\"status\"] == \"not_initialized\"\n    \n"
                  },
                  "endLine": 149,
                  "startLine": 147
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert mqtt_status[\"available\"] is False\n"
                  },
                  "startLine": 169
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        mqtt_status = statuses_dict[\"mqtt\"]\n        assert mqtt_status[\"available\"] is False\n        assert mqtt_status[\"connected\"] is False\n"
                  },
                  "endLine": 170,
                  "startLine": 168
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert mqtt_status[\"connected\"] is False\n"
                  },
                  "startLine": 170
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert mqtt_status[\"available\"] is False\n        assert mqtt_status[\"connected\"] is False\n        assert mqtt_status[\"status\"] == \"error\"\n"
                  },
                  "endLine": 171,
                  "startLine": 169
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert mqtt_status[\"status\"] == \"error\"\n"
                  },
                  "startLine": 171
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert mqtt_status[\"connected\"] is False\n        assert mqtt_status[\"status\"] == \"error\"\n        assert mqtt_status[\"error\"][\"code\"] == \"STATUS_FETCH_ERROR\"\n"
                  },
                  "endLine": 172,
                  "startLine": 170
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert mqtt_status[\"error\"][\"code\"] == \"STATUS_FETCH_ERROR\"\n"
                  },
                  "startLine": 172
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert mqtt_status[\"status\"] == \"error\"\n        assert mqtt_status[\"error\"][\"code\"] == \"STATUS_FETCH_ERROR\"\n        assert \"Connection timeout\" in mqtt_status[\"error\"][\"message\"]\n"
                  },
                  "endLine": 173,
                  "startLine": 171
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"Connection timeout\" in mqtt_status[\"error\"][\"message\"]\n"
                  },
                  "startLine": 173
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert mqtt_status[\"error\"][\"code\"] == \"STATUS_FETCH_ERROR\"\n        assert \"Connection timeout\" in mqtt_status[\"error\"][\"message\"]\n\n"
                  },
                  "endLine": 174,
                  "startLine": 172
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert str(exc) == \"Test error\"\n"
                  },
                  "startLine": 189
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert str(exc) == \"Test error\"\n        assert exc.error_type == \"validation_error\"\n"
                  },
                  "endLine": 190,
                  "startLine": 188
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert exc.error_type == \"validation_error\"\n"
                  },
                  "startLine": 190
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert str(exc) == \"Test error\"\n        assert exc.error_type == \"validation_error\"\n        assert exc.status_code == 400\n"
                  },
                  "endLine": 191,
                  "startLine": 189
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert exc.status_code == 400\n"
                  },
                  "startLine": 191
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert exc.error_type == \"validation_error\"\n        assert exc.status_code == 400\n        assert exc.context == \"Test Context\"\n"
                  },
                  "endLine": 192,
                  "startLine": 190
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert exc.context == \"Test Context\"\n"
                  },
                  "startLine": 192
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert exc.status_code == 400\n        assert exc.context == \"Test Context\"\n        assert exc.details[\"field\"] == \"test_field\"\n"
                  },
                  "endLine": 193,
                  "startLine": 191
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert exc.details[\"field\"] == \"test_field\"\n"
                  },
                  "startLine": 193
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert exc.context == \"Test Context\"\n        assert exc.details[\"field\"] == \"test_field\"\n    \n"
                  },
                  "endLine": 194,
                  "startLine": 192
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert mqtt_exc.error_type == \"connection_error\"\n"
                  },
                  "startLine": 198
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        mqtt_exc = MQTTException(\"MQTT connection failed\")\n        assert mqtt_exc.error_type == \"connection_error\"\n        assert mqtt_exc.status_code == 503\n"
                  },
                  "endLine": 199,
                  "startLine": 197
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert mqtt_exc.status_code == 503\n"
                  },
                  "startLine": 199
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert mqtt_exc.error_type == \"connection_error\"\n        assert mqtt_exc.status_code == 503\n        assert mqtt_exc.details[\"protocol\"] == \"MQTT\"\n"
                  },
                  "endLine": 200,
                  "startLine": 198
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert mqtt_exc.details[\"protocol\"] == \"MQTT\"\n"
                  },
                  "startLine": 200
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert mqtt_exc.status_code == 503\n        assert mqtt_exc.details[\"protocol\"] == \"MQTT\"\n        \n"
                  },
                  "endLine": 201,
                  "startLine": 199
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert opcua_exc.error_type == \"connection_error\"\n"
                  },
                  "startLine": 203
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        opcua_exc = OPCUAException(\"OPC UA server unreachable\")\n        assert opcua_exc.error_type == \"connection_error\"\n        assert opcua_exc.details[\"protocol\"] == \"OPC UA\"\n"
                  },
                  "endLine": 204,
                  "startLine": 202
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert opcua_exc.details[\"protocol\"] == \"OPC UA\"\n"
                  },
                  "startLine": 204
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert opcua_exc.error_type == \"connection_error\"\n        assert opcua_exc.details[\"protocol\"] == \"OPC UA\"\n        \n"
                  },
                  "endLine": 205,
                  "startLine": 203
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert modbus_exc.details[\"protocol\"] == \"Modbus\"\n"
                  },
                  "startLine": 207
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        modbus_exc = ModbusException(\"Modbus device timeout\")\n        assert modbus_exc.details[\"protocol\"] == \"Modbus\"\n        \n"
                  },
                  "endLine": 208,
                  "startLine": 206
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert dnp3_exc.details[\"protocol\"] == \"DNP3\"\n"
                  },
                  "startLine": 210
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        dnp3_exc = DNP3Exception(\"DNP3 outstation offline\")\n        assert dnp3_exc.details[\"protocol\"] == \"DNP3\"\n    \n"
                  },
                  "endLine": 211,
                  "startLine": 209
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"Test Service service is currently unavailable\" in str(exc)\n"
                  },
                  "startLine": 216
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert \"Test Service service is currently unavailable\" in str(exc)\n        assert exc.error_type == \"service_unavailable\"\n"
                  },
                  "endLine": 217,
                  "startLine": 215
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert exc.error_type == \"service_unavailable\"\n"
                  },
                  "startLine": 217
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert \"Test Service service is currently unavailable\" in str(exc)\n        assert exc.error_type == \"service_unavailable\"\n        assert exc.status_code == 503\n"
                  },
                  "endLine": 218,
                  "startLine": 216
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert exc.status_code == 503\n"
                  },
                  "startLine": 218
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert exc.error_type == \"service_unavailable\"\n        assert exc.status_code == 503\n        assert exc.details[\"service_name\"] == \"Test Service\"\n"
                  },
                  "endLine": 219,
                  "startLine": 217
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert exc.details[\"service_name\"] == \"Test Service\"\n"
                  },
                  "startLine": 219
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert exc.status_code == 503\n        assert exc.details[\"service_name\"] == \"Test Service\"\n\n"
                  },
                  "endLine": 220,
                  "startLine": 218
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert mqtt_exc.error_type in SecurityAwareErrorHandler.GENERIC_MESSAGES\n"
                  },
                  "startLine": 232
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        mqtt_exc = MQTTException(\"Connection failed\")\n        assert mqtt_exc.error_type in SecurityAwareErrorHandler.GENERIC_MESSAGES\n        \n"
                  },
                  "endLine": 233,
                  "startLine": 231
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert service_exc.error_type in SecurityAwareErrorHandler.GENERIC_MESSAGES\n"
                  },
                  "startLine": 235
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        service_exc = ServiceUnavailableException(\"Test\")\n        assert service_exc.error_type in SecurityAwareErrorHandler.GENERIC_MESSAGES\n    \n"
                  },
                  "endLine": 236,
                  "startLine": 234
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert status_code == 503\n"
                  },
                  "startLine": 254
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert status_code == 503\n        # Should return generic message, not the actual error details\n"
                  },
                  "endLine": 255,
                  "startLine": 253
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"temporarily unavailable\" in response.get_json()[\"error\"].lower()\n"
                  },
                  "startLine": 256
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_protocol_status_normalization.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Should return generic message, not the actual error details\n        assert \"temporarily unavailable\" in response.get_json()[\"error\"].lower()\n\n"
                  },
                  "endLine": 257,
                  "startLine": 255
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(result, datetime)\n"
                  },
                  "startLine": 14
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_recommendations_2_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = parse_timestamp(timestamp_str)\n        assert isinstance(result, datetime)\n        assert result.tzinfo is not None\n"
                  },
                  "endLine": 15,
                  "startLine": 13
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result.tzinfo is not None\n"
                  },
                  "startLine": 15
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_recommendations_2_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert isinstance(result, datetime)\n        assert result.tzinfo is not None\n        assert result.year == 2025\n"
                  },
                  "endLine": 16,
                  "startLine": 14
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result.year == 2025\n"
                  },
                  "startLine": 16
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_recommendations_2_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result.tzinfo is not None\n        assert result.year == 2025\n        assert result.month == 1\n"
                  },
                  "endLine": 17,
                  "startLine": 15
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result.month == 1\n"
                  },
                  "startLine": 17
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_recommendations_2_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result.year == 2025\n        assert result.month == 1\n        assert result.day == 15\n"
                  },
                  "endLine": 18,
                  "startLine": 16
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result.day == 15\n"
                  },
                  "startLine": 18
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_recommendations_2_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result.month == 1\n        assert result.day == 15\n        \n"
                  },
                  "endLine": 19,
                  "startLine": 17
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(result, datetime)\n"
                  },
                  "startLine": 24
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_recommendations_2_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = parse_timestamp(timestamp_str)\n        assert isinstance(result, datetime)\n        assert result.tzinfo is not None\n"
                  },
                  "endLine": 25,
                  "startLine": 23
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result.tzinfo is not None\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_recommendations_2_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert isinstance(result, datetime)\n        assert result.tzinfo is not None\n        \n"
                  },
                  "endLine": 26,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(result, datetime)\n"
                  },
                  "startLine": 31
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_recommendations_2_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = parse_timestamp(timestamp_str)\n        assert isinstance(result, datetime)\n        assert result.tzinfo is not None\n"
                  },
                  "endLine": 32,
                  "startLine": 30
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result.tzinfo is not None\n"
                  },
                  "startLine": 32
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_recommendations_2_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert isinstance(result, datetime)\n        assert result.tzinfo is not None\n        assert result.tzinfo == timezone.utc\n"
                  },
                  "endLine": 33,
                  "startLine": 31
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result.tzinfo == timezone.utc\n"
                  },
                  "startLine": 33
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_recommendations_2_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result.tzinfo is not None\n        assert result.tzinfo == timezone.utc\n        \n"
                  },
                  "endLine": 34,
                  "startLine": 32
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(result, datetime)\n"
                  },
                  "startLine": 54
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_recommendations_2_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = parse_timestamp(timestamp_str)\n        assert isinstance(result, datetime)\n        assert result.tzinfo is not None\n"
                  },
                  "endLine": 55,
                  "startLine": 53
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result.tzinfo is not None\n"
                  },
                  "startLine": 55
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_recommendations_2_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert isinstance(result, datetime)\n        assert result.tzinfo is not None\n        # The offset should be -5 hours\n"
                  },
                  "endLine": 56,
                  "startLine": 54
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result.utcoffset().total_seconds() == -5 * 3600\n"
                  },
                  "startLine": 57
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_recommendations_2_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # The offset should be -5 hours\n        assert result.utcoffset().total_seconds() == -5 * 3600\n\n"
                  },
                  "endLine": 58,
                  "startLine": 56
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert valid\n"
                  },
                  "startLine": 71
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_recommendations_2_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            valid = 1 <= limit <= 10000\n            assert valid\n        except (ValueError, TypeError):\n"
                  },
                  "endLine": 72,
                  "startLine": 70
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert valid\n"
                  },
                  "startLine": 87
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_recommendations_2_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            valid = 1 <= days <= 365\n            assert valid\n        except (ValueError, TypeError):\n"
                  },
                  "endLine": 88,
                  "startLine": 86
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert not valid\n"
                  },
                  "startLine": 95
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_recommendations_2_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        valid = 1 <= days <= 365\n        assert not valid\n\n"
                  },
                  "endLine": 96,
                  "startLine": 94
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert _check_environment_mismatch('production', '', True) is True\n"
                  },
                  "startLine": 24
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_reviewer_batch_1_3_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \"\"\"Test detection of FLASK_ENV=production with DEBUG=True.\"\"\"\n        assert _check_environment_mismatch('production', '', True) is True\n    \n"
                  },
                  "endLine": 25,
                  "startLine": 23
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert _check_environment_mismatch('', 'staging', True) is True\n"
                  },
                  "startLine": 28
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_reviewer_batch_1_3_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \"\"\"Test detection of APP_ENV=staging with DEBUG=True.\"\"\"\n        assert _check_environment_mismatch('', 'staging', True) is True\n        \n"
                  },
                  "endLine": 29,
                  "startLine": 27
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert _check_environment_mismatch('', 'prod', True) is True\n"
                  },
                  "startLine": 32
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_reviewer_batch_1_3_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \"\"\"Test detection of APP_ENV=prod with DEBUG=True.\"\"\"\n        assert _check_environment_mismatch('', 'prod', True) is True\n        \n"
                  },
                  "endLine": 33,
                  "startLine": 31
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert _check_environment_mismatch('development', '', True) is False\n"
                  },
                  "startLine": 36
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_reviewer_batch_1_3_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \"\"\"Test no mismatch for development environment with DEBUG=True.\"\"\"\n        assert _check_environment_mismatch('development', '', True) is False\n        \n"
                  },
                  "endLine": 37,
                  "startLine": 35
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert _check_environment_mismatch('production', '', False) is False\n"
                  },
                  "startLine": 40
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_reviewer_batch_1_3_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \"\"\"Test no mismatch for production environment without DEBUG.\"\"\"\n        assert _check_environment_mismatch('production', '', False) is False\n        \n"
                  },
                  "endLine": 41,
                  "startLine": 39
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert opcua_client.trust_cert_file == str(cert_path)\n"
                  },
                  "startLine": 177
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_reviewer_batch_1_3_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    # Verify certificate was processed (no exception raised)\n                    assert opcua_client.trust_cert_file == str(cert_path)\n                \n"
                  },
                  "endLine": 178,
                  "startLine": 176
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert result is False\n"
                  },
                  "startLine": 315
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_reviewer_batch_1_3_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \n            assert result is False\n            mock_logger.error.assert_called()\n"
                  },
                  "endLine": 316,
                  "startLine": 314
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert len(error_calls) > 0\n"
                  },
                  "startLine": 320
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_reviewer_batch_1_3_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                          if \"configuration error\" in str(call)]\n            assert len(error_calls) > 0\n            \n"
                  },
                  "endLine": 321,
                  "startLine": 319
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert app.debug is False, \"TestingConfig should set app.debug=False\"\n"
                  },
                  "startLine": 16
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_run_debug_mode.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            app = create_app()\n            assert app.debug is False, \"TestingConfig should set app.debug=False\"\n            assert app.config['DEBUG'] is False, \"TestingConfig should set DEBUG=False\"\n"
                  },
                  "endLine": 17,
                  "startLine": 15
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert app.config['DEBUG'] is False, \"TestingConfig should set DEBUG=False\"\n"
                  },
                  "startLine": 17
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_run_debug_mode.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert app.debug is False, \"TestingConfig should set app.debug=False\"\n            assert app.config['DEBUG'] is False, \"TestingConfig should set DEBUG=False\"\n            assert app.config['TESTING'] is True, \"TestingConfig should set TESTING=True\"\n"
                  },
                  "endLine": 18,
                  "startLine": 16
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert app.config['TESTING'] is True, \"TestingConfig should set TESTING=True\"\n"
                  },
                  "startLine": 18
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_run_debug_mode.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert app.config['DEBUG'] is False, \"TestingConfig should set DEBUG=False\"\n            assert app.config['TESTING'] is True, \"TestingConfig should set TESTING=True\"\n    \n"
                  },
                  "endLine": 19,
                  "startLine": 17
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert app.debug is False, \"ProductionConfig should set app.debug=False\"\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_run_debug_mode.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            app = create_app()\n            assert app.debug is False, \"ProductionConfig should set app.debug=False\"\n            assert app.config['DEBUG'] is False, \"ProductionConfig should set DEBUG=False\"\n"
                  },
                  "endLine": 26,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert app.config['DEBUG'] is False, \"ProductionConfig should set DEBUG=False\"\n"
                  },
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_run_debug_mode.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert app.debug is False, \"ProductionConfig should set app.debug=False\"\n            assert app.config['DEBUG'] is False, \"ProductionConfig should set DEBUG=False\"\n    \n"
                  },
                  "endLine": 27,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert app.config['DEBUG'] is False, \"Should use production config without FLASK_DEBUG\"\n"
                  },
                  "startLine": 34
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_run_debug_mode.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            app = create_app()  # Should fall back to production\n            assert app.config['DEBUG'] is False, \"Should use production config without FLASK_DEBUG\"\n    \n"
                  },
                  "endLine": 35,
                  "startLine": 33
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert app.config['DEBUG'] is True, \"Should use DevelopmentConfig with both flags\"\n"
                  },
                  "startLine": 41
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_run_debug_mode.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            app = create_app()  # Should use DevelopmentConfig\n            assert app.config['DEBUG'] is True, \"Should use DevelopmentConfig with both flags\"\n    \n"
                  },
                  "endLine": 42,
                  "startLine": 40
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert app.debug is False, \"FLASK_DEBUG=1 alone should not enable debug mode\"\n"
                  },
                  "startLine": 49
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_run_debug_mode.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            app = create_app()\n            assert app.debug is False, \"FLASK_DEBUG=1 alone should not enable debug mode\"\n            assert app.config['DEBUG'] is False, \"FLASK_DEBUG=1 alone should not set DEBUG=True\"\n"
                  },
                  "endLine": 50,
                  "startLine": 48
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert app.config['DEBUG'] is False, \"FLASK_DEBUG=1 alone should not set DEBUG=True\"\n"
                  },
                  "startLine": 50
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_run_debug_mode.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert app.debug is False, \"FLASK_DEBUG=1 alone should not enable debug mode\"\n            assert app.config['DEBUG'] is False, \"FLASK_DEBUG=1 alone should not set DEBUG=True\"\n\n"
                  },
                  "endLine": 51,
                  "startLine": 49
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitize(input_str) == expected\n"
                  },
                  "startLine": 16
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        expected = \"testvaluewithttabs\"\n        assert sanitize(input_str) == expected\n    \n"
                  },
                  "endLine": 17,
                  "startLine": 15
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitize(input_str) == input_str\n"
                  },
                  "startLine": 21
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        input_str = \"clean string\"\n        assert sanitize(input_str) == input_str\n    \n"
                  },
                  "endLine": 22,
                  "startLine": 20
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitize(input_dict) == expected\n"
                  },
                  "startLine": 35
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        }\n        assert sanitize(input_dict) == expected\n    \n"
                  },
                  "endLine": 36,
                  "startLine": 34
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitize(input_dict) == expected\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        }\n        assert sanitize(input_dict) == expected\n    \n"
                  },
                  "endLine": 52,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitize(input_list) == expected\n"
                  },
                  "startLine": 57
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        expected = ['clean', 'withnewline', 'andtab']\n        assert sanitize(input_list) == expected\n    \n"
                  },
                  "endLine": 58,
                  "startLine": 56
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitize(input_list) == expected\n"
                  },
                  "startLine": 69
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        ]\n        assert sanitize(input_list) == expected\n    \n"
                  },
                  "endLine": 70,
                  "startLine": 68
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitize(123) == 123\n"
                  },
                  "startLine": 73
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \"\"\"Test that non-string types are returned unchanged.\"\"\"\n        assert sanitize(123) == 123\n        assert sanitize(45.67) == 45.67\n"
                  },
                  "endLine": 74,
                  "startLine": 72
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitize(45.67) == 45.67\n"
                  },
                  "startLine": 74
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert sanitize(123) == 123\n        assert sanitize(45.67) == 45.67\n        assert sanitize(True) is True\n"
                  },
                  "endLine": 75,
                  "startLine": 73
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitize(True) is True\n"
                  },
                  "startLine": 75
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert sanitize(45.67) == 45.67\n        assert sanitize(True) is True\n        assert sanitize(None) is None\n"
                  },
                  "endLine": 76,
                  "startLine": 74
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitize(None) is None\n"
                  },
                  "startLine": 76
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert sanitize(True) is True\n        assert sanitize(None) is None\n    \n"
                  },
                  "endLine": 77,
                  "startLine": 75
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert '\\n' not in sanitized\n"
                  },
                  "startLine": 84
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # All newlines should be removed\n        assert '\\n' not in sanitized\n        assert '\\r' not in sanitized\n"
                  },
                  "endLine": 85,
                  "startLine": 83
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert '\\r' not in sanitized\n"
                  },
                  "startLine": 85
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert '\\n' not in sanitized\n        assert '\\r' not in sanitized\n        assert sanitized == \"user123[ERROR] Fake error messagemalicious content\"\n"
                  },
                  "endLine": 86,
                  "startLine": 84
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized == \"user123[ERROR] Fake error messagemalicious content\"\n"
                  },
                  "startLine": 86
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert '\\r' not in sanitized\n        assert sanitized == \"user123[ERROR] Fake error messagemalicious content\"\n    \n"
                  },
                  "endLine": 87,
                  "startLine": 85
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert chr(i) not in sanitized\n"
                  },
                  "startLine": 95
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        for i in range(32):\n            assert chr(i) not in sanitized\n        assert sanitized == \"testvalue\"\n"
                  },
                  "endLine": 96,
                  "startLine": 94
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized == \"testvalue\"\n"
                  },
                  "startLine": 96
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert chr(i) not in sanitized\n        assert sanitized == \"testvalue\"\n    \n"
                  },
                  "endLine": 97,
                  "startLine": 95
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'key\\nwith\\nnewlines' not in sanitized\n"
                  },
                  "startLine": 103
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Keys should be sanitized\n        assert 'key\\nwith\\nnewlines' not in sanitized\n        assert 'keywithnewlines' in sanitized\n"
                  },
                  "endLine": 104,
                  "startLine": 102
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'keywithnewlines' in sanitized\n"
                  },
                  "startLine": 104
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'key\\nwith\\nnewlines' not in sanitized\n        assert 'keywithnewlines' in sanitized\n        # Values should be sanitized\n"
                  },
                  "endLine": 105,
                  "startLine": 103
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized['keywithnewlines'] == 'value'\n"
                  },
                  "startLine": 106
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Values should be sanitized\n        assert sanitized['keywithnewlines'] == 'value'\n        assert sanitized['clean'] == 'testtabs'\n"
                  },
                  "endLine": 107,
                  "startLine": 105
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized['clean'] == 'testtabs'\n"
                  },
                  "startLine": 107
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert sanitized['keywithnewlines'] == 'value'\n        assert sanitized['clean'] == 'testtabs'\n    \n"
                  },
                  "endLine": 108,
                  "startLine": 106
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 0 in sanitized\n"
                  },
                  "startLine": 114
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Non-string keys should be preserved\n        assert 0 in sanitized\n        assert 1 in sanitized\n"
                  },
                  "endLine": 115,
                  "startLine": 113
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 1 in sanitized\n"
                  },
                  "startLine": 115
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 0 in sanitized\n        assert 1 in sanitized\n        # String keys should be sanitized\n"
                  },
                  "endLine": 116,
                  "startLine": 114
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'str_key\\n' not in sanitized\n"
                  },
                  "startLine": 117
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # String keys should be sanitized\n        assert 'str_key\\n' not in sanitized\n        assert 'str_key' in sanitized\n"
                  },
                  "endLine": 118,
                  "startLine": 116
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'str_key' in sanitized\n"
                  },
                  "startLine": 118
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'str_key\\n' not in sanitized\n        assert 'str_key' in sanitized\n        # All values should be sanitized\n"
                  },
                  "endLine": 119,
                  "startLine": 117
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized[0] == 'valuewithnewlines'\n"
                  },
                  "startLine": 120
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # All values should be sanitized\n        assert sanitized[0] == 'valuewithnewlines'\n        assert sanitized[1] == 'clean'\n"
                  },
                  "endLine": 121,
                  "startLine": 119
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized[1] == 'clean'\n"
                  },
                  "startLine": 121
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert sanitized[0] == 'valuewithnewlines'\n        assert sanitized[1] == 'clean'\n        assert sanitized['str_key'] == 'testtabs'\n"
                  },
                  "endLine": 122,
                  "startLine": 120
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized['str_key'] == 'testtabs'\n"
                  },
                  "startLine": 122
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert sanitized[1] == 'clean'\n        assert sanitized['str_key'] == 'testtabs'\n    \n"
                  },
                  "endLine": 123,
                  "startLine": 121
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert '\\u2028' not in sanitized\n"
                  },
                  "startLine": 129
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        sanitized = sanitize(input_str)\n        assert '\\u2028' not in sanitized\n        assert '\\u2029' not in sanitized\n"
                  },
                  "endLine": 130,
                  "startLine": 128
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert '\\u2029' not in sanitized\n"
                  },
                  "startLine": 130
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert '\\u2028' not in sanitized\n        assert '\\u2029' not in sanitized\n        assert sanitized == \"line1line2line3\"\n"
                  },
                  "endLine": 131,
                  "startLine": 129
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized == \"line1line2line3\"\n"
                  },
                  "startLine": 131
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert '\\u2029' not in sanitized\n        assert sanitized == \"line1line2line3\"\n    \n"
                  },
                  "endLine": 132,
                  "startLine": 130
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(sanitized, dict)\n"
                  },
                  "startLine": 164
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Should not crash or cause issues\n        assert isinstance(sanitized, dict)\n        # Navigate to depth 9 - should still have nested dict structure\n"
                  },
                  "endLine": 165,
                  "startLine": 163
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert isinstance(result, dict)\n"
                  },
                  "startLine": 169
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            result = result[f'level{i}']\n            assert isinstance(result, dict)\n        # At depth 9, the value for key 'level10' was sanitized at depth 10\n"
                  },
                  "endLine": 170,
                  "startLine": 168
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(result['level10'], dict)\n"
                  },
                  "startLine": 172
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # which is still within limit, so it's a dict\n        assert isinstance(result['level10'], dict)\n        # But that dict's items were sanitized at depth 11 (> max_depth=10)\n"
                  },
                  "endLine": 173,
                  "startLine": 171
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result['level10'] == {'[deeply nested structure]': '[deeply nested structure]'}\n"
                  },
                  "startLine": 175
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # So both key and value became placeholders\n        assert result['level10'] == {'[deeply nested structure]': '[deeply nested structure]'}\n        \n"
                  },
                  "endLine": 176,
                  "startLine": 174
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(sanitized_shallow, dict)\n"
                  },
                  "startLine": 179
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        sanitized_shallow = sanitize(nested, max_depth=3)\n        assert isinstance(sanitized_shallow, dict)\n        # Navigate to depth 2\n"
                  },
                  "endLine": 180,
                  "startLine": 178
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(result_shallow['level3'], dict)\n"
                  },
                  "startLine": 184
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # which is still within limit, so it's a dict\n        assert isinstance(result_shallow['level3'], dict)\n        # But that dict's items were sanitized at depth 4 (> max_depth=3)\n"
                  },
                  "endLine": 185,
                  "startLine": 183
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result_shallow['level3'] == {'[deeply nested structure]': '[deeply nested structure]'}\n"
                  },
                  "startLine": 186
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # But that dict's items were sanitized at depth 4 (> max_depth=3)\n        assert result_shallow['level3'] == {'[deeply nested structure]': '[deeply nested structure]'}\n\n"
                  },
                  "endLine": 187,
                  "startLine": 185
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert '\\n' not in record.msg\n"
                  },
                  "startLine": 218
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Message should be sanitized\n        assert '\\n' not in record.msg\n        assert record.msg == 'User login: user123[ERROR] Fake error'\n"
                  },
                  "endLine": 219,
                  "startLine": 217
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert record.msg == 'User login: user123[ERROR] Fake error'\n"
                  },
                  "startLine": 219
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert '\\n' not in record.msg\n        assert record.msg == 'User login: user123[ERROR] Fake error'\n    \n"
                  },
                  "endLine": 220,
                  "startLine": 218
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert '\\n' not in record.msg\n"
                  },
                  "startLine": 243
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Message should be sanitized (object converted to string and sanitized)\n        assert '\\n' not in record.msg\n        assert '\\r' not in record.msg\n"
                  },
                  "endLine": 244,
                  "startLine": 242
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert '\\r' not in record.msg\n"
                  },
                  "startLine": 244
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert '\\n' not in record.msg\n        assert '\\r' not in record.msg\n        assert record.msg == 'Normal messageMALICIOUS INJECTIONFAKE LOG ENTRY'\n"
                  },
                  "endLine": 245,
                  "startLine": 243
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert record.msg == 'Normal messageMALICIOUS INJECTIONFAKE LOG ENTRY'\n"
                  },
                  "startLine": 245
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert '\\r' not in record.msg\n        assert record.msg == 'Normal messageMALICIOUS INJECTIONFAKE LOG ENTRY'\n    \n"
                  },
                  "endLine": 246,
                  "startLine": 244
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert record.args[0] == 'unit123'\n"
                  },
                  "startLine": 265
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Arguments should be sanitized\n        assert record.args[0] == 'unit123'\n        assert record.args[1] == 'tempsensor'\n"
                  },
                  "endLine": 266,
                  "startLine": 264
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert record.args[1] == 'tempsensor'\n"
                  },
                  "startLine": 266
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert record.args[0] == 'unit123'\n        assert record.args[1] == 'tempsensor'\n    \n"
                  },
                  "endLine": 267,
                  "startLine": 265
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert record.args[0] == 'stringvalue'\n"
                  },
                  "startLine": 287
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # All arguments should be converted to strings and sanitized\n        assert record.args[0] == 'stringvalue'\n        assert record.args[1] == '123'  # Number converted to string\n"
                  },
                  "endLine": 288,
                  "startLine": 286
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert record.args[1] == '123'  # Number converted to string\n"
                  },
                  "startLine": 288
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert record.args[0] == 'stringvalue'\n        assert record.args[1] == '123'  # Number converted to string\n        assert record.args[2] == 'True'  # Boolean converted to string\n"
                  },
                  "endLine": 289,
                  "startLine": 287
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert record.args[2] == 'True'  # Boolean converted to string\n"
                  },
                  "startLine": 289
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert record.args[1] == '123'  # Number converted to string\n        assert record.args[2] == 'True'  # Boolean converted to string\n    \n"
                  },
                  "endLine": 290,
                  "startLine": 288
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert '\\n' not in record.args[0]\n"
                  },
                  "startLine": 313
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Object should be converted to string via __str__ and then sanitized\n        assert '\\n' not in record.args[0]\n        assert record.args[0] == 'objectwithcontrolchars'\n"
                  },
                  "endLine": 314,
                  "startLine": 312
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert record.args[0] == 'objectwithcontrolchars'\n"
                  },
                  "startLine": 314
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert '\\n' not in record.args[0]\n        assert record.args[0] == 'objectwithcontrolchars'\n    \n"
                  },
                  "endLine": 315,
                  "startLine": 313
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert record.args['username'] == 'admin123'\n"
                  },
                  "startLine": 334
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Dict values should be converted to strings and sanitized\n        assert record.args['username'] == 'admin123'\n        assert record.args['user_id'] == 'idwithcarriage'\n"
                  },
                  "endLine": 335,
                  "startLine": 333
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert record.args['user_id'] == 'idwithcarriage'\n"
                  },
                  "startLine": 335
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert record.args['username'] == 'admin123'\n        assert record.args['user_id'] == 'idwithcarriage'\n    \n"
                  },
                  "endLine": 336,
                  "startLine": 334
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert '\\u2028' not in record.args[0]\n"
                  },
                  "startLine": 355
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Unicode separators should be removed\n        assert '\\u2028' not in record.args[0]\n        assert '\\u2029' not in record.args[0]\n"
                  },
                  "endLine": 356,
                  "startLine": 354
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert '\\u2029' not in record.args[0]\n"
                  },
                  "startLine": 356
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert '\\u2028' not in record.args[0]\n        assert '\\u2029' not in record.args[0]\n        assert record.args[0] == 'line1line2line3'\n"
                  },
                  "endLine": 357,
                  "startLine": 355
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert record.args[0] == 'line1line2line3'\n"
                  },
                  "startLine": 357
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert '\\u2029' not in record.args[0]\n        assert record.args[0] == 'line1line2line3'\n    \n"
                  },
                  "endLine": 358,
                  "startLine": 356
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'unit123\\nmalicious' == data['unit_id']\n"
                  },
                  "startLine": 406
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Flask handles URL decoding, so %0A becomes \\n\n            assert 'unit123\\nmalicious' == data['unit_id']\n            assert data['original'] is True\n"
                  },
                  "endLine": 407,
                  "startLine": 405
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert data['original'] is True\n"
                  },
                  "startLine": 407
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'unit123\\nmalicious' == data['unit_id']\n            assert data['original'] is True\n\n"
                  },
                  "endLine": 408,
                  "startLine": 406
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Possible hardcoded password: 'test-secret'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    app.config['SECRET_KEY'] = 'test-secret'\n"
                  },
                  "startLine": 415
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sanitization_middleware.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    app.config['TESTING'] = True\n    app.config['SECRET_KEY'] = 'test-secret'\n    return app\n"
                  },
                  "endLine": 416,
                  "startLine": 414
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B105",
          "ruleIndex": 0
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert parsed_data is not None\n"
                  },
                  "startLine": 61
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            parsed_data = mqtt_client._parse_scada_message(test_topic, test_payload)\n            assert parsed_data is not None\n            assert parsed_data['unit_id'] == 'UNIT001'\n"
                  },
                  "endLine": 62,
                  "startLine": 60
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert parsed_data['unit_id'] == 'UNIT001'\n"
                  },
                  "startLine": 62
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert parsed_data is not None\n            assert parsed_data['unit_id'] == 'UNIT001'\n            assert parsed_data['sensor_type'] == 'temperature'\n"
                  },
                  "endLine": 63,
                  "startLine": 61
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert parsed_data['sensor_type'] == 'temperature'\n"
                  },
                  "startLine": 63
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert parsed_data['unit_id'] == 'UNIT001'\n            assert parsed_data['sensor_type'] == 'temperature'\n            assert parsed_data['value'] == 25.5\n"
                  },
                  "endLine": 64,
                  "startLine": 62
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert parsed_data['value'] == 25.5\n"
                  },
                  "startLine": 64
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert parsed_data['sensor_type'] == 'temperature'\n            assert parsed_data['value'] == 25.5\n            \n"
                  },
                  "endLine": 65,
                  "startLine": 63
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert sensor is not None\n"
                  },
                  "startLine": 74
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            ).first()\n            assert sensor is not None\n            assert sensor.name == 'Temperature Sensor'\n"
                  },
                  "endLine": 75,
                  "startLine": 73
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert sensor.name == 'Temperature Sensor'\n"
                  },
                  "startLine": 75
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert sensor is not None\n            assert sensor.name == 'Temperature Sensor'\n            \n"
                  },
                  "endLine": 76,
                  "startLine": 74
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert reading is not None\n"
                  },
                  "startLine": 79
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            reading = SensorReading.query.filter_by(sensor_id=sensor.id).first()\n            assert reading is not None\n            assert reading.value == 25.5\n"
                  },
                  "endLine": 80,
                  "startLine": 78
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert reading.value == 25.5\n"
                  },
                  "startLine": 80
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert reading is not None\n            assert reading.value == 25.5\n            assert reading.quality == 'GOOD'\n"
                  },
                  "endLine": 81,
                  "startLine": 79
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert reading.quality == 'GOOD'\n"
                  },
                  "startLine": 81
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert reading.value == 25.5\n            assert reading.quality == 'GOOD'\n    \n"
                  },
                  "endLine": 82,
                  "startLine": 80
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert call_args[0][0] == 'UNIT001'\n"
                  },
                  "startLine": 103
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            call_args = mock_broadcast.call_args\n            assert call_args[0][0] == 'UNIT001'\n            assert call_args[0][1] == 'temperature'\n"
                  },
                  "endLine": 104,
                  "startLine": 102
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert call_args[0][1] == 'temperature'\n"
                  },
                  "startLine": 104
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert call_args[0][0] == 'UNIT001'\n            assert call_args[0][1] == 'temperature'\n    \n"
                  },
                  "endLine": 105,
                  "startLine": 103
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert len(alerts) == 1\n"
                  },
                  "startLine": 119
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            alerts = realtime_processor._check_alert_rules('UNIT001', 'temperature', high_temp_data)\n            assert len(alerts) == 1\n            assert alerts[0]['type'] == 'critical'\n"
                  },
                  "endLine": 120,
                  "startLine": 118
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert alerts[0]['type'] == 'critical'\n"
                  },
                  "startLine": 120
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert len(alerts) == 1\n            assert alerts[0]['type'] == 'critical'\n            assert 'High temperature alert' in alerts[0]['message']\n"
                  },
                  "endLine": 121,
                  "startLine": 119
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'High temperature alert' in alerts[0]['message']\n"
                  },
                  "startLine": 121
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert alerts[0]['type'] == 'critical'\n            assert 'High temperature alert' in alerts[0]['message']\n            \n"
                  },
                  "endLine": 122,
                  "startLine": 120
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert len(alerts) == 0\n"
                  },
                  "startLine": 131
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            alerts = realtime_processor._check_alert_rules('UNIT001', 'temperature', normal_temp_data)\n            assert len(alerts) == 0\n    \n"
                  },
                  "endLine": 132,
                  "startLine": 130
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'value' in sensor_data\n"
                  },
                  "startLine": 142
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'value' in sensor_data\n        assert 'quality' in sensor_data\n"
                  },
                  "endLine": 143,
                  "startLine": 141
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'quality' in sensor_data\n"
                  },
                  "startLine": 143
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'value' in sensor_data\n        assert 'quality' in sensor_data\n        assert 'timestamp' in sensor_data\n"
                  },
                  "endLine": 144,
                  "startLine": 142
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'timestamp' in sensor_data\n"
                  },
                  "startLine": 144
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'quality' in sensor_data\n        assert 'timestamp' in sensor_data\n        assert 'unit' in sensor_data\n"
                  },
                  "endLine": 145,
                  "startLine": 143
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'unit' in sensor_data\n"
                  },
                  "startLine": 145
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'timestamp' in sensor_data\n        assert 'unit' in sensor_data\n        assert sensor_data['unit'] == '\u00b0C'\n"
                  },
                  "endLine": 146,
                  "startLine": 144
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sensor_data['unit'] == '\u00b0C'\n"
                  },
                  "startLine": 146
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'unit' in sensor_data\n        assert sensor_data['unit'] == '\u00b0C'\n        assert isinstance(sensor_data['value'], (int, float))\n"
                  },
                  "endLine": 147,
                  "startLine": 145
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(sensor_data['value'], (int, float))\n"
                  },
                  "startLine": 147
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert sensor_data['unit'] == '\u00b0C'\n        assert isinstance(sensor_data['value'], (int, float))\n        \n"
                  },
                  "endLine": 148,
                  "startLine": 146
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert min_val <= sensor_data['value'] <= max_val\n"
                  },
                  "startLine": 152
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        min_val, max_val = config['variation_range']\n        assert min_val <= sensor_data['value'] <= max_val\n    \n"
                  },
                  "endLine": 153,
                  "startLine": 151
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'available' in status\n"
                  },
                  "startLine": 161
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'available' in status\n        assert 'connected' in status\n"
                  },
                  "endLine": 162,
                  "startLine": 160
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'connected' in status\n"
                  },
                  "startLine": 162
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'available' in status\n        assert 'connected' in status\n        assert 'server_url' in status\n"
                  },
                  "endLine": 163,
                  "startLine": 161
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'server_url' in status\n"
                  },
                  "startLine": 163
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'connected' in status\n        assert 'server_url' in status\n        assert 'subscribed_nodes' in status\n"
                  },
                  "endLine": 164,
                  "startLine": 162
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'subscribed_nodes' in status\n"
                  },
                  "startLine": 164
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'server_url' in status\n        assert 'subscribed_nodes' in status\n        assert 'node_mappings' in status\n"
                  },
                  "endLine": 165,
                  "startLine": 163
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'node_mappings' in status\n"
                  },
                  "startLine": 165
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'subscribed_nodes' in status\n        assert 'node_mappings' in status\n    \n"
                  },
                  "endLine": 166,
                  "startLine": 164
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(dev_app, 'mqtt_client')\n"
                  },
                  "startLine": 172
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert hasattr(dev_app, 'mqtt_client')\n        assert hasattr(dev_app, 'websocket_service')\n"
                  },
                  "endLine": 173,
                  "startLine": 171
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(dev_app, 'websocket_service')\n"
                  },
                  "startLine": 173
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(dev_app, 'mqtt_client')\n        assert hasattr(dev_app, 'websocket_service')\n        assert hasattr(dev_app, 'realtime_processor')\n"
                  },
                  "endLine": 174,
                  "startLine": 172
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(dev_app, 'realtime_processor')\n"
                  },
                  "startLine": 174
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(dev_app, 'websocket_service')\n        assert hasattr(dev_app, 'realtime_processor')\n        assert hasattr(dev_app, 'opcua_client')\n"
                  },
                  "endLine": 175,
                  "startLine": 173
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(dev_app, 'opcua_client')\n"
                  },
                  "startLine": 175
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(dev_app, 'realtime_processor')\n        assert hasattr(dev_app, 'opcua_client')\n        assert hasattr(dev_app, 'protocol_simulator')\n"
                  },
                  "endLine": 176,
                  "startLine": 174
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(dev_app, 'protocol_simulator')\n"
                  },
                  "startLine": 176
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(dev_app, 'opcua_client')\n        assert hasattr(dev_app, 'protocol_simulator')\n        \n"
                  },
                  "endLine": 177,
                  "startLine": 175
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'mqtt' in health_data\n"
                  },
                  "startLine": 183
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \n            assert 'mqtt' in health_data\n            assert 'websocket' in health_data\n"
                  },
                  "endLine": 184,
                  "startLine": 182
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'websocket' in health_data\n"
                  },
                  "startLine": 184
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'mqtt' in health_data\n            assert 'websocket' in health_data\n            assert 'realtime_processor' in health_data\n"
                  },
                  "endLine": 185,
                  "startLine": 183
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'realtime_processor' in health_data\n"
                  },
                  "startLine": 185
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'websocket' in health_data\n            assert 'realtime_processor' in health_data\n            assert 'opcua' in health_data\n"
                  },
                  "endLine": 186,
                  "startLine": 184
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'opcua' in health_data\n"
                  },
                  "startLine": 186
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'realtime_processor' in health_data\n            assert 'opcua' in health_data\n            assert 'protocol_simulator' in health_data\n"
                  },
                  "endLine": 187,
                  "startLine": 185
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'protocol_simulator' in health_data\n"
                  },
                  "startLine": 187
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'opcua' in health_data\n            assert 'protocol_simulator' in health_data\n"
                  },
                  "endLine": 187,
                  "startLine": 186
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert '*' not in ProductionConfig.WEBSOCKET_CORS_ORIGINS\n"
                  },
                  "startLine": 40
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Production config should not allow wildcard CORS\n        assert '*' not in ProductionConfig.WEBSOCKET_CORS_ORIGINS\n        \n"
                  },
                  "endLine": 41,
                  "startLine": 39
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(ProductionConfig.WEBSOCKET_CORS_ORIGINS) >= 1\n"
                  },
                  "startLine": 43
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Should have specific trusted domains\n        assert len(ProductionConfig.WEBSOCKET_CORS_ORIGINS) >= 1\n        assert all('http' in origin or 'https' in origin for origin in ProductionConfig.WEBSOCKET_CORS_ORIGINS)\n"
                  },
                  "endLine": 44,
                  "startLine": 42
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert all('http' in origin or 'https' in origin for origin in ProductionConfig.WEBSOCKET_CORS_ORIGINS)\n"
                  },
                  "startLine": 44
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert len(ProductionConfig.WEBSOCKET_CORS_ORIGINS) >= 1\n        assert all('http' in origin or 'https' in origin for origin in ProductionConfig.WEBSOCKET_CORS_ORIGINS)\n\n"
                  },
                  "endLine": 45,
                  "startLine": 43
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert ProductionConfig.MQTT_USE_TLS is True\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Production should enforce TLS for MQTT\n        assert ProductionConfig.MQTT_USE_TLS is True\n        \n"
                  },
                  "endLine": 52,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert ProductionConfig.OPCUA_SECURITY_POLICY != 'None'\n"
                  },
                  "startLine": 54
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Production should enforce OPC UA security\n        assert ProductionConfig.OPCUA_SECURITY_POLICY != 'None'\n        assert ProductionConfig.OPCUA_SECURITY_MODE != 'None'\n"
                  },
                  "endLine": 55,
                  "startLine": 53
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert ProductionConfig.OPCUA_SECURITY_MODE != 'None'\n"
                  },
                  "startLine": 55
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert ProductionConfig.OPCUA_SECURITY_POLICY != 'None'\n        assert ProductionConfig.OPCUA_SECURITY_MODE != 'None'\n        \n"
                  },
                  "endLine": 56,
                  "startLine": 54
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert '*' not in prod_origins\n"
                  },
                  "startLine": 66
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Production should be more restrictive\n        assert '*' not in prod_origins\n        assert len(prod_origins) <= len(dev_origins) or prod_origins != dev_origins\n"
                  },
                  "endLine": 67,
                  "startLine": 65
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(prod_origins) <= len(dev_origins) or prod_origins != dev_origins\n"
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_scada_security.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert '*' not in prod_origins\n        assert len(prod_origins) <= len(dev_origins) or prod_origins != dev_origins\n"
                  },
                  "endLine": 67,
                  "startLine": 66
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'secret123' not in sanitized\n"
                  },
                  "startLine": 15
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'secret123' not in sanitized\n        assert 'password=***' in sanitized\n"
                  },
                  "endLine": 16,
                  "startLine": 14
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'password=***' in sanitized\n"
                  },
                  "startLine": 16
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'secret123' not in sanitized\n        assert 'password=***' in sanitized\n    \n"
                  },
                  "endLine": 17,
                  "startLine": 15
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'abc123xyz' not in sanitized\n"
                  },
                  "startLine": 23
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'abc123xyz' not in sanitized\n        assert 'token=***' in sanitized\n"
                  },
                  "endLine": 24,
                  "startLine": 22
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'token=***' in sanitized\n"
                  },
                  "startLine": 24
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'abc123xyz' not in sanitized\n        assert 'token=***' in sanitized\n    \n"
                  },
                  "endLine": 25,
                  "startLine": 23
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'my_secret_key' not in sanitized\n"
                  },
                  "startLine": 31
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'my_secret_key' not in sanitized\n        assert 'api_key=***' in sanitized\n"
                  },
                  "endLine": 32,
                  "startLine": 30
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'api_key=***' in sanitized\n"
                  },
                  "startLine": 32
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'my_secret_key' not in sanitized\n        assert 'api_key=***' in sanitized\n    \n"
                  },
                  "endLine": 33,
                  "startLine": 31
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'my_secret_key' not in sanitized\n"
                  },
                  "startLine": 39
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'my_secret_key' not in sanitized\n        assert 'api_key=***' in sanitized\n"
                  },
                  "endLine": 40,
                  "startLine": 38
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'api_key=***' in sanitized\n"
                  },
                  "startLine": 40
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'my_secret_key' not in sanitized\n        assert 'api_key=***' in sanitized\n    \n"
                  },
                  "endLine": 41,
                  "startLine": 39
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'mysecretvalue' not in sanitized\n"
                  },
                  "startLine": 47
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'mysecretvalue' not in sanitized\n        assert 'secret=***' in sanitized\n"
                  },
                  "endLine": 48,
                  "startLine": 46
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'secret=***' in sanitized\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'mysecretvalue' not in sanitized\n        assert 'secret=***' in sanitized\n    \n"
                  },
                  "endLine": 49,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9' not in sanitized\n"
                  },
                  "startLine": 55
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9' not in sanitized\n        assert 'authorization=***' in sanitized\n"
                  },
                  "endLine": 56,
                  "startLine": 54
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'authorization=***' in sanitized\n"
                  },
                  "startLine": 56
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9' not in sanitized\n        assert 'authorization=***' in sanitized\n    \n"
                  },
                  "endLine": 57,
                  "startLine": 55
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9' not in sanitized\n"
                  },
                  "startLine": 63
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9' not in sanitized\n        assert 'jwt=***' in sanitized\n"
                  },
                  "endLine": 64,
                  "startLine": 62
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'jwt=***' in sanitized\n"
                  },
                  "startLine": 64
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9' not in sanitized\n        assert 'jwt=***' in sanitized\n    \n"
                  },
                  "endLine": 65,
                  "startLine": 63
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'abc123' not in sanitized\n"
                  },
                  "startLine": 71
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'abc123' not in sanitized\n        assert 'access_token=***' in sanitized\n"
                  },
                  "endLine": 72,
                  "startLine": 70
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'access_token=***' in sanitized\n"
                  },
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'abc123' not in sanitized\n        assert 'access_token=***' in sanitized\n    \n"
                  },
                  "endLine": 73,
                  "startLine": 71
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'xyz789' not in sanitized\n"
                  },
                  "startLine": 79
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'xyz789' not in sanitized\n        assert 'refresh_token=***' in sanitized\n"
                  },
                  "endLine": 80,
                  "startLine": 78
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'refresh_token=***' in sanitized\n"
                  },
                  "startLine": 80
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'xyz789' not in sanitized\n        assert 'refresh_token=***' in sanitized\n    \n"
                  },
                  "endLine": 81,
                  "startLine": 79
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'secret123' not in sanitized\n"
                  },
                  "startLine": 87
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'secret123' not in sanitized\n        assert 'abc' not in sanitized\n"
                  },
                  "endLine": 88,
                  "startLine": 86
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'abc' not in sanitized\n"
                  },
                  "startLine": 88
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'secret123' not in sanitized\n        assert 'abc' not in sanitized\n        assert 'password=***' in sanitized.lower()\n"
                  },
                  "endLine": 89,
                  "startLine": 87
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'password=***' in sanitized.lower()\n"
                  },
                  "startLine": 89
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'abc' not in sanitized\n        assert 'password=***' in sanitized.lower()\n        assert 'token=***' in sanitized.lower()\n"
                  },
                  "endLine": 90,
                  "startLine": 88
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'token=***' in sanitized.lower()\n"
                  },
                  "startLine": 90
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'password=***' in sanitized.lower()\n        assert 'token=***' in sanitized.lower()\n    \n"
                  },
                  "endLine": 91,
                  "startLine": 89
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'secret123' not in sanitized\n"
                  },
                  "startLine": 97
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'secret123' not in sanitized\n        assert 'abc123' not in sanitized\n"
                  },
                  "endLine": 98,
                  "startLine": 96
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'abc123' not in sanitized\n"
                  },
                  "startLine": 98
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'secret123' not in sanitized\n        assert 'abc123' not in sanitized\n        assert 'password=***' in sanitized or 'password\"***' in sanitized\n"
                  },
                  "endLine": 99,
                  "startLine": 97
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'password=***' in sanitized or 'password\"***' in sanitized\n"
                  },
                  "startLine": 99
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'abc123' not in sanitized\n        assert 'password=***' in sanitized or 'password\"***' in sanitized\n    \n"
                  },
                  "endLine": 100,
                  "startLine": 98
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized['username'] == 'admin'\n"
                  },
                  "startLine": 110
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert sanitized['username'] == 'admin'\n        assert sanitized['password'] == '[REDACTED]'\n"
                  },
                  "endLine": 111,
                  "startLine": 109
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized['password'] == '[REDACTED]'\n"
                  },
                  "startLine": 111
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert sanitized['username'] == 'admin'\n        assert sanitized['password'] == '[REDACTED]'\n        assert sanitized['email'] == 'admin@example.com'\n"
                  },
                  "endLine": 112,
                  "startLine": 110
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized['email'] == 'admin@example.com'\n"
                  },
                  "startLine": 112
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert sanitized['password'] == '[REDACTED]'\n        assert sanitized['email'] == 'admin@example.com'\n    \n"
                  },
                  "endLine": 113,
                  "startLine": 111
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized['user_id'] == 123\n"
                  },
                  "startLine": 123
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert sanitized['user_id'] == 123\n        assert sanitized['token'] == '[REDACTED]'\n"
                  },
                  "endLine": 124,
                  "startLine": 122
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized['token'] == '[REDACTED]'\n"
                  },
                  "startLine": 124
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert sanitized['user_id'] == 123\n        assert sanitized['token'] == '[REDACTED]'\n        assert sanitized['expires'] == 3600\n"
                  },
                  "endLine": 125,
                  "startLine": 123
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized['expires'] == 3600\n"
                  },
                  "startLine": 125
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert sanitized['token'] == '[REDACTED]'\n        assert sanitized['expires'] == 3600\n    \n"
                  },
                  "endLine": 126,
                  "startLine": 124
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized['api_key'] == '[REDACTED]'\n"
                  },
                  "startLine": 135
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert sanitized['api_key'] == '[REDACTED]'\n        assert sanitized['endpoint'] == '/api/v1/users'\n"
                  },
                  "endLine": 136,
                  "startLine": 134
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized['endpoint'] == '/api/v1/users'\n"
                  },
                  "startLine": 136
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert sanitized['api_key'] == '[REDACTED]'\n        assert sanitized['endpoint'] == '/api/v1/users'\n    \n"
                  },
                  "endLine": 137,
                  "startLine": 135
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized['user']['username'] == 'admin'\n"
                  },
                  "startLine": 151
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert sanitized['user']['username'] == 'admin'\n        assert sanitized['user']['password'] == '[REDACTED]'\n"
                  },
                  "endLine": 152,
                  "startLine": 150
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized['user']['password'] == '[REDACTED]'\n"
                  },
                  "startLine": 152
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert sanitized['user']['username'] == 'admin'\n        assert sanitized['user']['password'] == '[REDACTED]'\n        assert sanitized['user']['settings']['api_key'] == '[REDACTED]'\n"
                  },
                  "endLine": 153,
                  "startLine": 151
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized['user']['settings']['api_key'] == '[REDACTED]'\n"
                  },
                  "startLine": 153
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert sanitized['user']['password'] == '[REDACTED]'\n        assert sanitized['user']['settings']['api_key'] == '[REDACTED]'\n    \n"
                  },
                  "endLine": 154,
                  "startLine": 152
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized['users'][0]['username'] == 'user1'\n"
                  },
                  "startLine": 165
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert sanitized['users'][0]['username'] == 'user1'\n        assert sanitized['users'][0]['password'] == '[REDACTED]'\n"
                  },
                  "endLine": 166,
                  "startLine": 164
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized['users'][0]['password'] == '[REDACTED]'\n"
                  },
                  "startLine": 166
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert sanitized['users'][0]['username'] == 'user1'\n        assert sanitized['users'][0]['password'] == '[REDACTED]'\n        assert sanitized['users'][1]['username'] == 'user2'\n"
                  },
                  "endLine": 167,
                  "startLine": 165
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized['users'][1]['username'] == 'user2'\n"
                  },
                  "startLine": 167
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert sanitized['users'][0]['password'] == '[REDACTED]'\n        assert sanitized['users'][1]['username'] == 'user2'\n        assert sanitized['users'][1]['token'] == '[REDACTED]'\n"
                  },
                  "endLine": 168,
                  "startLine": 166
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized['users'][1]['token'] == '[REDACTED]'\n"
                  },
                  "startLine": 168
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert sanitized['users'][1]['username'] == 'user2'\n        assert sanitized['users'][1]['token'] == '[REDACTED]'\n    \n"
                  },
                  "endLine": 169,
                  "startLine": 167
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized['PASSWORD'] == '[REDACTED]'\n"
                  },
                  "startLine": 179
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert sanitized['PASSWORD'] == '[REDACTED]'\n        assert sanitized['Token'] == '[REDACTED]'\n"
                  },
                  "endLine": 180,
                  "startLine": 178
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized['Token'] == '[REDACTED]'\n"
                  },
                  "startLine": 180
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert sanitized['PASSWORD'] == '[REDACTED]'\n        assert sanitized['Token'] == '[REDACTED]'\n        assert sanitized['API_KEY'] == '[REDACTED]'\n"
                  },
                  "endLine": 181,
                  "startLine": 179
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized['API_KEY'] == '[REDACTED]'\n"
                  },
                  "startLine": 181
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert sanitized['Token'] == '[REDACTED]'\n        assert sanitized['API_KEY'] == '[REDACTED]'\n    \n"
                  },
                  "endLine": 182,
                  "startLine": 180
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert sanitized[key] == '[REDACTED]', f\"Key {key} was not redacted\"\n"
                  },
                  "startLine": 202
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        for key in data.keys():\n            assert sanitized[key] == '[REDACTED]', f\"Key {key} was not redacted\"\n    \n"
                  },
                  "endLine": 203,
                  "startLine": 201
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result == \"not a dict\"\n"
                  },
                  "startLine": 207
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = SecureLogger.sanitize_dict(\"not a dict\")\n        assert result == \"not a dict\"\n    \n"
                  },
                  "endLine": 208,
                  "startLine": 206
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized == \"12345\"\n"
                  },
                  "startLine": 213
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        sanitized = SecureLogger.sanitize_log_message(message)\n        assert sanitized == \"12345\"\n    \n"
                  },
                  "endLine": 214,
                  "startLine": 212
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized == \"\"\n"
                  },
                  "startLine": 219
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        sanitized = SecureLogger.sanitize_log_message(message)\n        assert sanitized == \"\"\n    \n"
                  },
                  "endLine": 220,
                  "startLine": 218
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized == message\n"
                  },
                  "startLine": 225
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        sanitized = SecureLogger.sanitize_log_message(message)\n        assert sanitized == message\n    \n"
                  },
                  "endLine": 226,
                  "startLine": 224
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(logger, SecureLoggerAdapter)\n"
                  },
                  "startLine": 230
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        logger = SecureLogger.get_secure_logger('test_logger')\n        assert isinstance(logger, SecureLoggerAdapter)\n    \n"
                  },
                  "endLine": 231,
                  "startLine": 229
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'secret' not in processed_msg\n"
                  },
                  "startLine": 242
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'secret' not in processed_msg\n        assert 'password=***' in processed_msg\n"
                  },
                  "endLine": 243,
                  "startLine": 241
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'password=***' in processed_msg\n"
                  },
                  "startLine": 243
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'secret' not in processed_msg\n        assert 'password=***' in processed_msg\n        assert processed_kwargs['extra']['token'] == '[REDACTED]'\n"
                  },
                  "endLine": 244,
                  "startLine": 242
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert processed_kwargs['extra']['token'] == '[REDACTED]'\n"
                  },
                  "startLine": 244
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'password=***' in processed_msg\n        assert processed_kwargs['extra']['token'] == '[REDACTED]'\n    \n"
                  },
                  "endLine": 245,
                  "startLine": 243
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'secret123' not in caplog.text\n"
                  },
                  "startLine": 256
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Check that the logged message was sanitized\n        assert 'secret123' not in caplog.text\n        assert 'password=***' in caplog.text\n"
                  },
                  "endLine": 257,
                  "startLine": 255
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'password=***' in caplog.text\n"
                  },
                  "startLine": 257
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'secret123' not in caplog.text\n        assert 'password=***' in caplog.text\n    \n"
                  },
                  "endLine": 258,
                  "startLine": 256
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'secret123' not in sanitized['message']\n"
                  },
                  "startLine": 267
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'secret123' not in sanitized['message']\n        assert 'password=***' in sanitized['message']\n"
                  },
                  "endLine": 268,
                  "startLine": 266
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'password=***' in sanitized['message']\n"
                  },
                  "startLine": 268
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'secret123' not in sanitized['message']\n        assert 'password=***' in sanitized['message']\n        assert sanitized['status'] == 'error'\n"
                  },
                  "endLine": 269,
                  "startLine": 267
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sanitized['status'] == 'error'\n"
                  },
                  "startLine": 269
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'password=***' in sanitized['message']\n        assert sanitized['status'] == 'error'\n    \n"
                  },
                  "endLine": 270,
                  "startLine": 268
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'secret123' not in sanitized\n"
                  },
                  "startLine": 276
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'secret123' not in sanitized\n        assert 'xyz789' not in sanitized\n"
                  },
                  "endLine": 277,
                  "startLine": 275
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'xyz789' not in sanitized\n"
                  },
                  "startLine": 277
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'secret123' not in sanitized\n        assert 'xyz789' not in sanitized\n        assert 'abc456' not in sanitized\n"
                  },
                  "endLine": 278,
                  "startLine": 276
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'abc456' not in sanitized\n"
                  },
                  "startLine": 278
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'xyz789' not in sanitized\n        assert 'abc456' not in sanitized\n        assert 'password=***' in sanitized\n"
                  },
                  "endLine": 279,
                  "startLine": 277
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'password=***' in sanitized\n"
                  },
                  "startLine": 279
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'abc456' not in sanitized\n        assert 'password=***' in sanitized\n        assert 'token=***' in sanitized\n"
                  },
                  "endLine": 280,
                  "startLine": 278
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'token=***' in sanitized\n"
                  },
                  "startLine": 280
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'password=***' in sanitized\n        assert 'token=***' in sanitized\n        assert 'api_key=***' in sanitized\n"
                  },
                  "endLine": 281,
                  "startLine": 279
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'api_key=***' in sanitized\n"
                  },
                  "startLine": 281
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'token=***' in sanitized\n        assert 'api_key=***' in sanitized\n\n"
                  },
                  "endLine": 282,
                  "startLine": 280
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'password=***' in sanitized or 'password@' not in sanitized\n"
                  },
                  "startLine": 293
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Password in connection string should be redacted\n        assert 'password=***' in sanitized or 'password@' not in sanitized\n    \n"
                  },
                  "endLine": 294,
                  "startLine": 292
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'User admin' in sanitized\n"
                  },
                  "startLine": 301
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Context preserved\n        assert 'User admin' in sanitized\n        assert '/api/v1/login' in sanitized\n"
                  },
                  "endLine": 302,
                  "startLine": 300
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert '/api/v1/login' in sanitized\n"
                  },
                  "startLine": 302
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'User admin' in sanitized\n        assert '/api/v1/login' in sanitized\n        \n"
                  },
                  "endLine": 303,
                  "startLine": 301
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'secret' not in sanitized\n"
                  },
                  "startLine": 305
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Sensitive data removed\n        assert 'secret' not in sanitized\n        assert 'password=***' in sanitized\n"
                  },
                  "endLine": 306,
                  "startLine": 304
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'password=***' in sanitized\n"
                  },
                  "startLine": 306
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logger.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'secret' not in sanitized\n        assert 'password=***' in sanitized\n"
                  },
                  "endLine": 306,
                  "startLine": 305
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert mock_logger.error.called\n"
                  },
                  "startLine": 27
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Verify logger was called\n                assert mock_logger.error.called\n                \n"
                  },
                  "endLine": 28,
                  "startLine": 26
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'Exception' in log_message\n"
                  },
                  "startLine": 34
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Should contain the error class name for debugging\n                assert 'Exception' in log_message\n    \n"
                  },
                  "endLine": 35,
                  "startLine": 33
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert mock_logger.warning.called\n"
                  },
                  "startLine": 47
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Verify logger was called\n                assert mock_logger.warning.called\n                \n"
                  },
                  "endLine": 48,
                  "startLine": 46
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'ValueError' in log_message\n"
                  },
                  "startLine": 54
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Should contain error class name\n                assert 'ValueError' in log_message\n                \n"
                  },
                  "endLine": 55,
                  "startLine": 53
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert call_args[1]['extra']['error_class'] == 'ValueError'\n"
                  },
                  "startLine": 58
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                if 'extra' in call_args[1]:\n                    assert call_args[1]['extra']['error_class'] == 'ValueError'\n    \n"
                  },
                  "endLine": 59,
                  "startLine": 57
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert mock_logger.error.called\n"
                  },
                  "startLine": 71
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Should be logged as error (internal_error)\n                assert mock_logger.error.called\n                \n"
                  },
                  "endLine": 72,
                  "startLine": 70
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert 'error_class' in call_args[1]['extra']\n"
                  },
                  "startLine": 76
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                if 'extra' in call_args[1]:\n                    assert 'error_class' in call_args[1]['extra']\n                    assert call_args[1]['extra']['error_class'] == 'Exception'\n"
                  },
                  "endLine": 77,
                  "startLine": 75
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert call_args[1]['extra']['error_class'] == 'Exception'\n"
                  },
                  "startLine": 77
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert 'error_class' in call_args[1]['extra']\n                    assert call_args[1]['extra']['error_class'] == 'Exception'\n    \n"
                  },
                  "endLine": 78,
                  "startLine": 76
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert mock_logger.error.called\n"
                  },
                  "startLine": 95
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Verify logger was called\n                assert mock_logger.error.called\n                \n"
                  },
                  "endLine": 96,
                  "startLine": 94
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'ThermaCoreException' in log_message\n"
                  },
                  "startLine": 102
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Should contain error class name\n                assert 'ThermaCoreException' in log_message\n                \n"
                  },
                  "endLine": 103,
                  "startLine": 101
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert call_args[1]['extra']['error_class'] == 'ThermaCoreException'\n"
                  },
                  "startLine": 106
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                if 'extra' in call_args[1]:\n                    assert call_args[1]['extra']['error_class'] == 'ThermaCoreException'\n    \n"
                  },
                  "endLine": 107,
                  "startLine": 105
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert mock_logger.error.called\n"
                  },
                  "startLine": 118
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                \n                assert mock_logger.error.called\n                \n"
                  },
                  "endLine": 119,
                  "startLine": 117
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert 'request_id' in extra\n"
                  },
                  "startLine": 124
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    extra = call_args[1]['extra']\n                    assert 'request_id' in extra\n                    assert 'error_type' in extra\n"
                  },
                  "endLine": 125,
                  "startLine": 123
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert 'error_type' in extra\n"
                  },
                  "startLine": 125
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert 'request_id' in extra\n                    assert 'error_type' in extra\n                    assert 'error_class' in extra\n"
                  },
                  "endLine": 126,
                  "startLine": 124
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert 'error_class' in extra\n"
                  },
                  "startLine": 126
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert 'error_type' in extra\n                    assert 'error_class' in extra\n                    assert 'context' in extra\n"
                  },
                  "endLine": 127,
                  "startLine": 125
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert 'context' in extra\n"
                  },
                  "startLine": 127
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert 'error_class' in extra\n                    assert 'context' in extra\n                    assert 'status_code' in extra\n"
                  },
                  "endLine": 128,
                  "startLine": 126
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert 'status_code' in extra\n"
                  },
                  "startLine": 128
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert 'context' in extra\n                    assert 'status_code' in extra\n                    assert extra['error_class'] == 'RuntimeError'\n"
                  },
                  "endLine": 129,
                  "startLine": 127
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert extra['error_class'] == 'RuntimeError'\n"
                  },
                  "startLine": 129
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert 'status_code' in extra\n                    assert extra['error_class'] == 'RuntimeError'\n                    assert extra['context'] == 'background_task'\n"
                  },
                  "endLine": 130,
                  "startLine": 128
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    assert extra['context'] == 'background_task'\n"
                  },
                  "startLine": 130
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                    assert extra['error_class'] == 'RuntimeError'\n                    assert extra['context'] == 'background_task'\n    \n"
                  },
                  "endLine": 131,
                  "startLine": 129
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'secret123' not in str(response_data)\n"
                  },
                  "startLine": 146
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # User-facing message should not contain sensitive data\n                assert 'secret123' not in str(response_data)\n                assert 'xyz789' not in str(response_data)\n"
                  },
                  "endLine": 147,
                  "startLine": 145
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'xyz789' not in str(response_data)\n"
                  },
                  "startLine": 147
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'secret123' not in str(response_data)\n                assert 'xyz789' not in str(response_data)\n                assert 'abc456' not in str(response_data)\n"
                  },
                  "endLine": 148,
                  "startLine": 146
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'abc456' not in str(response_data)\n"
                  },
                  "startLine": 148
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'xyz789' not in str(response_data)\n                assert 'abc456' not in str(response_data)\n    \n"
                  },
                  "endLine": 149,
                  "startLine": 147
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert mock_logger.warning.called\n"
                  },
                  "startLine": 160
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                \n                assert mock_logger.warning.called\n                \n"
                  },
                  "endLine": 161,
                  "startLine": 159
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'user_login' in log_message or call_args[1].get('extra', {}).get('context') == 'user_login'\n"
                  },
                  "startLine": 167
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_secure_logging_integration.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Context should be preserved\n                assert 'user_login' in log_message or call_args[1].get('extra', {}).get('context') == 'user_login'\n"
                  },
                  "endLine": 167,
                  "startLine": 166
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is False\n"
                  },
                  "startLine": 27
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_hardening_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = service.store_sensor_data(nan_data)\n        assert result is False\n        \n"
                  },
                  "endLine": 28,
                  "startLine": 26
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is False\n"
                  },
                  "startLine": 37
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_hardening_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = service.store_sensor_data(inf_data)\n        assert result is False\n        \n"
                  },
                  "endLine": 38,
                  "startLine": 36
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is False\n"
                  },
                  "startLine": 47
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_hardening_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = service.store_sensor_data(neg_inf_data)\n        assert result is False\n    \n"
                  },
                  "endLine": 48,
                  "startLine": 46
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Try, Except, Pass detected."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        except:\n"
                  },
                  "startLine": 68
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_hardening_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            service.store_sensor_data(data)\n        except:\n            pass  # Expected to fail due to DB context\n        \n"
                  },
                  "endLine": 70,
                  "startLine": 67
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B110",
          "ruleIndex": 1
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['unit_id'] == 'test_unit'\n"
                  },
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_hardening_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Check that dict was updated with sanitized values\n        assert data['unit_id'] == 'test_unit'\n        assert data['sensor_type'] == 'temperature'\n"
                  },
                  "endLine": 73,
                  "startLine": 71
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['sensor_type'] == 'temperature'\n"
                  },
                  "startLine": 73
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_hardening_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['unit_id'] == 'test_unit'\n        assert data['sensor_type'] == 'temperature'\n        assert data['unit_id'] != original_unit_id\n"
                  },
                  "endLine": 74,
                  "startLine": 72
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['unit_id'] != original_unit_id\n"
                  },
                  "startLine": 74
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_hardening_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['sensor_type'] == 'temperature'\n        assert data['unit_id'] != original_unit_id\n        assert data['sensor_type'] != original_sensor_type\n"
                  },
                  "endLine": 75,
                  "startLine": 73
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['sensor_type'] != original_sensor_type\n"
                  },
                  "startLine": 75
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_hardening_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['unit_id'] != original_unit_id\n        assert data['sensor_type'] != original_sensor_type\n    \n"
                  },
                  "endLine": 76,
                  "startLine": 74
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is False\n"
                  },
                  "startLine": 89
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_hardening_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = service.store_sensor_data(empty_unit_data)\n        assert result is False\n        \n"
                  },
                  "endLine": 90,
                  "startLine": 88
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is False\n"
                  },
                  "startLine": 99
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_hardening_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = service.store_sensor_data(empty_sensor_data)\n        assert result is False\n    \n"
                  },
                  "endLine": 100,
                  "startLine": 98
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'tls_version' in call_args.kwargs\n"
                  },
                  "startLine": 153
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_hardening_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Should use secure TLS version and cipher suites for production\n            assert 'tls_version' in call_args.kwargs\n            assert 'ciphers' in call_args.kwargs\n"
                  },
                  "endLine": 154,
                  "startLine": 152
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'ciphers' in call_args.kwargs\n"
                  },
                  "startLine": 154
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_hardening_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'tls_version' in call_args.kwargs\n            assert 'ciphers' in call_args.kwargs\n    \n"
                  },
                  "endLine": 155,
                  "startLine": 153
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is False\n"
                  },
                  "startLine": 215
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_hardening_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Should return False due to missing mapping first\n        assert result is False\n    \n"
                  },
                  "endLine": 216,
                  "startLine": 214
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert result is False\n"
                  },
                  "startLine": 233
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_hardening_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Should log error with exc_info=True for stack traces\n            assert result is False\n            mock_logger.error.assert_called()\n"
                  },
                  "endLine": 234,
                  "startLine": 232
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is False\n"
                  },
                  "startLine": 268
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_hardening_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = service.store_sensor_data(incomplete_data)\n        assert result is False\n        \n"
                  },
                  "endLine": 269,
                  "startLine": 267
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is False\n"
                  },
                  "startLine": 278
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_hardening_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = service.store_sensor_data(null_data)\n        assert result is False\n    \n"
                  },
                  "endLine": 279,
                  "startLine": 277
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is False\n"
                  },
                  "startLine": 292
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_hardening_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = service.store_sensor_data(invalid_timestamp_data)\n        assert result is False\n"
                  },
                  "endLine": 292,
                  "startLine": 291
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'Sensitive database connection details' not in str(response_data)\n"
                  },
                  "startLine": 30
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            response_data = response.get_json()\n            assert 'Sensitive database connection details' not in str(response_data)\n            assert response_data['error'] == 'Database operation failed. Please try again later.'\n"
                  },
                  "endLine": 31,
                  "startLine": 29
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert response_data['error'] == 'Database operation failed. Please try again later.'\n"
                  },
                  "startLine": 31
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'Sensitive database connection details' not in str(response_data)\n            assert response_data['error'] == 'Database operation failed. Please try again later.'\n            assert status_code == 500\n"
                  },
                  "endLine": 32,
                  "startLine": 30
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status_code == 500\n"
                  },
                  "startLine": 32
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert response_data['error'] == 'Database operation failed. Please try again later.'\n            assert status_code == 500\n    \n"
                  },
                  "endLine": 33,
                  "startLine": 31
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert 'secret123' not in str(response_data)\n"
                  },
                  "startLine": 44
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            response_data = response.get_json()\n            assert 'secret123' not in str(response_data)\n            assert response_data['error'] == 'Service is currently unavailable.'\n"
                  },
                  "endLine": 45,
                  "startLine": 43
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert response_data['error'] == 'Service is currently unavailable.'\n"
                  },
                  "startLine": 45
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert 'secret123' not in str(response_data)\n            assert response_data['error'] == 'Service is currently unavailable.'\n    \n"
                  },
                  "endLine": 46,
                  "startLine": 44
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert '/etc/opcua/private/keys' not in str(response_data)\n"
                  },
                  "startLine": 57
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            response_data = response.get_json()\n            assert '/etc/opcua/private/keys' not in str(response_data)\n            assert response_data['error'] == 'Service is currently unavailable.'\n"
                  },
                  "endLine": 58,
                  "startLine": 56
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert response_data['error'] == 'Service is currently unavailable.'\n"
                  },
                  "startLine": 58
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert '/etc/opcua/private/keys' not in str(response_data)\n            assert response_data['error'] == 'Service is currently unavailable.'\n    \n"
                  },
                  "endLine": 59,
                  "startLine": 57
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert response_data['error'] == 'Invalid request data provided.'\n"
                  },
                  "startLine": 70
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            response_data = response.get_json()\n            assert response_data['error'] == 'Invalid request data provided.'\n            assert status_code == 400\n"
                  },
                  "endLine": 71,
                  "startLine": 69
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status_code == 400\n"
                  },
                  "startLine": 71
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert response_data['error'] == 'Invalid request data provided.'\n            assert status_code == 400\n    \n"
                  },
                  "endLine": 72,
                  "startLine": 70
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert response_data['error'] == 'Service is currently unavailable.'\n"
                  },
                  "startLine": 79
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            response_data = response.get_json()\n            assert response_data['error'] == 'Service is currently unavailable.'\n            assert status_code == 500\n"
                  },
                  "endLine": 80,
                  "startLine": 78
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert status_code == 500\n"
                  },
                  "startLine": 80
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert response_data['error'] == 'Service is currently unavailable.'\n            assert status_code == 500\n    \n"
                  },
                  "endLine": 81,
                  "startLine": 79
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert result == mock_existing_sensor\n"
                  },
                  "startLine": 109
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Should return the sensor found in fallback query\n                assert result == mock_existing_sensor\n                # Should have rolled back the session\n"
                  },
                  "endLine": 110,
                  "startLine": 108
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert result is None\n"
                  },
                  "startLine": 124
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                \n                assert result is None\n    \n"
                  },
                  "endLine": 125,
                  "startLine": 123
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert ProductionConfig.MQTT_USE_TLS is True\n"
                  },
                  "startLine": 131
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Should enforce MQTT TLS\n        assert ProductionConfig.MQTT_USE_TLS is True\n        \n"
                  },
                  "endLine": 132,
                  "startLine": 130
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert '*' not in ProductionConfig.WEBSOCKET_CORS_ORIGINS\n"
                  },
                  "startLine": 134
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Should have restricted WebSocket CORS (not wildcard)\n        assert '*' not in ProductionConfig.WEBSOCKET_CORS_ORIGINS\n        \n"
                  },
                  "endLine": 135,
                  "startLine": 133
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert ProductionConfig.OPCUA_SECURITY_POLICY != 'None'\n"
                  },
                  "startLine": 137
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Should enforce OPC UA security\n        assert ProductionConfig.OPCUA_SECURITY_POLICY != 'None'\n        assert ProductionConfig.OPCUA_SECURITY_MODE != 'None'\n"
                  },
                  "endLine": 138,
                  "startLine": 136
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert ProductionConfig.OPCUA_SECURITY_MODE != 'None'\n"
                  },
                  "startLine": 138
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_security_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert ProductionConfig.OPCUA_SECURITY_POLICY != 'None'\n        assert ProductionConfig.OPCUA_SECURITY_MODE != 'None'\n"
                  },
                  "endLine": 138,
                  "startLine": 137
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert units_with_alerts >= 1  # At least our test unit\n"
                  },
                  "startLine": 47
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sql_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                \n                assert units_with_alerts >= 1  # At least our test unit\n                assert units_with_alarms >= 1  # At least our test unit\n"
                  },
                  "endLine": 48,
                  "startLine": 46
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert units_with_alarms >= 1  # At least our test unit\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sql_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert units_with_alerts >= 1  # At least our test unit\n                assert units_with_alarms >= 1  # At least our test unit\n                assert units_without_alerts >= 1  # At least our test unit\n"
                  },
                  "endLine": 49,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert units_without_alerts >= 1  # At least our test unit\n"
                  },
                  "startLine": 49
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sql_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert units_with_alarms >= 1  # At least our test unit\n                assert units_without_alerts >= 1  # At least our test unit\n                \n"
                  },
                  "endLine": 50,
                  "startLine": 48
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert result.total_units is not None\n"
                  },
                  "startLine": 68
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sql_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # These should execute without SQL errors\n            assert result.total_units is not None\n            assert result.units_with_alerts is not None\n"
                  },
                  "endLine": 69,
                  "startLine": 67
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert result.units_with_alerts is not None\n"
                  },
                  "startLine": 69
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sql_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert result.total_units is not None\n            assert result.units_with_alerts is not None\n            assert result.units_with_alarms is not None\n"
                  },
                  "endLine": 70,
                  "startLine": 68
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert result.units_with_alarms is not None\n"
                  },
                  "startLine": 70
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_sql_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert result.units_with_alerts is not None\n            assert result.units_with_alarms is not None\n"
                  },
                  "endLine": 70,
                  "startLine": 69
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result.tzinfo is not None\n"
                  },
                  "startLine": 24
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        result = utc_now()\n        assert result.tzinfo is not None\n        assert result.tzinfo == timezone.utc\n"
                  },
                  "endLine": 25,
                  "startLine": 23
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result.tzinfo == timezone.utc\n"
                  },
                  "startLine": 25
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result.tzinfo is not None\n        assert result.tzinfo == timezone.utc\n    \n"
                  },
                  "endLine": 26,
                  "startLine": 24
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert is_heartbeat_stale(None) is True\n"
                  },
                  "startLine": 29
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \"\"\"Test heartbeat staleness with no heartbeat.\"\"\"\n        assert is_heartbeat_stale(None) is True\n        assert is_heartbeat_stale(None, 60) is True\n"
                  },
                  "endLine": 30,
                  "startLine": 28
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert is_heartbeat_stale(None, 60) is True\n"
                  },
                  "startLine": 30
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert is_heartbeat_stale(None) is True\n        assert is_heartbeat_stale(None, 60) is True\n    \n"
                  },
                  "endLine": 31,
                  "startLine": 29
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert is_heartbeat_stale(recent, 300) is False\n"
                  },
                  "startLine": 36
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        recent = now - timedelta(seconds=30)\n        assert is_heartbeat_stale(recent, 300) is False\n        assert is_heartbeat_stale(recent, 60) is False\n"
                  },
                  "endLine": 37,
                  "startLine": 35
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert is_heartbeat_stale(recent, 60) is False\n"
                  },
                  "startLine": 37
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert is_heartbeat_stale(recent, 300) is False\n        assert is_heartbeat_stale(recent, 60) is False\n    \n"
                  },
                  "endLine": 38,
                  "startLine": 36
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert is_heartbeat_stale(old, 300) is True\n"
                  },
                  "startLine": 43
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        old = now - timedelta(seconds=400)\n        assert is_heartbeat_stale(old, 300) is True\n        assert is_heartbeat_stale(old, 500) is False\n"
                  },
                  "endLine": 44,
                  "startLine": 42
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert is_heartbeat_stale(old, 500) is False\n"
                  },
                  "startLine": 44
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert is_heartbeat_stale(old, 300) is True\n        assert is_heartbeat_stale(old, 500) is False\n    \n"
                  },
                  "endLine": 45,
                  "startLine": 43
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert get_time_since_last_heartbeat(None) is None\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \"\"\"Test time since heartbeat with None.\"\"\"\n        assert get_time_since_last_heartbeat(None) is None\n    \n"
                  },
                  "endLine": 49,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 123.0 <= result <= 124.0\n"
                  },
                  "startLine": 56
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Allow some tolerance for execution time\n        assert 123.0 <= result <= 124.0\n    \n"
                  },
                  "endLine": 57,
                  "startLine": 55
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert is_recovering(1, \"reconnecting\") is True\n"
                  },
                  "startLine": 60
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \"\"\"Test recovery state detection - true cases.\"\"\"\n        assert is_recovering(1, \"reconnecting\") is True\n        assert is_recovering(2, \"initializing\") is True\n"
                  },
                  "endLine": 61,
                  "startLine": 59
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert is_recovering(2, \"initializing\") is True\n"
                  },
                  "startLine": 61
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert is_recovering(1, \"reconnecting\") is True\n        assert is_recovering(2, \"initializing\") is True\n        assert is_recovering(5, \"reconnecting\") is True\n"
                  },
                  "endLine": 62,
                  "startLine": 60
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert is_recovering(5, \"reconnecting\") is True\n"
                  },
                  "startLine": 62
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert is_recovering(2, \"initializing\") is True\n        assert is_recovering(5, \"reconnecting\") is True\n    \n"
                  },
                  "endLine": 63,
                  "startLine": 61
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert is_recovering(0, \"reconnecting\") is False\n"
                  },
                  "startLine": 66
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \"\"\"Test recovery state detection - false cases.\"\"\"\n        assert is_recovering(0, \"reconnecting\") is False\n        assert is_recovering(1, \"ready\") is False\n"
                  },
                  "endLine": 67,
                  "startLine": 65
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert is_recovering(1, \"ready\") is False\n"
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert is_recovering(0, \"reconnecting\") is False\n        assert is_recovering(1, \"ready\") is False\n        assert is_recovering(0, \"ready\") is False\n"
                  },
                  "endLine": 68,
                  "startLine": 66
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert is_recovering(0, \"ready\") is False\n"
                  },
                  "startLine": 68
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert is_recovering(1, \"ready\") is False\n        assert is_recovering(0, \"ready\") is False\n        assert is_recovering(1, \"error\") is False\n"
                  },
                  "endLine": 69,
                  "startLine": 67
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert is_recovering(1, \"error\") is False\n"
                  },
                  "startLine": 69
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert is_recovering(0, \"ready\") is False\n        assert is_recovering(1, \"error\") is False\n    \n"
                  },
                  "endLine": 70,
                  "startLine": 68
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert score == 0.0\n"
                  },
                  "startLine": 78
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert score == 0.0\n    \n"
                  },
                  "endLine": 79,
                  "startLine": 77
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert score == 30.0\n"
                  },
                  "startLine": 87
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert score == 30.0\n    \n"
                  },
                  "endLine": 88,
                  "startLine": 86
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert score == 100.0\n"
                  },
                  "startLine": 99
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # 30 (available) + 40 (connected) + 20 (ready) + 10 (fresh heartbeat)\n        assert score == 100.0\n    \n"
                  },
                  "endLine": 100,
                  "startLine": 98
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert score == 81.0\n"
                  },
                  "startLine": 111
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # 100 (perfect) - 15 (error) - 4 (2 retries * 2) = 81\n        assert score == 81.0\n    \n"
                  },
                  "endLine": 112,
                  "startLine": 110
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert level == AvailabilityLevel.UNAVAILABLE\n"
                  },
                  "startLine": 120
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert level == AvailabilityLevel.UNAVAILABLE\n    \n"
                  },
                  "endLine": 121,
                  "startLine": 119
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert level == AvailabilityLevel.FULLY_AVAILABLE\n"
                  },
                  "startLine": 131
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert level == AvailabilityLevel.FULLY_AVAILABLE\n    \n"
                  },
                  "endLine": 132,
                  "startLine": 130
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert level == AvailabilityLevel.DEGRADED\n"
                  },
                  "startLine": 142
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert level == AvailabilityLevel.DEGRADED\n    \n"
                  },
                  "endLine": 143,
                  "startLine": 141
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert level == AvailabilityLevel.DEGRADED\n"
                  },
                  "startLine": 151
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert level == AvailabilityLevel.DEGRADED\n    \n"
                  },
                  "endLine": 152,
                  "startLine": 150
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert error[\"code\"] == \"TEST_ERROR\"\n"
                  },
                  "startLine": 157
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert error[\"code\"] == \"TEST_ERROR\"\n        assert error[\"message\"] == \"Test message\"\n"
                  },
                  "endLine": 158,
                  "startLine": 156
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert error[\"message\"] == \"Test message\"\n"
                  },
                  "startLine": 158
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert error[\"code\"] == \"TEST_ERROR\"\n        assert error[\"message\"] == \"Test message\"\n        assert error[\"context\"][\"key\"] == \"value\"\n"
                  },
                  "endLine": 159,
                  "startLine": 157
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert error[\"context\"][\"key\"] == \"value\"\n"
                  },
                  "startLine": 159
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert error[\"message\"] == \"Test message\"\n        assert error[\"context\"][\"key\"] == \"value\"\n        assert \"timestamp\" in error\n"
                  },
                  "endLine": 160,
                  "startLine": 158
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"timestamp\" in error\n"
                  },
                  "startLine": 160
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert error[\"context\"][\"key\"] == \"value\"\n        assert \"timestamp\" in error\n        # Verify timestamp is ISO format\n"
                  },
                  "endLine": 161,
                  "startLine": 159
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert error[\"code\"] == \"MINIMAL_ERROR\"\n"
                  },
                  "startLine": 168
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert error[\"code\"] == \"MINIMAL_ERROR\"\n        assert error[\"message\"] is None\n"
                  },
                  "endLine": 169,
                  "startLine": 167
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert error[\"message\"] is None\n"
                  },
                  "startLine": 169
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert error[\"code\"] == \"MINIMAL_ERROR\"\n        assert error[\"message\"] is None\n        assert error[\"context\"] == {}\n"
                  },
                  "endLine": 170,
                  "startLine": 168
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert error[\"context\"] == {}\n"
                  },
                  "startLine": 170
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert error[\"message\"] is None\n        assert error[\"context\"] == {}\n        assert \"timestamp\" in error\n"
                  },
                  "endLine": 171,
                  "startLine": 169
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert \"timestamp\" in error\n"
                  },
                  "startLine": 171
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_status_utils.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert error[\"context\"] == {}\n        assert \"timestamp\" in error\n\n"
                  },
                  "endLine": 172,
                  "startLine": 170
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 201\n"
                  },
                  "startLine": 43
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 201\n        data = json.loads(response.data)\n"
                  },
                  "endLine": 44,
                  "startLine": 42
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['username'] == 'testuser'\n"
                  },
                  "startLine": 47
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Verify all fields are set in response\n        assert data['username'] == 'testuser'\n        assert data['email'] == 'testuser@test.com'\n"
                  },
                  "endLine": 48,
                  "startLine": 46
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['email'] == 'testuser@test.com'\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['username'] == 'testuser'\n        assert data['email'] == 'testuser@test.com'\n        assert data['first_name'] == 'Test'\n"
                  },
                  "endLine": 49,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['first_name'] == 'Test'\n"
                  },
                  "startLine": 49
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['email'] == 'testuser@test.com'\n        assert data['first_name'] == 'Test'\n        assert data['last_name'] == 'User'\n"
                  },
                  "endLine": 50,
                  "startLine": 48
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['last_name'] == 'User'\n"
                  },
                  "startLine": 50
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['first_name'] == 'Test'\n        assert data['last_name'] == 'User'\n        assert 'created_at' in data\n"
                  },
                  "endLine": 51,
                  "startLine": 49
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'created_at' in data\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['last_name'] == 'User'\n        assert 'created_at' in data\n        assert 'updated_at' in data\n"
                  },
                  "endLine": 52,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'updated_at' in data\n"
                  },
                  "startLine": 52
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'created_at' in data\n        assert 'updated_at' in data\n        \n"
                  },
                  "endLine": 53,
                  "startLine": 51
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert created_user is not None\n"
                  },
                  "startLine": 56
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        created_user = User.query.filter_by(username='testuser').first()\n        assert created_user is not None\n        assert created_user.first_name == 'Test'\n"
                  },
                  "endLine": 57,
                  "startLine": 55
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert created_user.first_name == 'Test'\n"
                  },
                  "startLine": 57
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert created_user is not None\n        assert created_user.first_name == 'Test'\n        assert created_user.last_name == 'User'\n"
                  },
                  "endLine": 58,
                  "startLine": 56
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert created_user.last_name == 'User'\n"
                  },
                  "startLine": 58
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert created_user.first_name == 'Test'\n        assert created_user.last_name == 'User'\n        assert created_user.created_at is not None\n"
                  },
                  "endLine": 59,
                  "startLine": 57
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert created_user.created_at is not None\n"
                  },
                  "startLine": 59
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert created_user.last_name == 'User'\n        assert created_user.created_at is not None\n        assert created_user.updated_at is not None\n"
                  },
                  "endLine": 60,
                  "startLine": 58
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert created_user.updated_at is not None\n"
                  },
                  "startLine": 60
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert created_user.created_at is not None\n        assert created_user.updated_at is not None\n        # Both timestamps should be very close (within 1 second) initially\n"
                  },
                  "endLine": 61,
                  "startLine": 59
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert time_diff < 1.0, f\"Created and updated timestamps should be close, diff: {time_diff} seconds\"\n"
                  },
                  "startLine": 63
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        time_diff = abs((created_user.updated_at - created_user.created_at).total_seconds())\n        assert time_diff < 1.0, f\"Created and updated timestamps should be close, diff: {time_diff} seconds\"\n    \n"
                  },
                  "endLine": 64,
                  "startLine": 62
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 201\n"
                  },
                  "startLine": 94
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 201\n        data = json.loads(response.data)\n"
                  },
                  "endLine": 95,
                  "startLine": 93
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['first_name'] is None\n"
                  },
                  "startLine": 98
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Optional fields should be None in response\n        assert data['first_name'] is None\n        assert data['last_name'] is None\n"
                  },
                  "endLine": 99,
                  "startLine": 97
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['last_name'] is None\n"
                  },
                  "startLine": 99
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['first_name'] is None\n        assert data['last_name'] is None\n        assert 'created_at' in data\n"
                  },
                  "endLine": 100,
                  "startLine": 98
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'created_at' in data\n"
                  },
                  "startLine": 100
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['last_name'] is None\n        assert 'created_at' in data\n        assert 'updated_at' in data\n"
                  },
                  "endLine": 101,
                  "startLine": 99
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'updated_at' in data\n"
                  },
                  "startLine": 101
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'created_at' in data\n        assert 'updated_at' in data\n        \n"
                  },
                  "endLine": 102,
                  "startLine": 100
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert created_user is not None\n"
                  },
                  "startLine": 105
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        created_user = User.query.filter_by(username='testuser2').first()\n        assert created_user is not None\n        assert created_user.first_name is None\n"
                  },
                  "endLine": 106,
                  "startLine": 104
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert created_user.first_name is None\n"
                  },
                  "startLine": 106
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert created_user is not None\n        assert created_user.first_name is None\n        assert created_user.last_name is None\n"
                  },
                  "endLine": 107,
                  "startLine": 105
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert created_user.last_name is None\n"
                  },
                  "startLine": 107
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert created_user.first_name is None\n        assert created_user.last_name is None\n        assert created_user.created_at is not None\n"
                  },
                  "endLine": 108,
                  "startLine": 106
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert created_user.created_at is not None\n"
                  },
                  "startLine": 108
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert created_user.last_name is None\n        assert created_user.created_at is not None\n        assert created_user.updated_at is not None\n"
                  },
                  "endLine": 109,
                  "startLine": 107
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert created_user.updated_at is not None\n"
                  },
                  "startLine": 109
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert created_user.created_at is not None\n        assert created_user.updated_at is not None\n\n"
                  },
                  "endLine": 110,
                  "startLine": 108
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert test_unit is not None\n"
                  },
                  "startLine": 174
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        test_unit = Unit.query.filter_by(id='TEST001').first()\n        assert test_unit is not None\n        \n"
                  },
                  "endLine": 175,
                  "startLine": 173
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert user_updated_at_column.onupdate is None, \"User.updated_at should not have onupdate parameter\"\n"
                  },
                  "startLine": 207
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        user_updated_at_column = User.__table__.columns['updated_at']\n        assert user_updated_at_column.onupdate is None, \"User.updated_at should not have onupdate parameter\"\n        \n"
                  },
                  "endLine": 208,
                  "startLine": 206
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert unit_updated_at_column.onupdate is None, \"Unit.updated_at should not have onupdate parameter\"\n"
                  },
                  "startLine": 211
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        unit_updated_at_column = Unit.__table__.columns['updated_at']\n        assert unit_updated_at_column.onupdate is None, \"Unit.updated_at should not have onupdate parameter\"\n        \n"
                  },
                  "endLine": 212,
                  "startLine": 210
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sensor_updated_at_column.onupdate is None, \"Sensor.updated_at should not have onupdate parameter\"\n"
                  },
                  "startLine": 215
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_timestamp_validation.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        sensor_updated_at_column = Sensor.__table__.columns['updated_at']\n        assert sensor_updated_at_column.onupdate is None, \"Sensor.updated_at should not have onupdate parameter\"\n"
                  },
                  "endLine": 215,
                  "startLine": 214
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Possible hardcoded password: 'admin123'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    def get_auth_token(self, client, username='admin', password='admin123'):\n"
                  },
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \n    def get_auth_token(self, client, username='admin', password='admin123'):\n        \"\"\"Helper method to get auth token.\"\"\"\n        response = client.post('/api/v1/auth/login',\n            json={'username': username, 'password': password},\n            headers={'Content-Type': 'application/json'}\n        )\n        \n        if response.status_code == 200:\n            data = unwrap_response(response)\n            return data['access_token']\n        return None\n    \n"
                  },
                  "endLine": 37,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B107",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 200\n"
                  },
                  "startLine": 46
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 200\n        data = unwrap_response(response)\n"
                  },
                  "endLine": 47,
                  "startLine": 45
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'data' in data\n"
                  },
                  "startLine": 49
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert 'data' in data\n        assert 'page' in data\n"
                  },
                  "endLine": 50,
                  "startLine": 48
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'page' in data\n"
                  },
                  "startLine": 50
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'data' in data\n        assert 'page' in data\n        assert 'total' in data\n"
                  },
                  "endLine": 51,
                  "startLine": 49
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'total' in data\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'page' in data\n        assert 'total' in data\n        assert len(data['data']) >= 1  # Should have test unit\n"
                  },
                  "endLine": 52,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(data['data']) >= 1  # Should have test unit\n"
                  },
                  "startLine": 52
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'total' in data\n        assert len(data['data']) >= 1  # Should have test unit\n    \n"
                  },
                  "endLine": 53,
                  "startLine": 51
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 200\n"
                  },
                  "startLine": 63
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 200\n        data = unwrap_response(response)\n"
                  },
                  "endLine": 64,
                  "startLine": 62
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert unit['status'] == 'online'\n"
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        for unit in data['data']:\n            assert unit['status'] == 'online'\n    \n"
                  },
                  "endLine": 68,
                  "startLine": 66
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 200\n"
                  },
                  "startLine": 77
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 200\n        data = unwrap_response(response)\n"
                  },
                  "endLine": 78,
                  "startLine": 76
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['page'] == 1\n"
                  },
                  "startLine": 80
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert data['page'] == 1\n        assert data['per_page'] == 10\n"
                  },
                  "endLine": 81,
                  "startLine": 79
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['per_page'] == 10\n"
                  },
                  "startLine": 81
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['page'] == 1\n        assert data['per_page'] == 10\n    \n"
                  },
                  "endLine": 82,
                  "startLine": 80
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 200\n"
                  },
                  "startLine": 91
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 200\n        data = unwrap_response(response)\n"
                  },
                  "endLine": 92,
                  "startLine": 90
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['id'] == 'TEST001'\n"
                  },
                  "startLine": 94
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert data['id'] == 'TEST001'\n        assert data['name'] == 'Test Unit 001'\n"
                  },
                  "endLine": 95,
                  "startLine": 93
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['name'] == 'Test Unit 001'\n"
                  },
                  "startLine": 95
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['id'] == 'TEST001'\n        assert data['name'] == 'Test Unit 001'\n    \n"
                  },
                  "endLine": 96,
                  "startLine": 94
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 404\n"
                  },
                  "startLine": 105
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 404\n    \n"
                  },
                  "endLine": 106,
                  "startLine": 104
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 201\n"
                  },
                  "startLine": 129
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 201\n        data = unwrap_response(response)\n"
                  },
                  "endLine": 130,
                  "startLine": 128
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['id'] == 'TEST002'\n"
                  },
                  "startLine": 132
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert data['id'] == 'TEST002'\n        assert data['name'] == 'Test Unit 002'\n"
                  },
                  "endLine": 133,
                  "startLine": 131
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['name'] == 'Test Unit 002'\n"
                  },
                  "startLine": 133
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['id'] == 'TEST002'\n        assert data['name'] == 'Test Unit 002'\n    \n"
                  },
                  "endLine": 134,
                  "startLine": 132
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 409\n"
                  },
                  "startLine": 154
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 409\n        data = unwrap_response(response)\n"
                  },
                  "endLine": 155,
                  "startLine": 153
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'already exists' in data['error']\n"
                  },
                  "startLine": 156
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        data = unwrap_response(response)\n        assert 'already exists' in data['error']\n    \n"
                  },
                  "endLine": 157,
                  "startLine": 155
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 400\n"
                  },
                  "startLine": 177
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 400\n        data = unwrap_response(response)\n"
                  },
                  "endLine": 178,
                  "startLine": 176
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'Validation error' in data['error']\n"
                  },
                  "startLine": 179
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        data = unwrap_response(response)\n        assert 'Validation error' in data['error']\n    \n"
                  },
                  "endLine": 180,
                  "startLine": 178
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 200\n"
                  },
                  "startLine": 200
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 200\n        data = unwrap_response(response)\n"
                  },
                  "endLine": 201,
                  "startLine": 199
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['name'] == 'Updated Test Unit 001'\n"
                  },
                  "startLine": 203
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert data['name'] == 'Updated Test Unit 001'\n        assert data['location'] == 'Updated Test Site'\n"
                  },
                  "endLine": 204,
                  "startLine": 202
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['location'] == 'Updated Test Site'\n"
                  },
                  "startLine": 204
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['name'] == 'Updated Test Unit 001'\n        assert data['location'] == 'Updated Test Site'\n        assert data['status'] == 'maintenance'\n"
                  },
                  "endLine": 205,
                  "startLine": 203
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['status'] == 'maintenance'\n"
                  },
                  "startLine": 205
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['location'] == 'Updated Test Site'\n        assert data['status'] == 'maintenance'\n        assert data['health_status'] == 'warning'\n"
                  },
                  "endLine": 206,
                  "startLine": 204
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['health_status'] == 'warning'\n"
                  },
                  "startLine": 206
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['status'] == 'maintenance'\n        assert data['health_status'] == 'warning'\n    \n"
                  },
                  "endLine": 207,
                  "startLine": 205
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 404\n"
                  },
                  "startLine": 222
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 404\n    \n"
                  },
                  "endLine": 223,
                  "startLine": 221
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 204\n"
                  },
                  "startLine": 242
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 204\n        \n"
                  },
                  "endLine": 243,
                  "startLine": 241
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert verify_response.status_code == 404\n"
                  },
                  "startLine": 248
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n        assert verify_response.status_code == 404\n    \n"
                  },
                  "endLine": 249,
                  "startLine": 247
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 404\n"
                  },
                  "startLine": 258
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 404\n    \n"
                  },
                  "endLine": 259,
                  "startLine": 257
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 200\n"
                  },
                  "startLine": 268
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 200\n        data = unwrap_response(response)\n"
                  },
                  "endLine": 269,
                  "startLine": 267
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert field in data\n"
                  },
                  "startLine": 279
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        for field in required_fields:\n            assert field in data\n            assert isinstance(data[field], int)\n"
                  },
                  "endLine": 280,
                  "startLine": 278
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert isinstance(data[field], int)\n"
                  },
                  "startLine": 280
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert field in data\n            assert isinstance(data[field], int)\n    \n"
                  },
                  "endLine": 281,
                  "startLine": 279
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 200\n"
                  },
                  "startLine": 301
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 200\n        data = unwrap_response(response)\n"
                  },
                  "endLine": 302,
                  "startLine": 300
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['status'] == 'error'  # API returns lowercase\n"
                  },
                  "startLine": 304
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert data['status'] == 'error'  # API returns lowercase\n        assert data['health_status'] == 'critical'\n"
                  },
                  "endLine": 305,
                  "startLine": 303
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['health_status'] == 'critical'\n"
                  },
                  "startLine": 305
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['status'] == 'error'  # API returns lowercase\n        assert data['health_status'] == 'critical'\n        assert data['has_alert'] is True\n"
                  },
                  "endLine": 306,
                  "startLine": 304
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['has_alert'] is True\n"
                  },
                  "startLine": 306
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['health_status'] == 'critical'\n        assert data['has_alert'] is True\n        assert data['has_alarm'] is True\n"
                  },
                  "endLine": 307,
                  "startLine": 305
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['has_alarm'] is True\n"
                  },
                  "startLine": 307
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['has_alert'] is True\n        assert data['has_alarm'] is True\n\n"
                  },
                  "endLine": 308,
                  "startLine": 306
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Possible hardcoded password: 'admin123'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    def get_auth_token(self, client, username='admin', password='admin123'):\n"
                  },
                  "startLine": 313
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \n    def get_auth_token(self, client, username='admin', password='admin123'):\n        \"\"\"Helper method to get auth token.\"\"\"\n        response = client.post('/api/v1/auth/login',\n            json={'username': username, 'password': password},\n            headers={'Content-Type': 'application/json'}\n        )\n        \n        if response.status_code == 200:\n            data = unwrap_response(response)\n            return data['access_token']\n        return None\n    \n"
                  },
                  "endLine": 324,
                  "startLine": 312
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B107",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 200\n"
                  },
                  "startLine": 333
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 200\n        data = unwrap_response(response)\n"
                  },
                  "endLine": 334,
                  "startLine": 332
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(data, list)\n"
                  },
                  "startLine": 336
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert isinstance(data, list)\n        assert len(data) >= 1  # Should have test sensor\n"
                  },
                  "endLine": 337,
                  "startLine": 335
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(data) >= 1  # Should have test sensor\n"
                  },
                  "startLine": 337
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert isinstance(data, list)\n        assert len(data) >= 1  # Should have test sensor\n    \n"
                  },
                  "endLine": 338,
                  "startLine": 336
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 201\n"
                  },
                  "startLine": 359
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 201\n        data = unwrap_response(response)\n"
                  },
                  "endLine": 360,
                  "startLine": 358
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['name'] == 'Test Pressure Sensor'\n"
                  },
                  "startLine": 362
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert data['name'] == 'Test Pressure Sensor'\n        assert data['sensor_type'] == 'pressure'\n"
                  },
                  "endLine": 363,
                  "startLine": 361
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['sensor_type'] == 'pressure'\n"
                  },
                  "startLine": 363
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['name'] == 'Test Pressure Sensor'\n        assert data['sensor_type'] == 'pressure'\n        assert data['unit_id'] == 'TEST001'\n"
                  },
                  "endLine": 364,
                  "startLine": 362
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert data['unit_id'] == 'TEST001'\n"
                  },
                  "startLine": 364
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert data['sensor_type'] == 'pressure'\n        assert data['unit_id'] == 'TEST001'\n    \n"
                  },
                  "endLine": 365,
                  "startLine": 363
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 200\n"
                  },
                  "startLine": 374
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 200\n        data = unwrap_response(response)\n"
                  },
                  "endLine": 375,
                  "startLine": 373
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(data, list)\n"
                  },
                  "startLine": 377
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert isinstance(data, list)\n\n"
                  },
                  "endLine": 378,
                  "startLine": 376
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Possible hardcoded password: 'admin123'"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    def get_auth_token(self, client, username='admin', password='admin123'):\n"
                  },
                  "startLine": 383
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \n    def get_auth_token(self, client, username='admin', password='admin123'):\n        \"\"\"Helper method to get auth token.\"\"\"\n        response = client.post('/api/v1/auth/login',\n            json={'username': username, 'password': password},\n            headers={'Content-Type': 'application/json'}\n        )\n        \n        if response.status_code == 200:\n            data = unwrap_response(response)\n            return data['access_token']\n        return None\n    \n"
                  },
                  "endLine": 394,
                  "startLine": 382
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "LOW"
          },
          "ruleId": "B107",
          "ruleIndex": 4
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 200\n"
                  },
                  "startLine": 403
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 200\n    \n"
                  },
                  "endLine": 404,
                  "startLine": 402
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 403\n"
                  },
                  "startLine": 424
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 403\n    \n"
                  },
                  "endLine": 425,
                  "startLine": 423
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert response.status_code == 403\n"
                  },
                  "startLine": 434
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_units.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert response.status_code == 403\n"
                  },
                  "endLine": 434,
                  "startLine": 433
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert service.socketio is None\n"
                  },
                  "startLine": 15
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        service = WebSocketService()\n        assert service.socketio is None\n        assert service._app is None\n"
                  },
                  "endLine": 16,
                  "startLine": 14
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert service._app is None\n"
                  },
                  "startLine": 16
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert service.socketio is None\n        assert service._app is None\n        assert service._connected_clients == {}\n"
                  },
                  "endLine": 17,
                  "startLine": 15
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert service._connected_clients == {}\n"
                  },
                  "startLine": 17
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert service._app is None\n        assert service._connected_clients == {}\n    \n"
                  },
                  "endLine": 18,
                  "startLine": 16
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert service._app == mock_app\n"
                  },
                  "startLine": 31
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert service._app == mock_app\n        mock_socketio.assert_called_once_with(\n"
                  },
                  "endLine": 32,
                  "startLine": 30
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert status['connected_clients'] == 2\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        status = service.get_status()\n        assert status['connected_clients'] == 2\n        assert len(status['clients']) == 2\n"
                  },
                  "endLine": 52,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(status['clients']) == 2\n"
                  },
                  "startLine": 52
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert status['connected_clients'] == 2\n        assert len(status['clients']) == 2\n        assert status['service_status'] == 'inactive'\n"
                  },
                  "endLine": 53,
                  "startLine": 51
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert status['service_status'] == 'inactive'\n"
                  },
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert len(status['clients']) == 2\n        assert status['service_status'] == 'inactive'\n        \n"
                  },
                  "endLine": 54,
                  "startLine": 52
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert status['service_status'] == 'active'\n"
                  },
                  "startLine": 58
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        status = service.get_status()\n        assert status['service_status'] == 'active'\n    \n"
                  },
                  "endLine": 59,
                  "startLine": 57
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert clients == test_clients\n"
                  },
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Should return a copy\n        assert clients == test_clients\n        assert clients is not test_clients\n"
                  },
                  "endLine": 73,
                  "startLine": 71
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert clients is not test_clients\n"
                  },
                  "startLine": 73
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert clients == test_clients\n        assert clients is not test_clients\n    \n"
                  },
                  "endLine": 74,
                  "startLine": 72
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert call_args[0][0] == 'sensor_data'  # event name\n"
                  },
                  "startLine": 92
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        call_args = service.socketio.emit.call_args\n        assert call_args[0][0] == 'sensor_data'  # event name\n        \n"
                  },
                  "endLine": 93,
                  "startLine": 91
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert message['unit_id'] == 'UNIT001'\n"
                  },
                  "startLine": 95
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        message = call_args[0][1]  # message data\n        assert message['unit_id'] == 'UNIT001'\n        assert message['sensor_type'] == 'temperature'\n"
                  },
                  "endLine": 96,
                  "startLine": 94
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert message['sensor_type'] == 'temperature'\n"
                  },
                  "startLine": 96
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert message['unit_id'] == 'UNIT001'\n        assert message['sensor_type'] == 'temperature'\n        assert message['value'] == 25.5\n"
                  },
                  "endLine": 97,
                  "startLine": 95
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert message['value'] == 25.5\n"
                  },
                  "startLine": 97
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert message['sensor_type'] == 'temperature'\n        assert message['value'] == 25.5\n        assert message['quality'] == 'GOOD'\n"
                  },
                  "endLine": 98,
                  "startLine": 96
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert message['quality'] == 'GOOD'\n"
                  },
                  "startLine": 98
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert message['value'] == 25.5\n        assert message['quality'] == 'GOOD'\n        \n"
                  },
                  "endLine": 99,
                  "startLine": 97
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert call_args[1]['room'] == 'unit_UNIT001'  # room name\n"
                  },
                  "startLine": 100
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert call_args[1]['room'] == 'unit_UNIT001'  # room name\n    \n"
                  },
                  "endLine": 101,
                  "startLine": 99
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert call_args[0][0] == 'unit_status'\n"
                  },
                  "startLine": 117
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        call_args = service.socketio.emit.call_args\n        assert call_args[0][0] == 'unit_status'\n        \n"
                  },
                  "endLine": 118,
                  "startLine": 116
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert message['unit_id'] == 'UNIT001'\n"
                  },
                  "startLine": 120
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        message = call_args[0][1]\n        assert message['unit_id'] == 'UNIT001'\n        assert message['status'] == 'offline'\n"
                  },
                  "endLine": 121,
                  "startLine": 119
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert message['status'] == 'offline'\n"
                  },
                  "startLine": 121
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert message['unit_id'] == 'UNIT001'\n        assert message['status'] == 'offline'\n        assert message['health_status'] == 'error'\n"
                  },
                  "endLine": 122,
                  "startLine": 120
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert message['health_status'] == 'error'\n"
                  },
                  "startLine": 122
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert message['status'] == 'offline'\n        assert message['health_status'] == 'error'\n        assert 'timestamp' in message\n"
                  },
                  "endLine": 123,
                  "startLine": 121
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'timestamp' in message\n"
                  },
                  "startLine": 123
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert message['health_status'] == 'error'\n        assert 'timestamp' in message\n        \n"
                  },
                  "endLine": 124,
                  "startLine": 122
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert call_args[1]['room'] == 'unit_UNIT001'\n"
                  },
                  "startLine": 125
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert call_args[1]['room'] == 'unit_UNIT001'\n    \n"
                  },
                  "endLine": 126,
                  "startLine": 124
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert call_args[0][0] == 'system_alert'\n"
                  },
                  "startLine": 143
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        call_args = service.socketio.emit.call_args\n        assert call_args[0][0] == 'system_alert'\n        \n"
                  },
                  "endLine": 144,
                  "startLine": 142
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert message['type'] == 'critical'\n"
                  },
                  "startLine": 146
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        message = call_args[0][1]\n        assert message['type'] == 'critical'\n        assert message['message'] == 'High temperature detected'\n"
                  },
                  "endLine": 147,
                  "startLine": 145
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert message['message'] == 'High temperature detected'\n"
                  },
                  "startLine": 147
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert message['type'] == 'critical'\n        assert message['message'] == 'High temperature detected'\n        assert message['unit_id'] == 'UNIT001'\n"
                  },
                  "endLine": 148,
                  "startLine": 146
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert message['unit_id'] == 'UNIT001'\n"
                  },
                  "startLine": 148
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert message['message'] == 'High temperature detected'\n        assert message['unit_id'] == 'UNIT001'\n        assert 'timestamp' in message\n"
                  },
                  "endLine": 149,
                  "startLine": 147
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'timestamp' in message\n"
                  },
                  "startLine": 149
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert message['unit_id'] == 'UNIT001'\n        assert 'timestamp' in message\n        \n"
                  },
                  "endLine": 150,
                  "startLine": 148
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert call_args[1]['broadcast'] is True\n"
                  },
                  "startLine": 151
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert call_args[1]['broadcast'] is True\n    \n"
                  },
                  "endLine": 152,
                  "startLine": 150
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client_id == 'test-client-id'\n"
                  },
                  "startLine": 171
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        client_id = service._get_client_id()\n        assert client_id == 'test-client-id'\n    \n"
                  },
                  "endLine": 172,
                  "startLine": 170
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'test-client-id' in service._connected_clients\n"
                  },
                  "startLine": 182
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Check client was added\n        assert 'test-client-id' in service._connected_clients\n        client_info = service._connected_clients['test-client-id']\n"
                  },
                  "endLine": 183,
                  "startLine": 181
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'connected_at' in client_info\n"
                  },
                  "startLine": 184
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        client_info = service._connected_clients['test-client-id']\n        assert 'connected_at' in client_info\n        assert client_info['subscribed_units'] == []\n"
                  },
                  "endLine": 185,
                  "startLine": 183
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert client_info['subscribed_units'] == []\n"
                  },
                  "startLine": 185
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'connected_at' in client_info\n        assert client_info['subscribed_units'] == []\n        \n"
                  },
                  "endLine": 186,
                  "startLine": 184
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert call_args[0][0] == 'connection_confirmed'\n"
                  },
                  "startLine": 190
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        call_args = mock_emit.call_args\n        assert call_args[0][0] == 'connection_confirmed'\n        \n"
                  },
                  "endLine": 191,
                  "startLine": 189
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert message['status'] == 'connected'\n"
                  },
                  "startLine": 193
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        message = call_args[0][1]\n        assert message['status'] == 'connected'\n        assert message['client_id'] == 'test-client-id'\n"
                  },
                  "endLine": 194,
                  "startLine": 192
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert message['client_id'] == 'test-client-id'\n"
                  },
                  "startLine": 194
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert message['status'] == 'connected'\n        assert message['client_id'] == 'test-client-id'\n    \n"
                  },
                  "endLine": 195,
                  "startLine": 193
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'test-client-id' not in service._connected_clients\n"
                  },
                  "startLine": 205
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Check client was removed\n        assert 'test-client-id' not in service._connected_clients\n    \n"
                  },
                  "endLine": 206,
                  "startLine": 204
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'UNIT001' in subscribed_units\n"
                  },
                  "startLine": 226
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        subscribed_units = service._connected_clients['test-client-id']['subscribed_units']\n        assert 'UNIT001' in subscribed_units\n        \n"
                  },
                  "endLine": 227,
                  "startLine": 225
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert call_args[0][0] == 'subscription_confirmed'\n"
                  },
                  "startLine": 231
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        call_args = mock_emit.call_args\n        assert call_args[0][0] == 'subscription_confirmed'\n        \n"
                  },
                  "endLine": 232,
                  "startLine": 230
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert message['unit_id'] == 'UNIT001'\n"
                  },
                  "startLine": 234
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        message = call_args[0][1]\n        assert message['unit_id'] == 'UNIT001'\n        assert message['status'] == 'subscribed'\n"
                  },
                  "endLine": 235,
                  "startLine": 233
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert message['status'] == 'subscribed'\n"
                  },
                  "startLine": 235
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert message['unit_id'] == 'UNIT001'\n        assert message['status'] == 'subscribed'\n    \n"
                  },
                  "endLine": 236,
                  "startLine": 234
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert call_args[0][0] == 'error'\n"
                  },
                  "startLine": 249
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        call_args = mock_emit.call_args\n        assert call_args[0][0] == 'error'\n        assert 'unit_id is required' in call_args[0][1]['message']\n"
                  },
                  "endLine": 250,
                  "startLine": 248
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'unit_id is required' in call_args[0][1]['message']\n"
                  },
                  "startLine": 250
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert call_args[0][0] == 'error'\n        assert 'unit_id is required' in call_args[0][1]['message']\n    \n"
                  },
                  "endLine": 251,
                  "startLine": 249
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'UNIT001' not in subscribed_units\n"
                  },
                  "startLine": 271
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        subscribed_units = service._connected_clients['test-client-id']['subscribed_units']\n        assert 'UNIT001' not in subscribed_units\n        \n"
                  },
                  "endLine": 272,
                  "startLine": 270
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert call_args[0][0] == 'unsubscription_confirmed'\n"
                  },
                  "startLine": 276
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        call_args = mock_emit.call_args\n        assert call_args[0][0] == 'unsubscription_confirmed'\n        \n"
                  },
                  "endLine": 277,
                  "startLine": 275
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert message['unit_id'] == 'UNIT001'\n"
                  },
                  "startLine": 279
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        message = call_args[0][1]\n        assert message['unit_id'] == 'UNIT001'\n        assert message['status'] == 'unsubscribed'\n"
                  },
                  "endLine": 280,
                  "startLine": 278
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert message['status'] == 'unsubscribed'\n"
                  },
                  "startLine": 280
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert message['unit_id'] == 'UNIT001'\n        assert message['status'] == 'unsubscribed'\n    \n"
                  },
                  "endLine": 281,
                  "startLine": 279
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert call_args[0][0] == 'status_response'\n"
                  },
                  "startLine": 298
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        call_args = mock_emit.call_args\n        assert call_args[0][0] == 'status_response'\n        \n"
                  },
                  "endLine": 299,
                  "startLine": 297
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert message['client_id'] == 'test-client-id'\n"
                  },
                  "startLine": 301
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        message = call_args[0][1]\n        assert message['client_id'] == 'test-client-id'\n        assert message['connected_at'] == connected_at.isoformat()\n"
                  },
                  "endLine": 302,
                  "startLine": 300
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert message['connected_at'] == connected_at.isoformat()\n"
                  },
                  "startLine": 302
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert message['client_id'] == 'test-client-id'\n        assert message['connected_at'] == connected_at.isoformat()\n        assert message['subscribed_units'] == ['UNIT001', 'UNIT002']\n"
                  },
                  "endLine": 303,
                  "startLine": 301
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert message['subscribed_units'] == ['UNIT001', 'UNIT002']\n"
                  },
                  "startLine": 303
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert message['connected_at'] == connected_at.isoformat()\n        assert message['subscribed_units'] == ['UNIT001', 'UNIT002']\n        assert 'server_time' in message\n"
                  },
                  "endLine": 304,
                  "startLine": 302
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'server_time' in message\n"
                  },
                  "startLine": 304
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/test_websocket_service.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert message['subscribed_units'] == ['UNIT001', 'UNIT002']\n        assert 'server_time' in message\n"
                  },
                  "endLine": 304,
                  "startLine": 303
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert updated_timestamp is not None, \"Updated timestamp should not be None\"\n"
                  },
                  "startLine": 71
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/timestamp_helpers.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \"\"\"\n    assert updated_timestamp is not None, \"Updated timestamp should not be None\"\n    assert updated_timestamp >= original_timestamp, \\\n"
                  },
                  "endLine": 72,
                  "startLine": 70
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert updated_timestamp >= original_timestamp, \\\n"
                  },
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/timestamp_helpers.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    assert updated_timestamp is not None, \"Updated timestamp should not be None\"\n    assert updated_timestamp >= original_timestamp, \\\n        f\"Updated timestamp ({updated_timestamp}) should be >= original ({original_timestamp})\"\n\n"
                  },
                  "endLine": 74,
                  "startLine": 71
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert current_timestamp == original_timestamp, \\\n"
                  },
                  "startLine": 84
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/app/tests/timestamp_helpers.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \"\"\"\n    assert current_timestamp == original_timestamp, \\\n        f\"Timestamp should not have changed: original={original_timestamp}, current={current_timestamp}\"\n\n"
                  },
                  "endLine": 86,
                  "startLine": 83
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Possible binding to all interfaces."
          },
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    app.run(host='0.0.0.0', port=5000)\n"
                  },
                  "startLine": 107
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/run.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        )\n    app.run(host='0.0.0.0', port=5000)\n"
                  },
                  "endLine": 107,
                  "startLine": 106
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "MEDIUM",
            "issue_severity": "MEDIUM"
          },
          "ruleId": "B104",
          "ruleIndex": 5
        },
        {
          "message": {
            "text": "Consider possible security implications associated with the subprocess module."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "import subprocess\n"
                  },
                  "startLine": 8
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/run_complete_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "import os\nimport subprocess\nimport json\n"
                  },
                  "endLine": 9,
                  "startLine": 7
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B404",
          "ruleIndex": 6
        },
        {
          "message": {
            "text": "Starting a process with a partial executable path"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            result = subprocess.run(\n"
                  },
                  "startLine": 38
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/run_complete_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Change to root directory and run frontend tests\n            result = subprocess.run(\n                ['pnpm', 'test', '--run'],\n                cwd=self.root_dir,\n                capture_output=True,\n                text=True,\n                timeout=120\n            )\n            \n"
                  },
                  "endLine": 45,
                  "startLine": 37
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B607",
          "ruleIndex": 7
        },
        {
          "message": {
            "text": "subprocess call - check for execution of untrusted input."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            result = subprocess.run(\n"
                  },
                  "startLine": 38
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/run_complete_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # Change to root directory and run frontend tests\n            result = subprocess.run(\n                ['pnpm', 'test', '--run'],\n                cwd=self.root_dir,\n                capture_output=True,\n                text=True,\n                timeout=120\n            )\n            \n"
                  },
                  "endLine": 45,
                  "startLine": 37
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B603",
          "ruleIndex": 8
        },
        {
          "message": {
            "text": "subprocess call - check for execution of untrusted input."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            result = subprocess.run(\n"
                  },
                  "startLine": 93
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/run_complete_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        try:\n            result = subprocess.run(\n                [sys.executable, 'test_full_structure.py'],\n                cwd=backend_dir,\n                capture_output=True,\n                text=True\n            )\n            \n"
                  },
                  "endLine": 99,
                  "startLine": 92
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B603",
          "ruleIndex": 8
        },
        {
          "message": {
            "text": "subprocess call - check for execution of untrusted input."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            collect_result = subprocess.run(\n"
                  },
                  "startLine": 315
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/run_complete_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            # First, try to collect tests to get accurate count\n            collect_result = subprocess.run(\n                [sys.executable, '-m', 'pytest', 'app/tests/', '--collect-only', '-q'],\n                cwd=backend_dir,\n                capture_output=True,\n                text=True,\n                timeout=60\n            )\n            \n"
                  },
                  "endLine": 322,
                  "startLine": 314
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B603",
          "ruleIndex": 8
        },
        {
          "message": {
            "text": "subprocess call - check for execution of untrusted input."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                    result = subprocess.run(\n"
                  },
                  "startLine": 357
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/run_complete_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                try:\n                    result = subprocess.run(\n                        [sys.executable, '-m', 'pytest', test_file, '--tb=no', '-q'],\n                        cwd=backend_dir,\n                        capture_output=True,\n                        text=True,\n                        timeout=60\n                    )\n                    \n"
                  },
                  "endLine": 364,
                  "startLine": 356
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B603",
          "ruleIndex": 8
        },
        {
          "message": {
            "text": "Try, Except, Pass detected."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                except:\n"
                  },
                  "startLine": 415
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/run_complete_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                                               if line.strip().startswith('def test_')])\n                except:\n                    pass\n            \n"
                  },
                  "endLine": 417,
                  "startLine": 414
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B110",
          "ruleIndex": 1
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        page = random.randint(1, 3)\n"
                  },
                  "startLine": 41
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \"\"\"Get units with pagination.\"\"\"\n        page = random.randint(1, 3)\n        per_page = random.choice([10, 25, 50])\n"
                  },
                  "endLine": 42,
                  "startLine": 40
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        per_page = random.choice([10, 25, 50])\n"
                  },
                  "startLine": 42
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        page = random.randint(1, 3)\n        per_page = random.choice([10, 25, 50])\n        self.client.get(f\"/api/v1/units?page={page}&per_page={per_page}\", \n"
                  },
                  "endLine": 43,
                  "startLine": 41
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        filter_param = random.choice(filters)\n"
                  },
                  "startLine": 55
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        ]\n        filter_param = random.choice(filters)\n        self.client.get(f\"/api/v1/units?{filter_param}\", headers=self.headers)\n"
                  },
                  "endLine": 56,
                  "startLine": 54
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        unit_id = random.choice(unit_ids)\n"
                  },
                  "startLine": 63
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        unit_ids = [\"TEST001\", \"TC001\", \"TC002\", \"TC003\"]\n        unit_id = random.choice(unit_ids)\n        self.client.get(f\"/api/v1/units/{unit_id}\", headers=self.headers)\n"
                  },
                  "endLine": 64,
                  "startLine": 62
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        unit_id = random.choice(unit_ids)\n"
                  },
                  "startLine": 70
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        unit_ids = [\"TEST001\", \"TC001\", \"TC002\"]\n        unit_id = random.choice(unit_ids)\n        self.client.get(f\"/api/v1/units/{unit_id}/sensors\", headers=self.headers)\n"
                  },
                  "endLine": 71,
                  "startLine": 69
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        unit_id = random.choice(unit_ids)\n"
                  },
                  "startLine": 77
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        unit_ids = [\"TEST001\", \"TC001\", \"TC002\"]\n        unit_id = random.choice(unit_ids)\n        hours = random.choice([1, 6, 12, 24])\n"
                  },
                  "endLine": 78,
                  "startLine": 76
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        hours = random.choice([1, 6, 12, 24])\n"
                  },
                  "startLine": 78
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        unit_id = random.choice(unit_ids)\n        hours = random.choice([1, 6, 12, 24])\n        self.client.get(f\"/api/v1/units/{unit_id}/readings?hours={hours}\", \n"
                  },
                  "endLine": 79,
                  "startLine": 77
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        unit_id = random.choice(unit_ids)\n"
                  },
                  "startLine": 91
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        unit_ids = [\"TEST001\", \"TC001\", \"TC002\"]\n        unit_id = random.choice(unit_ids)\n        \n"
                  },
                  "endLine": 92,
                  "startLine": 90
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            \"status\": random.choice([\"online\", \"offline\", \"maintenance\"]),\n"
                  },
                  "startLine": 94
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        status_data = {\n            \"status\": random.choice([\"online\", \"offline\", \"maintenance\"]),\n            \"health_status\": random.choice([\"optimal\", \"warning\", \"critical\"]),\n"
                  },
                  "endLine": 95,
                  "startLine": 93
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            \"health_status\": random.choice([\"optimal\", \"warning\", \"critical\"]),\n"
                  },
                  "startLine": 95
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \"status\": random.choice([\"online\", \"offline\", \"maintenance\"]),\n            \"health_status\": random.choice([\"optimal\", \"warning\", \"critical\"]),\n            \"has_alert\": random.choice([True, False]),\n"
                  },
                  "endLine": 96,
                  "startLine": 94
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            \"has_alert\": random.choice([True, False]),\n"
                  },
                  "startLine": 96
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \"health_status\": random.choice([\"optimal\", \"warning\", \"critical\"]),\n            \"has_alert\": random.choice([True, False]),\n            \"has_alarm\": random.choice([True, False])\n"
                  },
                  "endLine": 97,
                  "startLine": 95
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            \"has_alarm\": random.choice([True, False])\n"
                  },
                  "startLine": 97
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \"has_alert\": random.choice([True, False]),\n            \"has_alarm\": random.choice([True, False])\n        }\n"
                  },
                  "endLine": 98,
                  "startLine": 96
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        unit_id = f\"PERF{random.randint(1000, 9999)}\"\n"
                  },
                  "startLine": 147
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \"\"\"Create a new unit.\"\"\"\n        unit_id = f\"PERF{random.randint(1000, 9999)}\"\n        \n"
                  },
                  "endLine": 148,
                  "startLine": 146
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            \"serial_number\": f\"{unit_id}-2024-{random.randint(100, 999)}\",\n"
                  },
                  "startLine": 152
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \"name\": f\"Performance Test Unit {unit_id}\",\n            \"serial_number\": f\"{unit_id}-2024-{random.randint(100, 999)}\",\n            \"install_date\": datetime.utcnow().isoformat(),\n"
                  },
                  "endLine": 153,
                  "startLine": 151
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            \"location\": f\"Test Site {random.randint(1, 10)}\",\n"
                  },
                  "startLine": 154
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \"install_date\": datetime.utcnow().isoformat(),\n            \"location\": f\"Test Site {random.randint(1, 10)}\",\n            \"client_name\": f\"Test Client {random.randint(1, 5)}\",\n"
                  },
                  "endLine": 155,
                  "startLine": 153
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            \"client_name\": f\"Test Client {random.randint(1, 5)}\",\n"
                  },
                  "startLine": 155
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \"location\": f\"Test Site {random.randint(1, 10)}\",\n            \"client_name\": f\"Test Client {random.randint(1, 5)}\",\n            \"client_email\": f\"client{random.randint(1, 5)}@test.com\"\n"
                  },
                  "endLine": 156,
                  "startLine": 154
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            \"client_email\": f\"client{random.randint(1, 5)}@test.com\"\n"
                  },
                  "startLine": 156
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \"client_name\": f\"Test Client {random.randint(1, 5)}\",\n            \"client_email\": f\"client{random.randint(1, 5)}@test.com\"\n        }\n"
                  },
                  "endLine": 157,
                  "startLine": 155
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            unit_id = random.choice(self.created_units)\n"
                  },
                  "startLine": 168
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        if self.created_units:\n            unit_id = random.choice(self.created_units)\n            self.client.get(f\"/api/v1/units/{unit_id}\", headers=self.headers)\n"
                  },
                  "endLine": 169,
                  "startLine": 167
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            unit_id = random.choice(self.created_units)\n"
                  },
                  "startLine": 175
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        if self.created_units:\n            unit_id = random.choice(self.created_units)\n            \n"
                  },
                  "endLine": 176,
                  "startLine": 174
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                \"status\": random.choice([\"online\", \"offline\", \"maintenance\"]),\n"
                  },
                  "startLine": 179
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                \"name\": f\"Updated Unit {unit_id}\",\n                \"status\": random.choice([\"online\", \"offline\", \"maintenance\"]),\n                \"health_status\": random.choice([\"optimal\", \"warning\", \"critical\"]),\n"
                  },
                  "endLine": 180,
                  "startLine": 178
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                \"health_status\": random.choice([\"optimal\", \"warning\", \"critical\"]),\n"
                  },
                  "startLine": 180
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                \"status\": random.choice([\"online\", \"offline\", \"maintenance\"]),\n                \"health_status\": random.choice([\"optimal\", \"warning\", \"critical\"]),\n                \"temp_outside\": round(random.uniform(-10, 40), 1),\n"
                  },
                  "endLine": 181,
                  "startLine": 179
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                \"temp_outside\": round(random.uniform(-10, 40), 1),\n"
                  },
                  "startLine": 181
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                \"health_status\": random.choice([\"optimal\", \"warning\", \"critical\"]),\n                \"temp_outside\": round(random.uniform(-10, 40), 1),\n                \"humidity\": round(random.uniform(30, 90), 1),\n"
                  },
                  "endLine": 182,
                  "startLine": 180
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                \"humidity\": round(random.uniform(30, 90), 1),\n"
                  },
                  "startLine": 182
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                \"temp_outside\": round(random.uniform(-10, 40), 1),\n                \"humidity\": round(random.uniform(30, 90), 1),\n                \"battery_level\": round(random.uniform(10, 100), 1)\n"
                  },
                  "endLine": 183,
                  "startLine": 181
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                \"battery_level\": round(random.uniform(10, 100), 1)\n"
                  },
                  "startLine": 183
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                \"humidity\": round(random.uniform(30, 90), 1),\n                \"battery_level\": round(random.uniform(10, 100), 1)\n            }\n"
                  },
                  "endLine": 184,
                  "startLine": 182
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        unit_id = random.choice(unit_ids)\n"
                  },
                  "startLine": 229
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        unit_ids = [\"TEST001\", \"TC001\", \"TC002\", \"TC003\"]\n        unit_id = random.choice(unit_ids)\n        hours = random.choice([1, 3, 6, 12, 24])\n"
                  },
                  "endLine": 230,
                  "startLine": 228
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        hours = random.choice([1, 3, 6, 12, 24])\n"
                  },
                  "startLine": 230
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        unit_id = random.choice(unit_ids)\n        hours = random.choice([1, 3, 6, 12, 24])\n        \n"
                  },
                  "endLine": 231,
                  "startLine": 229
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        unit_id = random.choice(unit_ids)\n"
                  },
                  "startLine": 239
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        unit_ids = [\"TEST001\", \"TC001\", \"TC002\"]\n        unit_id = random.choice(unit_ids)\n        sensor_types = [\"temperature\", \"humidity\", \"pressure\", \"level\"]\n"
                  },
                  "endLine": 240,
                  "startLine": 238
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        sensor_type = random.choice(sensor_types)\n"
                  },
                  "startLine": 241
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        sensor_types = [\"temperature\", \"humidity\", \"pressure\", \"level\"]\n        sensor_type = random.choice(sensor_types)\n        \n"
                  },
                  "endLine": 242,
                  "startLine": 240
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        unit_id = random.choice(unit_ids)\n"
                  },
                  "startLine": 250
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        unit_ids = [\"TEST001\", \"TC001\", \"TC002\"]\n        unit_id = random.choice(unit_ids)\n        \n"
                  },
                  "endLine": 251,
                  "startLine": 249
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        unit_id = random.choice(unit_ids)\n"
                  },
                  "startLine": 258
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        unit_ids = [\"TEST001\"]  # Only create for test unit\n        unit_id = random.choice(unit_ids)\n        \n"
                  },
                  "endLine": 259,
                  "startLine": 257
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        sensor_type = random.choice(sensor_types)\n"
                  },
                  "startLine": 261
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        sensor_types = [\"temperature\", \"humidity\", \"pressure\", \"level\", \"power\"]\n        sensor_type = random.choice(sensor_types)\n        \n"
                  },
                  "endLine": 262,
                  "startLine": 260
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            \"name\": f\"Perf Test {sensor_type.title()} Sensor {random.randint(100, 999)}\",\n"
                  },
                  "startLine": 264
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        sensor_data = {\n            \"name\": f\"Perf Test {sensor_type.title()} Sensor {random.randint(100, 999)}\",\n            \"sensor_type\": sensor_type,\n"
                  },
                  "endLine": 265,
                  "startLine": 263
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        device_id = random.choice(device_ids)\n"
                  },
                  "startLine": 331
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        device_ids = ['DNP3_PERF_01', 'DNP3_PERF_02']\n        device_id = random.choice(device_ids)\n        \n"
                  },
                  "endLine": 332,
                  "startLine": 330
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        device_id = random.choice(device_ids)\n"
                  },
                  "startLine": 352
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        device_ids = ['DNP3_PERF_01', 'DNP3_PERF_02']\n        device_id = random.choice(device_ids)\n        \n"
                  },
                  "endLine": 353,
                  "startLine": 351
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        device_id = random.choice(device_ids)\n"
                  },
                  "startLine": 385
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        device_ids = ['DNP3_PERF_01', 'DNP3_PERF_02']\n        device_id = random.choice(device_ids)\n        \n"
                  },
                  "endLine": 386,
                  "startLine": 384
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            'enable_caching': random.choice([True, False]),\n"
                  },
                  "startLine": 462
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        config = {\n            'enable_caching': random.choice([True, False]),\n            'enable_bulk_operations': random.choice([True, False])\n"
                  },
                  "endLine": 463,
                  "startLine": 461
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            'enable_bulk_operations': random.choice([True, False])\n"
                  },
                  "startLine": 463
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/scripts/performance_tests.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            'enable_caching': random.choice([True, False]),\n            'enable_bulk_operations': random.choice([True, False])\n        }\n"
                  },
                  "endLine": 464,
                  "startLine": 462
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B311",
          "ruleIndex": 2
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'development' in config\n"
                  },
                  "startLine": 16
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_basic_structure.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Test configuration classes\n        assert 'development' in config\n        assert 'production' in config\n"
                  },
                  "endLine": 17,
                  "startLine": 15
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'production' in config\n"
                  },
                  "startLine": 17
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_basic_structure.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'development' in config\n        assert 'production' in config\n        assert 'testing' in config\n"
                  },
                  "endLine": 18,
                  "startLine": 16
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'testing' in config\n"
                  },
                  "startLine": 18
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_basic_structure.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'production' in config\n        assert 'testing' in config\n        print(\"\u2713 Configuration classes available\")\n"
                  },
                  "endLine": 19,
                  "startLine": 17
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert response.status_code == 200\n"
                  },
                  "startLine": 32
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_basic_structure.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            response = client.get('/health')\n            assert response.status_code == 200\n            print(\"\u2713 Health endpoint working\")\n"
                  },
                  "endLine": 33,
                  "startLine": 31
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert isinstance(test_exception, Exception)\n"
                  },
                  "startLine": 38
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_domain_exceptions_basic.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Test inheritance hierarchy\n        assert isinstance(test_exception, Exception)\n        assert hasattr(test_exception, 'error_type')\n"
                  },
                  "endLine": 39,
                  "startLine": 37
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(test_exception, 'error_type')\n"
                  },
                  "startLine": 39
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_domain_exceptions_basic.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert isinstance(test_exception, Exception)\n        assert hasattr(test_exception, 'error_type')\n        assert hasattr(test_exception, 'status_code')\n"
                  },
                  "endLine": 40,
                  "startLine": 38
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(test_exception, 'status_code')\n"
                  },
                  "startLine": 40
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_domain_exceptions_basic.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(test_exception, 'error_type')\n        assert hasattr(test_exception, 'status_code')\n        assert hasattr(test_exception, 'context')\n"
                  },
                  "endLine": 41,
                  "startLine": 39
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(test_exception, 'context')\n"
                  },
                  "startLine": 41
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_domain_exceptions_basic.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(test_exception, 'status_code')\n        assert hasattr(test_exception, 'context')\n        assert hasattr(test_exception, 'details')\n"
                  },
                  "endLine": 42,
                  "startLine": 40
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(test_exception, 'details')\n"
                  },
                  "startLine": 42
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_domain_exceptions_basic.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(test_exception, 'context')\n        assert hasattr(test_exception, 'details')\n        \n"
                  },
                  "endLine": 43,
                  "startLine": 41
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert auth_exception.status_code == 401\n"
                  },
                  "startLine": 47
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_domain_exceptions_basic.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        print(f\"\u2713 AuthenticationException: status={auth_exception.status_code}, type={auth_exception.error_type}\")\n        assert auth_exception.status_code == 401\n        assert auth_exception.error_type == 'authentication_error'\n"
                  },
                  "endLine": 48,
                  "startLine": 46
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert auth_exception.error_type == 'authentication_error'\n"
                  },
                  "startLine": 48
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_domain_exceptions_basic.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert auth_exception.status_code == 401\n        assert auth_exception.error_type == 'authentication_error'\n        \n"
                  },
                  "endLine": 49,
                  "startLine": 47
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert unit_exception.status_code == 503\n"
                  },
                  "startLine": 52
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_domain_exceptions_basic.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        print(f\"\u2713 UnitOfflineException: status={unit_exception.status_code}, type={unit_exception.error_type}\")\n        assert unit_exception.status_code == 503\n        assert unit_exception.error_type == 'service_unavailable'\n"
                  },
                  "endLine": 53,
                  "startLine": 51
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert unit_exception.error_type == 'service_unavailable'\n"
                  },
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_domain_exceptions_basic.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert unit_exception.status_code == 503\n        assert unit_exception.error_type == 'service_unavailable'\n        assert 'unit_id' in unit_exception.details\n"
                  },
                  "endLine": 54,
                  "startLine": 52
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'unit_id' in unit_exception.details\n"
                  },
                  "startLine": 54
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_domain_exceptions_basic.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert unit_exception.error_type == 'service_unavailable'\n        assert 'unit_id' in unit_exception.details\n        \n"
                  },
                  "endLine": 55,
                  "startLine": 53
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sensor_exception.status_code == 404\n"
                  },
                  "startLine": 58
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_domain_exceptions_basic.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        print(f\"\u2713 SensorNotFoundException: status={sensor_exception.status_code}, type={sensor_exception.error_type}\")\n        assert sensor_exception.status_code == 404\n        assert sensor_exception.error_type == 'not_found_error'\n"
                  },
                  "endLine": 59,
                  "startLine": 57
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert sensor_exception.error_type == 'not_found_error'\n"
                  },
                  "startLine": 59
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_domain_exceptions_basic.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert sensor_exception.status_code == 404\n        assert sensor_exception.error_type == 'not_found_error'\n        \n"
                  },
                  "endLine": 60,
                  "startLine": 58
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert db_exception.status_code == 500\n"
                  },
                  "startLine": 63
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_domain_exceptions_basic.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        print(f\"\u2713 DatabaseException: status={db_exception.status_code}, type={db_exception.error_type}\")\n        assert db_exception.status_code == 500\n        assert db_exception.error_type == 'database_error'\n"
                  },
                  "endLine": 64,
                  "startLine": 62
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert db_exception.error_type == 'database_error'\n"
                  },
                  "startLine": 64
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_domain_exceptions_basic.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert db_exception.status_code == 500\n        assert db_exception.error_type == 'database_error'\n        \n"
                  },
                  "endLine": 65,
                  "startLine": 63
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert validation_exception.status_code == 400\n"
                  },
                  "startLine": 69
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_domain_exceptions_basic.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        print(f\"\u2713 InvalidDataException: status={validation_exception.status_code}, type={validation_exception.error_type}\")\n        assert validation_exception.status_code == 400\n        assert validation_exception.error_type == 'validation_error'\n"
                  },
                  "endLine": 70,
                  "startLine": 68
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert validation_exception.error_type == 'validation_error'\n"
                  },
                  "startLine": 70
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_domain_exceptions_basic.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert validation_exception.status_code == 400\n        assert validation_exception.error_type == 'validation_error'\n        assert 'field' in validation_exception.details\n"
                  },
                  "endLine": 71,
                  "startLine": 69
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'field' in validation_exception.details\n"
                  },
                  "startLine": 71
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_domain_exceptions_basic.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert validation_exception.error_type == 'validation_error'\n        assert 'field' in validation_exception.details\n        assert validation_exception.details['field'] == 'email'\n"
                  },
                  "endLine": 72,
                  "startLine": 70
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert validation_exception.details['field'] == 'email'\n"
                  },
                  "startLine": 72
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_domain_exceptions_basic.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'field' in validation_exception.details\n        assert validation_exception.details['field'] == 'email'\n        \n"
                  },
                  "endLine": 73,
                  "startLine": 71
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert exception.status_code == expected_status, f\"Status code mismatch for {exception.__class__.__name__}\"\n"
                  },
                  "startLine": 114
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_domain_exceptions_basic.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            \n            assert exception.status_code == expected_status, f\"Status code mismatch for {exception.__class__.__name__}\"\n            assert exception.error_type == expected_type, f\"Error type mismatch for {exception.__class__.__name__}\"\n"
                  },
                  "endLine": 115,
                  "startLine": 113
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert exception.error_type == expected_type, f\"Error type mismatch for {exception.__class__.__name__}\"\n"
                  },
                  "startLine": 115
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_domain_exceptions_basic.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert exception.status_code == expected_status, f\"Status code mismatch for {exception.__class__.__name__}\"\n            assert exception.error_type == expected_type, f\"Error type mismatch for {exception.__class__.__name__}\"\n            assert isinstance(exception.details, dict), f\"Details should be dict for {exception.__class__.__name__}\"\n"
                  },
                  "endLine": 116,
                  "startLine": 114
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert isinstance(exception.details, dict), f\"Details should be dict for {exception.__class__.__name__}\"\n"
                  },
                  "startLine": 116
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_domain_exceptions_basic.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert exception.error_type == expected_type, f\"Error type mismatch for {exception.__class__.__name__}\"\n            assert isinstance(exception.details, dict), f\"Details should be dict for {exception.__class__.__name__}\"\n        \n"
                  },
                  "endLine": 117,
                  "startLine": 115
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'development' in config\n"
                  },
                  "startLine": 45
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_full_structure.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Test configuration classes\n        assert 'development' in config\n        assert 'production' in config  \n"
                  },
                  "endLine": 46,
                  "startLine": 44
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'production' in config  \n"
                  },
                  "startLine": 46
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_full_structure.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'development' in config\n        assert 'production' in config  \n        assert 'testing' in config\n"
                  },
                  "endLine": 47,
                  "startLine": 45
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'testing' in config\n"
                  },
                  "startLine": 47
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_full_structure.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'production' in config  \n        assert 'testing' in config\n        print(\"\u2713 Configuration classes available\")\n"
                  },
                  "endLine": 48,
                  "startLine": 46
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert mock_jsonify.called, \"jsonify should be called\"\n"
                  },
                  "startLine": 83
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_logging_correlation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Verify jsonify was called\n                assert mock_jsonify.called, \"jsonify should be called\"\n                call_args = mock_jsonify.call_args[0][0]\n"
                  },
                  "endLine": 84,
                  "startLine": 82
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'success' in call_args and call_args['success'] is False\n"
                  },
                  "startLine": 87
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_logging_correlation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Verify response structure\n                assert 'success' in call_args and call_args['success'] is False\n                assert 'error' in call_args\n"
                  },
                  "endLine": 88,
                  "startLine": 86
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'error' in call_args\n"
                  },
                  "startLine": 88
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_logging_correlation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'success' in call_args and call_args['success'] is False\n                assert 'error' in call_args\n                assert 'request_id' in call_args\n"
                  },
                  "endLine": 89,
                  "startLine": 87
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'request_id' in call_args\n"
                  },
                  "startLine": 89
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_logging_correlation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'error' in call_args\n                assert 'request_id' in call_args\n                assert 'timestamp' in call_args\n"
                  },
                  "endLine": 90,
                  "startLine": 88
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'timestamp' in call_args\n"
                  },
                  "startLine": 90
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_logging_correlation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'request_id' in call_args\n                assert 'timestamp' in call_args\n                \n"
                  },
                  "endLine": 91,
                  "startLine": 89
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'details' in call_args['error']\n"
                  },
                  "startLine": 93
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_logging_correlation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                # Verify correlation ID in error details\n                assert 'details' in call_args['error']\n                assert 'correlation_id' in call_args['error']['details']\n"
                  },
                  "endLine": 94,
                  "startLine": 92
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "                assert 'correlation_id' in call_args['error']['details']\n"
                  },
                  "startLine": 94
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_logging_correlation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "                assert 'details' in call_args['error']\n                assert 'correlation_id' in call_args['error']['details']\n                \n"
                  },
                  "endLine": 95,
                  "startLine": 93
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert result is True, \"Filter should always return True\"\n"
                  },
                  "startLine": 134
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_logging_correlation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        \n        assert result is True, \"Filter should always return True\"\n        assert hasattr(record, 'request_id'), \"Record should have request_id attribute\"\n"
                  },
                  "endLine": 135,
                  "startLine": 133
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(record, 'request_id'), \"Record should have request_id attribute\"\n"
                  },
                  "startLine": 135
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_logging_correlation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert result is True, \"Filter should always return True\"\n        assert hasattr(record, 'request_id'), \"Record should have request_id attribute\"\n        assert record.request_id == 'no-request-context', \"Should set no-request-context when no context\"\n"
                  },
                  "endLine": 136,
                  "startLine": 134
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert record.request_id == 'no-request-context', \"Should set no-request-context when no context\"\n"
                  },
                  "startLine": 136
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_logging_correlation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert hasattr(record, 'request_id'), \"Record should have request_id attribute\"\n        assert record.request_id == 'no-request-context', \"Should set no-request-context when no context\"\n        \n"
                  },
                  "endLine": 137,
                  "startLine": 135
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert hasattr(SecurityAwareErrorHandler, 'register_error_handlers'), \\\n"
                  },
                  "startLine": 159
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_logging_correlation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Check that the register_error_handlers method exists\n        assert hasattr(SecurityAwareErrorHandler, 'register_error_handlers'), \\\n            \"SecurityAwareErrorHandler should have register_error_handlers method\"\n        \n"
                  },
                  "endLine": 161,
                  "startLine": 158
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert callable(SecurityAwareErrorHandler.register_error_handlers), \\\n"
                  },
                  "startLine": 163
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_logging_correlation_improvements.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        # Verify it's callable\n        assert callable(SecurityAwareErrorHandler.register_error_handlers), \\\n            \"register_error_handlers should be callable\"\n        \n"
                  },
                  "endLine": 165,
                  "startLine": 162
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert allowed, f\"Request {i+1} should be allowed\"\n"
                  },
                  "startLine": 49
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_pr2_manual.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        print(f\"Request {i+1}: allowed={allowed}, remaining={info['remaining']}\")\n        assert allowed, f\"Request {i+1} should be allowed\"\n    \n"
                  },
                  "endLine": 50,
                  "startLine": 48
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert not allowed, \"Request 6 should be blocked\"\n"
                  },
                  "startLine": 59
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_pr2_manual.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    print(f\"Request 6: allowed={allowed}, remaining={info['remaining']}\")\n    assert not allowed, \"Request 6 should be blocked\"\n    \n"
                  },
                  "endLine": 60,
                  "startLine": 58
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert len(request_id) == 36, \"Request ID should be UUID format\"\n"
                  },
                  "startLine": 70
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_pr2_manual.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    print(f\"Generated request ID: {request_id}\")\n    assert len(request_id) == 36, \"Request ID should be UUID format\"\n    \n"
                  },
                  "endLine": 71,
                  "startLine": 69
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert False, \"Generated request ID should be valid UUID\"\n"
                  },
                  "startLine": 77
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_pr2_manual.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    except ValueError:\n        assert False, \"Generated request ID should be valid UUID\"\n    \n"
                  },
                  "endLine": 78,
                  "startLine": 76
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert summary['overview']['total_requests'] == 2, \"Should have 2 requests recorded\"\n"
                  },
                  "startLine": 98
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_pr2_manual.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    \n    assert summary['overview']['total_requests'] == 2, \"Should have 2 requests recorded\"\n    print(\"\u2705 MetricsCollector functionality verified\")\n"
                  },
                  "endLine": 99,
                  "startLine": 97
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert 'validation_error' in messages, \"Should have validation_error message\"\n"
                  },
                  "startLine": 107
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_pr2_manual.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    messages = SecurityAwareErrorHandler.GENERIC_MESSAGES\n    assert 'validation_error' in messages, \"Should have validation_error message\"\n    assert 'rate_limit_exceeded' not in messages, \"Should not have specific rate limit message\"\n"
                  },
                  "endLine": 108,
                  "startLine": 106
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert 'rate_limit_exceeded' not in messages, \"Should not have specific rate limit message\"\n"
                  },
                  "startLine": 108
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/test_pr2_manual.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    assert 'validation_error' in messages, \"Should have validation_error message\"\n    assert 'rate_limit_exceeded' not in messages, \"Should not have specific rate limit message\"\n    \n"
                  },
                  "endLine": 109,
                  "startLine": 107
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert len(test_uuid) == 36, \"UUID should be 36 characters\"\n"
                  },
                  "startLine": 67
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/validate_pr2.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        test_uuid = str(uuid.uuid4())\n        assert len(test_uuid) == 36, \"UUID should be 36 characters\"\n        print(\"\u2705 UUID generation working\")\n"
                  },
                  "endLine": 68,
                  "startLine": 66
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert metrics['test'] == 1, \"Defaultdict should work\"\n"
                  },
                  "startLine": 79
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/validate_pr2.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        with lock:\n            assert metrics['test'] == 1, \"Defaultdict should work\"\n            assert len(times) == 1, \"Deque should work\"\n"
                  },
                  "endLine": 80,
                  "startLine": 78
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "            assert len(times) == 1, \"Deque should work\"\n"
                  },
                  "startLine": 80
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/validate_pr2.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "            assert metrics['test'] == 1, \"Defaultdict should work\"\n            assert len(times) == 1, \"Deque should work\"\n        \n"
                  },
                  "endLine": 81,
                  "startLine": 79
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert 'T' in iso_string, \"ISO format should contain T\"\n"
                  },
                  "startLine": 87
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/validate_pr2.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        iso_string = now.isoformat() + 'Z'\n        assert 'T' in iso_string, \"ISO format should contain T\"\n        assert iso_string.endswith('Z'), \"ISO format should end with Z\"\n"
                  },
                  "endLine": 88,
                  "startLine": 86
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "        assert iso_string.endswith('Z'), \"ISO format should end with Z\"\n"
                  },
                  "startLine": 88
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/backend/validate_pr2.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "        assert 'T' in iso_string, \"ISO format should contain T\"\n        assert iso_string.endswith('Z'), \"ISO format should end with Z\"\n        print(\"\u2705 Datetime formatting working\")\n"
                  },
                  "endLine": 89,
                  "startLine": 87
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert 'secret123' not in sanitized, \"Password not redacted\"\n"
                  },
                  "startLine": 19
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    sanitized = SecureLogger.sanitize_log_message(message)\n    assert 'secret123' not in sanitized, \"Password not redacted\"\n    assert 'password=***' in sanitized, \"Password pattern not found\"\n"
                  },
                  "endLine": 20,
                  "startLine": 18
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert 'password=***' in sanitized, \"Password pattern not found\"\n"
                  },
                  "startLine": 20
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    assert 'secret123' not in sanitized, \"Password not redacted\"\n    assert 'password=***' in sanitized, \"Password pattern not found\"\n    print(\"\u2713 Password redaction works\")\n"
                  },
                  "endLine": 21,
                  "startLine": 19
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert 'abc123xyz' not in sanitized, \"Token not redacted\"\n"
                  },
                  "startLine": 26
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    sanitized = SecureLogger.sanitize_log_message(message)\n    assert 'abc123xyz' not in sanitized, \"Token not redacted\"\n    assert 'token=***' in sanitized, \"Token pattern not found\"\n"
                  },
                  "endLine": 27,
                  "startLine": 25
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert 'token=***' in sanitized, \"Token pattern not found\"\n"
                  },
                  "startLine": 27
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    assert 'abc123xyz' not in sanitized, \"Token not redacted\"\n    assert 'token=***' in sanitized, \"Token pattern not found\"\n    print(\"\u2713 Token redaction works\")\n"
                  },
                  "endLine": 28,
                  "startLine": 26
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert 'my_secret_key' not in sanitized, \"API key not redacted\"\n"
                  },
                  "startLine": 33
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    sanitized = SecureLogger.sanitize_log_message(message)\n    assert 'my_secret_key' not in sanitized, \"API key not redacted\"\n    assert 'api_key=***' in sanitized, \"API key pattern not found\"\n"
                  },
                  "endLine": 34,
                  "startLine": 32
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert 'api_key=***' in sanitized, \"API key pattern not found\"\n"
                  },
                  "startLine": 34
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    assert 'my_secret_key' not in sanitized, \"API key not redacted\"\n    assert 'api_key=***' in sanitized, \"API key pattern not found\"\n    print(\"\u2713 API key redaction works\")\n"
                  },
                  "endLine": 35,
                  "startLine": 33
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert sanitized['username'] == 'admin', \"Username was modified\"\n"
                  },
                  "startLine": 51
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    sanitized = SecureLogger.sanitize_dict(data)\n    assert sanitized['username'] == 'admin', \"Username was modified\"\n    assert sanitized['password'] == '[REDACTED]', \"Password not redacted\"\n"
                  },
                  "endLine": 52,
                  "startLine": 50
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert sanitized['password'] == '[REDACTED]', \"Password not redacted\"\n"
                  },
                  "startLine": 52
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    assert sanitized['username'] == 'admin', \"Username was modified\"\n    assert sanitized['password'] == '[REDACTED]', \"Password not redacted\"\n    assert sanitized['email'] == 'admin@example.com', \"Email was modified\"\n"
                  },
                  "endLine": 53,
                  "startLine": 51
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert sanitized['email'] == 'admin@example.com', \"Email was modified\"\n"
                  },
                  "startLine": 53
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    assert sanitized['password'] == '[REDACTED]', \"Password not redacted\"\n    assert sanitized['email'] == 'admin@example.com', \"Email was modified\"\n    assert sanitized['token'] == '[REDACTED]', \"Token not redacted\"\n"
                  },
                  "endLine": 54,
                  "startLine": 52
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert sanitized['token'] == '[REDACTED]', \"Token not redacted\"\n"
                  },
                  "startLine": 54
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    assert sanitized['email'] == 'admin@example.com', \"Email was modified\"\n    assert sanitized['token'] == '[REDACTED]', \"Token not redacted\"\n    print(\"\u2713 Dictionary sanitization works\")\n"
                  },
                  "endLine": 55,
                  "startLine": 53
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert sanitized['user']['username'] == 'admin', \"Username was modified\"\n"
                  },
                  "startLine": 74
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    sanitized = SecureLogger.sanitize_dict(data)\n    assert sanitized['user']['username'] == 'admin', \"Username was modified\"\n    assert sanitized['user']['password'] == '[REDACTED]', \"Nested password not redacted\"\n"
                  },
                  "endLine": 75,
                  "startLine": 73
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert sanitized['user']['password'] == '[REDACTED]', \"Nested password not redacted\"\n"
                  },
                  "startLine": 75
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    assert sanitized['user']['username'] == 'admin', \"Username was modified\"\n    assert sanitized['user']['password'] == '[REDACTED]', \"Nested password not redacted\"\n    assert sanitized['user']['settings']['api_key'] == '[REDACTED]', \"Nested API key not redacted\"\n"
                  },
                  "endLine": 76,
                  "startLine": 74
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert sanitized['user']['settings']['api_key'] == '[REDACTED]', \"Nested API key not redacted\"\n"
                  },
                  "startLine": 76
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    assert sanitized['user']['password'] == '[REDACTED]', \"Nested password not redacted\"\n    assert sanitized['user']['settings']['api_key'] == '[REDACTED]', \"Nested API key not redacted\"\n    print(\"\u2713 Nested sanitization works\")\n"
                  },
                  "endLine": 77,
                  "startLine": 75
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert logger is not None, \"Logger not created\"\n"
                  },
                  "startLine": 86
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    logger = SecureLogger.get_secure_logger('test')\n    assert logger is not None, \"Logger not created\"\n    assert hasattr(logger, 'error'), \"Logger missing error method\"\n"
                  },
                  "endLine": 87,
                  "startLine": 85
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert hasattr(logger, 'error'), \"Logger missing error method\"\n"
                  },
                  "startLine": 87
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    assert logger is not None, \"Logger not created\"\n    assert hasattr(logger, 'error'), \"Logger missing error method\"\n    assert hasattr(logger, 'warning'), \"Logger missing warning method\"\n"
                  },
                  "endLine": 88,
                  "startLine": 86
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert hasattr(logger, 'warning'), \"Logger missing warning method\"\n"
                  },
                  "startLine": 88
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    assert hasattr(logger, 'error'), \"Logger missing error method\"\n    assert hasattr(logger, 'warning'), \"Logger missing warning method\"\n    assert hasattr(logger, 'info'), \"Logger missing info method\"\n"
                  },
                  "endLine": 89,
                  "startLine": 87
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert hasattr(logger, 'info'), \"Logger missing info method\"\n"
                  },
                  "startLine": 89
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    assert hasattr(logger, 'warning'), \"Logger missing warning method\"\n    assert hasattr(logger, 'info'), \"Logger missing info method\"\n    print(\"\u2713 Logger adapter created successfully\")\n"
                  },
                  "endLine": 90,
                  "startLine": 88
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert 'secret123' not in sanitized, \"Password not redacted\"\n"
                  },
                  "startLine": 100
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    sanitized = SecureLogger.sanitize_log_message(message)\n    assert 'secret123' not in sanitized, \"Password not redacted\"\n    assert 'xyz789' not in sanitized, \"Token not redacted\"\n"
                  },
                  "endLine": 101,
                  "startLine": 99
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert 'xyz789' not in sanitized, \"Token not redacted\"\n"
                  },
                  "startLine": 101
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    assert 'secret123' not in sanitized, \"Password not redacted\"\n    assert 'xyz789' not in sanitized, \"Token not redacted\"\n    assert 'abc456' not in sanitized, \"API key not redacted\"\n"
                  },
                  "endLine": 102,
                  "startLine": 100
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert 'abc456' not in sanitized, \"API key not redacted\"\n"
                  },
                  "startLine": 102
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    assert 'xyz789' not in sanitized, \"Token not redacted\"\n    assert 'abc456' not in sanitized, \"API key not redacted\"\n    assert 'password=***' in sanitized, \"Password pattern not found\"\n"
                  },
                  "endLine": 103,
                  "startLine": 101
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert 'password=***' in sanitized, \"Password pattern not found\"\n"
                  },
                  "startLine": 103
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    assert 'abc456' not in sanitized, \"API key not redacted\"\n    assert 'password=***' in sanitized, \"Password pattern not found\"\n    assert 'token=***' in sanitized, \"Token pattern not found\"\n"
                  },
                  "endLine": 104,
                  "startLine": 102
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert 'token=***' in sanitized, \"Token pattern not found\"\n"
                  },
                  "startLine": 104
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    assert 'password=***' in sanitized, \"Password pattern not found\"\n    assert 'token=***' in sanitized, \"Token pattern not found\"\n    assert 'api_key=***' in sanitized, \"API key pattern not found\"\n"
                  },
                  "endLine": 105,
                  "startLine": 103
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        },
        {
          "message": {
            "text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code."
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "region": {
                  "snippet": {
                    "text": "    assert 'api_key=***' in sanitized, \"API key pattern not found\"\n"
                  },
                  "startLine": 105
                },
                "artifactLocation": {
                  "uri": "ThermaCoreApp/validate_secure_logging.py"
                },
                "contextRegion": {
                  "snippet": {
                    "text": "    assert 'token=***' in sanitized, \"Token pattern not found\"\n    assert 'api_key=***' in sanitized, \"API key pattern not found\"\n    print(\"\u2713 Multiple patterns redacted correctly\")\n"
                  },
                  "endLine": 106,
                  "startLine": 104
                }
              }
            }
          ],
          "properties": {
            "issue_confidence": "HIGH",
            "issue_severity": "LOW"
          },
          "ruleId": "B101",
          "ruleIndex": 3
        }
      ]
    }
  ],
  "version": "2.1.0",
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.4.json"
}