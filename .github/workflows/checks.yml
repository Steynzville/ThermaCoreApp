name: Focused Code Quality and Security Checks
permissions:
  contents: read

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js (for pnpm)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8 # or your preferred version

      - name: Install pnpm dependencies (frontend)
        run: pnpm install --frozen-lockfile
        working-directory: ./ # pnpm-lock.yaml is in the root of the checked-out repository

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies (backend)
        run: pip install -r backend/requirements.txt
        working-directory: ./ # requirements.txt is in backend/ relative to the root

      - name: Run Frontend Tests
        run: pnpm test
        working-directory: ./ # Frontend tests are run from the root

      - name: Run Backend Tests
        run: pytest
        working-directory: ./backend # Backend tests are run from the backend directory

  python-quality-and-security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: pip install -r backend/requirements.txt flake8 ruff bandit
        working-directory: ./ # requirements.txt is in backend/ relative to the root

      - name: Run Ruff (Python Linter/Formatter)
        run: ruff check .
        working-directory: ./backend # Ruff runs in the backend directory

      - name: Run Bandit (Python SAST)
        run: bandit -r . -l -f json -o .bandit_report.json
        working-directory: ./backend # Bandit runs in the backend directory

      - name: Upload Bandit Report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: ./backend/.bandit_report.json # Path to the report relative to the repository root

  dependency-and-secret-scanning:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4

      - name: osv-scanner
        uses: google/osv-scanner-action@v2.2.3
        with:
          scan-path: ./ # Scan the entire repository

      - name: Run Secret Scanner
        uses: secret-scanner/action@0.0.2
        with:
          fail_on_new_secrets: true
          working-directory: ./ # Run secret scanner in the repository root
